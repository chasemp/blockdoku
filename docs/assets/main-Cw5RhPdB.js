import"./modulepreload-polyfill-B5Qt9EMX.js";/* empty css             */import{D as P,_ as v}from"./difficulty-settings-manager-D2MsyMLE.js";import{C,G as T,P as x}from"./confirmation-dialog-Bfw5TIb9.js";import{DifficultyManager as E}from"./difficulty-manager-D-G7WLk3.js";import{S as M}from"./sound-manager-DEf2ZdWT.js";class I{constructor(){this.blockShapes=this.defineBlockShapes(),this.currentBlocks=[],this.selectedBlock=null,this.selectedBlockPosition=null}defineBlockShapes(){return{single:{name:"Single",shape:[[1]],color:"#007bff",points:1},line2:{name:"Line 2",shape:[[1,1]],color:"#28a745",points:2},line3:{name:"Line 3",shape:[[1,1,1]],color:"#28a745",points:3},l2x2:{name:"L 2x2",shape:[[1,0],[1,1]],color:"#dc3545",points:3},l3x2:{name:"L 3x2",shape:[[1,0],[1,0],[1,1]],color:"#dc3545",points:4},t3x2:{name:"T 3x2",shape:[[1,1,1],[0,1,0]],color:"#ffc107",points:4},square2x2:{name:"Square 2x2",shape:[[1,1],[1,1]],color:"#6f42c1",points:4},z3x2:{name:"Z 3x2",shape:[[1,1,0],[0,1,1]],color:"#fd7e14",points:4}}}generateRandomBlocks(e=3,t="all",s=null){let i=Object.keys(this.blockShapes);if(s){const a=s.getAllowedShapes(),l=s.getBlockSizeRange();a!=="all"&&(i=i.filter(r=>a.includes(r))),i=i.filter(r=>{const n=this.blockShapes[r].shape,c=Math.max(n.length,n[0].length);return c>=l[0]&&c<=l[1]})}else t==="large"?i=i.filter(a=>{const l=this.blockShapes[a].shape;return Math.max(l.length,l[0].length)>=3}):t==="small"?i=i.filter(a=>{const l=this.blockShapes[a].shape;return Math.max(l.length,l[0].length)<=3}):t==="complex"&&(i=i.filter(a=>(this.blockShapes[a].shape,a.includes("L")||a.includes("T")||a.includes("Z")||a.includes("U")||a.includes("Cross")||a.includes("Plus"))));i.length===0&&(i=Object.keys(this.blockShapes)),this.currentBlocks=[];let o=[...i];for(let a=0;a<e;a++){o.length===0&&(o=[...i]);const l=Math.floor(Math.random()*o.length),r=o[l];o.splice(l,1);const n={...this.blockShapes[r],id:`block_${a}_${Date.now()}`,rotation:0};this.currentBlocks.push(n)}return this.currentBlocks}rotateBlock(e){return e?{...e,shape:this.rotateMatrix(e.shape),rotation:(e.rotation+90)%360}:null}rotateMatrix(e){const t=e.length,s=e[0].length,i=[];for(let o=0;o<s;o++){i[o]=[];for(let a=0;a<t;a++)i[o][a]=e[t-1-a][o]}return i}canPlaceBlock(e,t,s,i){if(!e||!i||!Array.isArray(i)||i.length===0)return console.warn("canPlaceBlock: Invalid inputs",{block:e,board:i}),!1;const o=e.shape;if(!o||!Array.isArray(o)||o.length===0)return console.warn("canPlaceBlock: Invalid block shape",{block:e,shape:o}),!1;const a=i.length;if(t<0||s<0||t+o.length>a||s+o[0].length>a)return!1;for(let l=0;l<o.length;l++)for(let r=0;r<o[l].length;r++)if(o[l][r]===1&&(t+l>=a||s+r>=a||!i[t+l]||i[t+l][s+r]===1))return!1;return!0}placeBlock(e,t,s,i){const o=e.shape,a=i.map(l=>[...l]);for(let l=0;l<o.length;l++)for(let r=0;r<o[l].length;r++)o[l][r]===1&&(a[t+l][s+r]=1);return a}removeBlock(e){this.currentBlocks=this.currentBlocks.filter(t=>t.id!==e)}getBlockById(e){return this.currentBlocks.find(t=>t.id===e)}clearSelection(){this.selectedBlock=null,this.selectedBlockPosition=null}}class L{constructor(e,t,s=null){this.container=document.getElementById(e),this.blockManager=t,this.game=s,this.petrificationManager=(s==null?void 0:s.petrificationManager)||null,this.selectedBlock=null,this.blockElements=new Map,this._placeabilityTimeout=null,this.lastTapTime=null,this._petrificationUpdateInterval=null,this.mouseStart=null,this.mouseStartTime=null,this.mouseStartBlockId=null,this.pieceTimeouts=new Map,this.timeoutCheckInterval=null,this.WARNING_TIME=15e3,this.TIMEOUT_TIME=3e4,this.onPieceTimeout=null,this.timeoutPaused=!1,this.pieceTimeoutEnabled=!1,this.animationSettings={blockHoverEffects:!0,blockSelectionGlow:!0,blockEntranceAnimations:!0,particleEffects:!0,animationSpeed:"normal"},this.loadAnimationSettings(),this.init()}init(){this.render(),this.setupEventListeners(),this.setupAnimationControls()}loadAnimationSettings(){if(this.game&&this.game.settings){const e=this.game.settings;this.animationSettings={blockHoverEffects:e.blockHoverEffects!==!1,blockSelectionGlow:e.blockSelectionGlow!==!1,blockEntranceAnimations:e.blockEntranceAnimations!==!1,particleEffects:e.particleEffects!==!1,animationSpeed:e.animationSpeed||"normal"}}}setupAnimationControls(){const e=this.getSpeedMultiplier();document.documentElement.style.setProperty("--animation-speed-multiplier",e);const t=document.body;t.classList.toggle("no-hover-effects",!this.animationSettings.blockHoverEffects),t.classList.toggle("no-selection-glow",!this.animationSettings.blockSelectionGlow),t.classList.toggle("no-entrance-animations",!this.animationSettings.blockEntranceAnimations),t.classList.toggle("no-particle-effects",!this.animationSettings.particleEffects)}getSpeedMultiplier(){switch(this.animationSettings.animationSpeed){case"slow":return"1.5";case"fast":return"0.5";default:return"1.0"}}render(){this.container&&(this.container.innerHTML=`
            <div class="block-palette">
                <h3>Available Blocks</h3>
                <div class="blocks-container" id="blocks-container">
                    <!-- Blocks will be rendered here -->
                </div>
            </div>
            <button id="rotate-selected" class="rotate-selected-btn" title="Rotate selected block">
                <span>↻</span>
            </button>
        `)}updateBlocks(e,t=0){console.log("BlockPalette.updateBlocks called with blocks:",e);const s=document.getElementById("blocks-container");if(console.log("blocks-container found:",!!s),!s)if(t<5){console.warn(`blocks-container not found! BlockPalette may not be rendered yet. Retrying in 50ms... (attempt ${t+1}/5)`),setTimeout(()=>{this.updateBlocks(e,t+1)},50);return}else{console.error("blocks-container not found after 5 retries! BlockPalette may not be properly initialized.");return}s.innerHTML="",this.blockElements.clear(),e.forEach((i,o)=>{const a=this.createBlockElement(i);this.animationSettings.blockEntranceAnimations&&(a.classList.add("entering"),setTimeout(()=>{a.classList.remove("entering")},o*100+50)),s.appendChild(a),this.blockElements.set(i.id,a)}),this.petrificationManager&&this.petrificationManager.isEnabled()?this.startPetrificationUpdates():this.stopPetrificationUpdates(),this.resetPieceTimeouts(e)}createBlockElement(e){const t=document.createElement("div");t.className="block-item",t.dataset.blockId=e.id,t.title=`Click to select, double-click to rotate: ${e.name} (${e.points} pts)`;const s=document.createElement("div");s.className="block-info";const i=document.createElement("div");i.className="block-shape";const o=30,a=document.createElement("div");a.className="block-preview",a.style.width=`${e.shape[0].length*o}px`,a.style.height=`${e.shape.length*o}px`;const l=document.createElement("canvas");l.width=e.shape[0].length*o,l.height=e.shape.length*o;const r=l.getContext("2d");r.fillStyle=e.color,r.strokeStyle=this.darkenColor(e.color),r.lineWidth=2;for(let h=0;h<e.shape.length;h++)for(let d=0;d<e.shape[h].length;d++)if(e.shape[h][d]===1){const m=d*o,f=h*o;r.fillRect(m,f,o,o),r.strokeRect(m,f,o,o)}a.appendChild(l),i.appendChild(a),s.appendChild(i);const n=document.createElement("div");n.className="block-points",n.textContent=e.points,s.appendChild(n);const c=document.createElement("div");return c.className="block-points-overlay",c.textContent=`${e.points} pts`,s.appendChild(c),t.appendChild(s),t}setupEventListeners(){document.addEventListener("click",e=>{if(e.target.closest(".block-item")){const s=e.target.closest(".block-item").dataset.blockId;this.selectBlock(s)}e.target.closest("#rotate-selected")&&(e.preventDefault(),this.selectedBlock&&this.rotateBlock(this.selectedBlock.id))}),document.addEventListener("dblclick",e=>{if(e.target.closest(".block-item")){e.preventDefault();const s=e.target.closest(".block-item").dataset.blockId;this.rotateBlock(s)}}),document.addEventListener("mousedown",e=>{if(e.target.closest(".block-item")){const t=e.target.closest(".block-item"),s=t.dataset.blockId;this.mouseStart={clientX:e.clientX,clientY:e.clientY},this.mouseStartTime=Date.now(),this.mouseStartBlockId=s,t.style.transform="scale(0.95)",t.style.transition="transform 0.1s ease"}}),document.addEventListener("mousemove",e=>{if(this.mouseStart&&this.mouseStartBlockId){if(!this.blockManager.getBlockById(this.mouseStartBlockId)){this.resetMouseDragState();return}const s=Math.abs(e.clientX-this.mouseStart.clientX),i=Math.abs(e.clientY-this.mouseStart.clientY),o=Date.now()-this.mouseStartTime;if((s>5||i>5||o>100)&&(e.preventDefault(),!this.isDragging)){this.isDragging=!0,this.startDragFromPalette({clientX:e.clientX,clientY:e.clientY});const a=document.querySelector(`[data-block-id="${this.mouseStartBlockId}"]`);a&&a.classList.add("dragging")}}}),document.addEventListener("mouseup",e=>{if(this.mouseStart){const t=this.blockManager.getBlockById(this.mouseStartBlockId),s=Date.now()-this.mouseStartTime,i=Math.abs(e.clientX-this.mouseStart.clientX),o=Math.abs(e.clientY-this.mouseStart.clientY);this.isDragging?this.endDragFromPalette():t&&s<200&&i<5&&o<5&&this.selectBlock(this.mouseStartBlockId),this.resetMouseDragState()}}),document.addEventListener("touchstart",e=>{if(e.target.closest(".block-item")){const t=e.target.closest(".block-item"),s=t.dataset.blockId;this.touchStart=e.touches[0],this.touchStartTime=Date.now(),this.touchStartBlockId=s,t.style.transform="scale(0.95)",t.style.transition="transform 0.1s ease"}},{passive:!0}),document.addEventListener("touchmove",e=>{if(this.touchStart&&this.touchStartBlockId){if(!this.blockManager.getBlockById(this.touchStartBlockId)){this.resetDragState();return}const s=e.touches[0],i=Math.abs(s.clientX-this.touchStart.clientX),o=Math.abs(s.clientY-this.touchStart.clientY),a=Date.now()-this.touchStartTime;if((i>5||o>5||a>100)&&(e.preventDefault(),!this.isDragging)){this.isDragging=!0,this.startDragFromPalette(s);const l=document.querySelector(`[data-block-id="${this.touchStartBlockId}"]`);l&&l.classList.add("dragging")}}},{passive:!1}),document.addEventListener("touchend",e=>{if(this.touchStart){const t=this.blockManager.getBlockById(this.touchStartBlockId),s=e.changedTouches[0],i=Date.now()-this.touchStartTime,o=Math.abs(s.clientX-this.touchStart.clientX),a=Math.abs(s.clientY-this.touchStart.clientY);this.isDragging?this.endDragFromPalette():t&&o<5&&a<5&&i<200&&(this.lastTapTime&&Date.now()-this.lastTapTime<300?(e.preventDefault(),this.rotateBlock(this.touchStartBlockId),this.lastTapTime=null):(this.selectBlock(this.touchStartBlockId),this.lastTapTime=Date.now())),this.resetDragState()}},{passive:!1}),document.addEventListener("touchcancel",e=>{this.touchStart&&(this.resetDragState(),this.lastTapTime=null)},{passive:!0})}resetDragState(){if(this.touchStartBlockId){const e=document.querySelector(`[data-block-id="${this.touchStartBlockId}"]`);e&&(e.classList.remove("dragging"),e.style.transform="",e.style.transition="")}this.touchStart=null,this.touchStartTime=null,this.touchStartBlockId=null,this.isDragging=!1}resetMouseDragState(){if(this.mouseStartBlockId){const e=document.querySelector(`[data-block-id="${this.mouseStartBlockId}"]`);e&&(e.classList.remove("dragging"),e.style.transform="",e.style.transition="")}this.mouseStart=null,this.mouseStartTime=null,this.mouseStartBlockId=null,this.isDragging=!1}startDragFromPalette(e){const t=this.touchStartBlockId||this.mouseStartBlockId,s=this.blockManager.getBlockById(t);if(!s){this.resetDragState(),this.resetMouseDragState();return}this.selectBlock(t);const i=new CustomEvent("blockDragStart",{detail:{block:s,input:e}});document.dispatchEvent(i)}endDragFromPalette(){const e=new CustomEvent("blockDragEnd",{detail:{block:this.selectedBlock}});document.dispatchEvent(e)}selectBlock(e){if(this.clearSelection(),this.selectedBlock=this.blockManager.getBlockById(e),this.selectedBlock){const t=this.blockElements.get(e);t&&(t.classList.add("selected"),this.addSelectionEffects(t))}this.updateRotateButton(),this.dispatchSelectionEvent()}addSelectionEffects(e){this.game&&this.game.soundManager&&this.game.soundManager.playBlockSelect(),this.animationSettings.particleEffects&&this.createSelectionParticles(e),this.game&&this.game.hapticFeedback&&this.game.hapticFeedback.light()}createSelectionParticles(e){if(!this.animationSettings.particleEffects)return;const t=e.getBoundingClientRect(),s=t.left+t.width/2,i=t.top+t.height/2;for(let o=0;o<3;o++){const a=document.createElement("div");a.className="selection-particle",a.style.cssText=`
                position: fixed;
                left: ${s}px;
                top: ${i}px;
                width: 4px;
                height: 4px;
                background: var(--primary-color);
                border-radius: 50%;
                pointer-events: none;
                z-index: 1000;
                animation: particle-burst ${.6*this.getSpeedMultiplier()}s ease-out forwards;
                animation-delay: ${o*.05}s;
                transform-origin: center;
            `;const l=360/3*o;a.style.setProperty("--particle-angle",`${l}deg`),document.body.appendChild(a),setTimeout(()=>{a.parentNode&&a.parentNode.removeChild(a)},800)}}selectBlockById(e){this.selectBlock(e)}rotateBlock(e){const t=this.blockManager.getBlockById(e);if(!t)return;const s=this.blockManager.rotateBlock(t);if(s){const i=this.blockManager.currentBlocks.findIndex(o=>o.id===e);i!==-1&&(this.blockManager.currentBlocks[i]=s,this.updateBlocks(this.blockManager.currentBlocks),this.selectedBlock&&this.selectedBlock.id===e&&(this.selectedBlock=s,this.dispatchSelectionEvent()),this.game&&this.game.effectsManager&&this.game.effectsManager.onBlockRotate())}}clearSelection(){this.blockElements.forEach(e=>{e.classList.remove("selected")}),this.selectedBlock=null,this.updateRotateButton()}dispatchSelectionEvent(){const e=new CustomEvent("blockSelected",{detail:{block:this.selectedBlock}});document.dispatchEvent(e)}darkenColor(e){const t=e.replace("#",""),s=parseInt(t.substr(0,2),16),i=parseInt(t.substr(2,2),16),o=parseInt(t.substr(4,2),16),a=Math.max(0,s-30),l=Math.max(0,i-30),r=Math.max(0,o-30);return`rgb(${a}, ${l}, ${r})`}updateRotateButton(){const e=document.getElementById("rotate-selected");e&&(this.selectedBlock?(e.disabled=!1,e.classList.remove("disabled")):(e.disabled=!0,e.classList.add("disabled")))}getSelectedBlock(){return this.selectedBlock}setPlaceability(e,t={}){const{highlightLast:s=!1,durationMs:i=1250}=t;this._placeabilityTimeout&&(clearTimeout(this._placeabilityTimeout),this._placeabilityTimeout=null);let o=[];if(Object.keys(e||{}).forEach(a=>{e[a]&&o.push(a)}),this.blockElements.forEach((a,l)=>{const r=!!e[l];a.classList.toggle("unplaceable",!r),a.classList.toggle("placeable",r),a.classList.remove("last-playable")}),s&&o.length===1){const a=o[0],l=this.blockElements.get(a);l&&l.classList.add("last-playable")}i>0&&(this._placeabilityTimeout=setTimeout(()=>{this.clearPlaceability()},i))}showPreGameOverIndicator(e=1250){if(!this.container)return;const t=this.container.querySelector(".block-palette");t&&t.classList.add("pre-game-over"),this.blockElements.forEach(s=>{s.classList.add("unplaceable"),s.classList.remove("last-playable")}),this._placeabilityTimeout&&clearTimeout(this._placeabilityTimeout),e>0&&(this._placeabilityTimeout=setTimeout(()=>{this.clearPlaceability()},e))}clearPlaceability(){const e=this.container?this.container.querySelector(".block-palette"):null;e&&e.classList.remove("pre-game-over"),this.blockElements.forEach(t=>{t.classList.remove("unplaceable"),t.classList.remove("placeable"),t.classList.remove("last-playable")}),this._placeabilityTimeout&&(clearTimeout(this._placeabilityTimeout),this._placeabilityTimeout=null)}startPetrificationUpdates(){this.stopPetrificationUpdates(),this._petrificationUpdateInterval=setInterval(()=>{this.updatePetrificationVisuals()},100)}stopPetrificationUpdates(){this._petrificationUpdateInterval&&(clearInterval(this._petrificationUpdateInterval),this._petrificationUpdateInterval=null),this.blockElements.forEach(e=>{e.classList.remove("petrified","warning-7s","warning-3s")})}updatePetrificationVisuals(){!this.petrificationManager||!this.petrificationManager.isEnabled()||this.blockElements.forEach((e,t)=>{const s=this.petrificationManager.getBlockState(t);e.classList.remove("petrified","warning-7s","warning-3s"),s.petrified?e.classList.add("petrified"):s.warning==="3s"?e.classList.add("warning-3s"):s.warning==="7s"&&e.classList.add("warning-7s")})}resetPieceTimeouts(e){this.pieceTimeouts.clear();const t=Date.now();e.forEach(s=>{this.pieceTimeouts.set(s.id,{startTime:t,warningShown:!1,timedOut:!1})}),!this.timeoutCheckInterval&&this.pieceTimeoutEnabled&&this.startTimeoutChecking()}resetPieceTimeout(e){if(this.pieceTimeouts.has(e)){this.pieceTimeouts.delete(e);const t=this.blockElements.get(e);t&&t.classList.remove("piece-struggling","piece-timed-out")}}startTimeoutChecking(){this.timeoutCheckInterval&&clearInterval(this.timeoutCheckInterval),this.timeoutCheckInterval=setInterval(()=>{this.checkPieceTimeouts()},500)}stopTimeoutChecking(){this.timeoutCheckInterval&&(clearInterval(this.timeoutCheckInterval),this.timeoutCheckInterval=null),this.blockElements.forEach(e=>{e.classList.remove("piece-struggling","piece-timed-out")}),this.pieceTimeouts.clear()}pauseTimeoutChecking(){this.timeoutPaused=!0;const e=Date.now();this.pieceTimeouts.forEach(t=>{t.pauseTime||(t.pauseTime=e)})}resumeTimeoutChecking(){this.timeoutPaused=!1;const e=Date.now();this.pieceTimeouts.forEach(t=>{if(t.pauseTime){const s=e-t.pauseTime;t.startTime+=s,delete t.pauseTime}})}checkPieceTimeouts(){if(this.timeoutPaused||!this.pieceTimeoutEnabled)return;const e=Date.now();this.pieceTimeouts.forEach((t,s)=>{const i=e-t.startTime,o=this.blockElements.get(s);o&&(i>=this.TIMEOUT_TIME&&!t.timedOut?(t.timedOut=!0,o.classList.remove("piece-struggling"),o.classList.add("piece-timed-out"),this.showPieceTimeoutNotification(),this.onPieceTimeout&&this.onPieceTimeout(s)):i>=this.WARNING_TIME&&!t.warningShown&&(t.warningShown=!0,o.classList.add("piece-struggling")))})}showPieceTimeoutNotification(){const e=document.getElementById("blocks-container");if(!e)return;const t=e.getBoundingClientRect(),s=t.left+t.width/2,i=t.top+t.height/2,o=document.createElement("div");o.className="floating-piece-timeout",o.textContent="Piece Lodged in Place!",o.style.position="fixed",o.style.left=`${s}px`,o.style.top=`${i}px`,document.body.appendChild(o),setTimeout(()=>{o.parentElement&&o.parentElement.removeChild(o)},3e3)}setPieceTimeoutCallback(e){this.onPieceTimeout=e}areAllPiecesTimedOut(){if(this.pieceTimeouts.size===0)return!1;let e=!0;return this.pieceTimeouts.forEach(t=>{t.timedOut||(e=!1)}),e}setPieceTimeoutEnabled(e){this.pieceTimeoutEnabled=e,e?this.pieceTimeouts.size>0&&this.startTimeoutChecking():this.stopTimeoutChecking()}}class D{constructor(e=null,t=null){this.score=0,this.level=1,this.linesCleared=0,this.petrificationManager=e,this.difficultyManager=t,this.combo=0,this.maxCombo=0,this.totalCombos=0,this.maxTotalCombos=0,this.streakCount=0,this.maxStreakCount=0,this.totalStreakBonus=0,this.placementTimes=[],this.speedBonuses=[],this.totalSpeedBonus=0,this.fastestPlacement=null,this.averagePlacementSpeed=0,this.rowsClearedCount=0,this.columnsClearedCount=0,this.squaresClearedCount=0,this.comboActivations=0,this.pointsBreakdown={linePoints:0,squarePoints:0,comboBonusPoints:0,placementPoints:0,streakBonusPoints:0,emptyGridBonusPoints:0},this.lastEmptyGridBonusLevel=0,this.emptyGridBonusThreshold=5,this.basePoints={single:.5,line:15,square:20,combo:5},this.speedConfig={mode:"bonus",thresholds:[{maxTime:500,bonus:2,label:"Lightning Fast"},{maxTime:1e3,bonus:1,label:"Very Fast"},{maxTime:2e3,bonus:.5,label:"Fast"},{maxTime:3e3,bonus:.25,label:"Quick"}],maxBonus:5,streakMultiplier:1.2},this.levelProgression={easy:{baseRange:150,stepIncrease:.05,roundingMode:"round"},normal:{baseRange:100,stepIncrease:.05,roundingMode:"round"},hard:{baseRange:80,stepIncrease:.05,roundingMode:"round"},expert:{baseRange:60,stepIncrease:.05,roundingMode:"round"}}}setPetrificationManager(e){this.petrificationManager=e}setDifficultyManager(e){this.difficultyManager=e}getCurrentDifficulty(){return this.difficultyManager?this.difficultyManager.getCurrentDifficulty():"normal"}checkForCompletedLines(e){const t={rows:[],columns:[],squares:[]};for(let s=0;s<e.length;s++)this.isRowComplete(e,s)&&(!this.petrificationManager||this.petrificationManager.canClearRow(e,s))&&t.rows.push(s);for(let s=0;s<e[0].length;s++)this.isColumnComplete(e,s)&&(!this.petrificationManager||this.petrificationManager.canClearColumn(e,s))&&t.columns.push(s);for(let s=0;s<3;s++)for(let i=0;i<3;i++)this.isSquareComplete(e,s,i)&&(!this.petrificationManager||this.petrificationManager.canClearSquare(e,s,i))&&t.squares.push({row:s,col:i});return t}checkAndClearLines(e,t=1){const s=this.checkForCompletedLines(e);return this.applyClears(e,s,t)}calculateScoreForClears(e,t=1){const s=e.rows.length,i=e.columns.length,o=e.squares.length,a=s+i+o;if(a===0)return{scoreGained:0,isComboEvent:!1,clearTypes:[],totalClears:0,breakdown:{linePoints:0,squarePoints:0,comboBonus:0}};const l=(s+i)*this.basePoints.line,r=o*this.basePoints.square;let n=l+r;const c=[];s>0&&c.push("row"),i>0&&c.push("column"),o>0&&c.push("square");const h=c.length>=2||a>=2;let d=0;h&&(d=this.calculateComboBonus(a),n+=d);const m=l+r,f=Math.floor(m*t),u=Math.floor(d*t);return n=f+u,{scoreGained:n,isComboEvent:h,clearTypes:c,totalClears:a,breakdown:{linePoints:Math.floor(l*t),squarePoints:Math.floor(r*t),comboBonus:u}}}clearLinesFromBoard(e,t){console.log("ScoringSystem.clearLinesFromBoard called with:",{board:e,clearedLines:t});let s=e.map(o=>[...o]),i=0;return t.rows.forEach(o=>{console.log(`Clearing row ${o}`),s[o]=new Array(e[0].length).fill(0),i++}),t.columns.forEach(o=>{console.log(`Clearing column ${o}`);for(let a=0;a<e.length;a++)s[a][o]=0;i++}),t.squares.forEach(o=>{console.log(`Clearing square at row ${o.row}, col ${o.col}`);const a=o.row*3,l=o.col*3;for(let r=a;r<a+3;r++)for(let n=l;n<l+3;n++)s[r][n]=0;i++}),console.log(`Total cleared: ${i}`),{board:s,clearedCount:i,clearedLines:t}}isRowComplete(e,t){return e[t].every(s=>s===1)}isColumnComplete(e,t){return e.every(s=>s[t]===1)}isSquareComplete(e,t,s){const i=t*3,o=s*3;for(let a=i;a<i+3;a++)for(let l=o;l<o+3;l++)if(e[a][l]!==1)return!1;return!0}applyClears(e,t,s=1){console.log("ScoringSystem.applyClears called with:",{board:e,clearedLines:t});let i=e.map(n=>[...n]),o=0;t.rows.forEach(n=>{console.log(`Clearing row ${n}`),i[n]=new Array(e[0].length).fill(0),o++}),t.columns.forEach(n=>{console.log(`Clearing column ${n}`);for(let c=0;c<e.length;c++)i[c][n]=0;o++}),t.squares.forEach(n=>{console.log(`Clearing square at row ${n.row}, col ${n.col}`);const c=n.row*3,h=n.col*3;for(let d=c;d<c+3;d++)for(let m=h;m<h+3;m++)i[d][m]=0;o++}),console.log(`Total cleared: ${o}`);const a=[];t.rows.length>0&&a.push("row"),t.columns.length>0&&a.push("column"),t.squares.length>0&&a.push("square");const l=t.rows.length+t.columns.length+t.squares.length,r=a.length>=2||l>=2;return o>0?(this.rowsClearedCount+=t.rows.length,this.columnsClearedCount+=t.columns.length,this.squaresClearedCount+=t.squares.length,this.calculateScore(t,r,s),this.linesCleared+=o,r?(this.combo++,this.maxCombo=Math.max(this.maxCombo,this.combo),this.streakCount++,this.maxStreakCount=Math.max(this.maxStreakCount,this.streakCount),this.totalCombos++,this.maxTotalCombos=Math.max(this.maxTotalCombos,this.totalCombos),this.comboActivations++):this.combo=0):(this.combo=0,this.streakCount=0),{board:i,clearedCount:o,scoreGained:this.getLastScoreGained(),isCombo:r,comboTypes:a,clearedLines:t}}calculateScore(e,t=!1,s=1){const i=e.rows.length,o=e.columns.length,a=e.squares.length,l=i+o+a;if(l===0)return;const r=(i+o)*this.basePoints.line,n=a*this.basePoints.square;let c=r+n,h=0,d=0;t&&(h=this.calculateComboBonus(l),c+=h,d=this.calculateStreakBonus(this.streakCount),c+=d);const m=r+n,f=Math.floor(m*s),u=Math.floor(h*s),b=Math.floor(d*s);c=f+u+b,this.pointsBreakdown.linePoints+=Math.floor(r*s),this.pointsBreakdown.squarePoints+=Math.floor(n*s),this.pointsBreakdown.comboBonusPoints+=u,this.pointsBreakdown.streakBonusPoints+=b,this.score+=c,this.lastScoreGained=c,this.updateLevelFromScore()}addPlacementPoints(e,t=1){const s=Math.max(0,e|0);if(s===0)return;const i=Math.floor(s*t);this.score+=i,this.lastScoreGained=i,this.pointsBreakdown.placementPoints+=i,this.updateLevelFromScore()}recordPlacementTime(){const e=Date.now();if(this.placementTimes.push(e),this.speedConfig.mode!=="ignored"&&this.placementTimes.length>=2){const t=e-this.placementTimes[this.placementTimes.length-2],s=this.calculateSpeedBonus(t);s>0&&(this.speedBonuses.push({time:t,bonus:s,timestamp:e}),this.totalSpeedBonus+=s,this.speedConfig.mode==="punishment"?(this.score-=s,this.lastScoreGained-=s):this.speedConfig.mode==="bonus"&&(this.score+=s,this.lastScoreGained+=s),(!this.fastestPlacement||t<this.fastestPlacement)&&(this.fastestPlacement=t),this.updateAveragePlacementSpeed())}}calculateSpeedBonus(e){if(this.speedConfig.mode==="ignored"||e<=0)return 0;if(this.speedConfig.mode==="bonus"){for(const t of this.speedConfig.thresholds)if(e<=t.maxTime){let s=t.bonus;return this.getRecentFastPlacements()>=2&&(s=Math.floor(s*this.speedConfig.streakMultiplier)),Math.min(s,this.speedConfig.maxBonus)}return 0}else if(this.speedConfig.mode==="punishment"){if(e>1e3){const s=(e-1e3)/1e3;let i=Math.floor(s);const o=1+(this.level-1)*.03;i=Math.floor(i*o);const a=this.speedConfig.maxBonus*2;return Math.min(i,a)}return 0}return 0}getRecentFastPlacements(){if(this.speedBonuses.length===0)return 0;const e=Math.min(5,this.speedBonuses.length);return this.speedBonuses.slice(-e).filter(s=>s.bonus>0).length}updateAveragePlacementSpeed(){if(this.placementTimes.length<2){this.averagePlacementSpeed=0;return}let e=0;for(let t=1;t<this.placementTimes.length;t++)e+=this.placementTimes[t]-this.placementTimes[t-1];this.averagePlacementSpeed=e/(this.placementTimes.length-1)}getSpeedStats(){return{totalSpeedBonus:this.totalSpeedBonus,fastestPlacement:this.fastestPlacement,averagePlacementSpeed:this.averagePlacementSpeed,speedBonuses:this.speedBonuses,recentFastPlacements:this.getRecentFastPlacements(),totalPlacements:this.placementTimes.length}}setSpeedMode(e){["bonus","punishment","ignored"].includes(e)?this.speedConfig.mode=e:(console.warn(`Invalid speed mode: ${e}. Using 'bonus' as default.`),this.speedConfig.mode="bonus")}getSpeedMode(){return this.speedConfig.mode}setSpeedBonusEnabled(e){this.speedConfig.mode=e?"bonus":"ignored"}isSpeedBonusEnabled(){return this.speedConfig.mode!=="ignored"}setSpeedPunishmentMode(e){this.speedConfig.mode=e?"punishment":"bonus"}isSpeedPunishmentMode(){return this.speedConfig.mode==="punishment"}resetStreak(){this.combo=0,this.streakCount=0}getLastScoreGained(){return this.lastScoreGained||0}getScore(){return this.score}getLevel(){return this.level}getCombo(){return this.combo}getMaxCombo(){return this.maxCombo}getTotalCombos(){return this.totalCombos}getMaxTotalCombos(){return this.maxTotalCombos}getComboTotal(){return this.comboActivations}getLinesCleared(){return this.linesCleared}reset(){this.score=0,this.level=1,this.linesCleared=0,this.combo=0,this.maxCombo=0,this.totalCombos=0,this.maxTotalCombos=0,this.streakCount=0,this.maxStreakCount=0,this.totalStreakBonus=0,this.placementTimes=[],this.speedBonuses=[],this.totalSpeedBonus=0,this.fastestPlacement=null,this.averagePlacementSpeed=0,this.lastScoreGained=0,this.rowsClearedCount=0,this.columnsClearedCount=0,this.squaresClearedCount=0,this.comboActivations=0,this.pointsBreakdown={linePoints:0,squarePoints:0,comboBonusPoints:0,placementPoints:0,streakBonusPoints:0,emptyGridBonusPoints:0},this.lastEmptyGridBonusLevel=0}applyRounding(e,t){switch(t){case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);case"round":return Math.round(e);default:return e}}getLevelThreshold(e){if(e<=1)return 0;const t=this.getCurrentDifficulty(),s=this.levelProgression[t]||this.levelProgression.normal,i=s.baseRange,o=s.stepIncrease,a=s.roundingMode;let l=i+1,r=i;for(let n=2;n<e;n++)r=this.applyRounding(r*(1+o),a),l+=r;return l}updateLevelFromScore(){let e=1;const t=200;for(let s=2;s<=t;s++){const i=this.getLevelThreshold(s);if(this.score>=i){e=s;continue}break}e>this.level&&(this.level=e)}countEmptySquares(e){if(!e||!Array.isArray(e)||e.length===0)return 0;let t=0;for(let s=0;s<e.length;s++)for(let i=0;i<e[s].length;i++)e[s][i]===0&&t++;return t}shouldGiveEmptyGridBonus(){return this.level%this.emptyGridBonusThreshold===0&&this.level>this.lastEmptyGridBonusLevel}calculateEmptyGridBonus(e){return this.shouldGiveEmptyGridBonus()?this.countEmptySquares(e)*2:0}applyEmptyGridBonus(e){if(!this.shouldGiveEmptyGridBonus())return 0;const t=this.calculateEmptyGridBonus(e);return t>0&&(this.score+=t,this.lastScoreGained+=t,this.pointsBreakdown.emptyGridBonusPoints+=t,this.lastEmptyGridBonusLevel=this.level),t}calculateComboBonus(e){if(e<2)return 0;let t=0;for(let s=2;s<=e;s++)s===2?t+=10:s===3||s===4?t+=15:s===5?t+=50:t+=100;return t}calculateStreakBonus(e){return e<2?0:e<=10?e*10:100+(e-10)*100}getStats(){return{score:this.score,level:this.level,linesCleared:this.linesCleared,combo:this.combo,maxCombo:this.maxCombo,totalCombos:this.totalCombos,maxTotalCombos:this.maxTotalCombos,streakCount:this.streakCount,maxStreakCount:this.maxStreakCount,totalStreakBonus:this.totalStreakBonus,rowClears:this.rowsClearedCount,columnClears:this.columnsClearedCount,squareClears:this.squaresClearedCount,comboActivations:this.comboActivations,breakdownBase:{linePoints:this.pointsBreakdown.linePoints,squarePoints:this.pointsBreakdown.squarePoints,comboBonusPoints:this.pointsBreakdown.comboBonusPoints,placementPoints:this.pointsBreakdown.placementPoints,streakBonusPoints:this.pointsBreakdown.streakBonusPoints,emptyGridBonusPoints:this.pointsBreakdown.emptyGridBonusPoints},speedStats:this.getSpeedStats()}}}class w{constructor(){this.isOnline=navigator.onLine,this.offlineIndicator=null,this.init()}init(){this.setupEventListeners(),this.createOfflineIndicator(),this.updateOfflineStatus()}setupEventListeners(){window.addEventListener("online",()=>{console.log("PWA: Back online"),this.isOnline=!0,this.updateOfflineStatus()}),window.addEventListener("offline",()=>{console.log("PWA: Gone offline"),this.isOnline=!1,this.updateOfflineStatus()}),document.addEventListener("visibilitychange",()=>{document.hidden?this.handleAppBlur():this.handleAppFocus()})}createOfflineIndicator(){this.offlineIndicator=document.createElement("div"),this.offlineIndicator.id="offline-indicator",this.offlineIndicator.className="offline-indicator",this.offlineIndicator.innerHTML="📡 Offline Mode",this.offlineIndicator.style.cssText=`
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            background: #ff6b35;
            color: white;
            text-align: center;
            padding: 0.5rem;
            font-size: 0.9rem;
            font-weight: 500;
            z-index: 1000;
            transform: translateY(-100%);
            transition: transform 0.3s ease;
        `,document.body.appendChild(this.offlineIndicator)}updateOfflineStatus(){this.offlineIndicator&&(this.isOnline?(this.offlineIndicator.style.transform="translateY(-100%)",this.offlineIndicator.innerHTML="📡 Offline Mode"):(this.offlineIndicator.style.transform="translateY(0)",this.offlineIndicator.innerHTML="📡 Offline Mode - Game works without internet!"))}handleAppBlur(){console.log("PWA: App blurred")}handleAppFocus(){console.log("PWA: App focused")}isStandalone(){return window.matchMedia("(display-mode: standalone)").matches||window.navigator.standalone===!0}getStatus(){return{isOnline:this.isOnline,isStandalone:this.isStandalone(),supportsOffline:"serviceWorker"in navigator}}}const A=Object.freeze(Object.defineProperty({__proto__:null,OfflineManager:w},Symbol.toStringTag,{value:"Module"}));class G{constructor(e,t){this.game=e,this.difficultyManager=t,this.hintsActive=!1,this.validPositions=[],this.hintCooldown=0,this.lastHintTime=0,this.hintDuration=5e3,this.cooldownDuration=1e4}update(e){this.hintCooldown>0&&(this.hintCooldown-=e)}isHintAvailable(){return this.difficultyManager.isHintsEnabled()&&this.game.enableHints&&this.hintCooldown<=0&&this.game.selectedBlock!==null}toggleHints(){this.hintsActive?this.hideHints():this.showHint(),this.game.updateHintControls&&this.game.updateHintControls()}showHint(){return this.isHintAvailable()?(this.hintsActive=!0,this.lastHintTime=Date.now(),this.hintCooldown=this.cooldownDuration,this.findValidPositions(),this.game.drawBoard(),!0):!1}hideHints(){this.hintsActive=!1,this.validPositions=[],this.game.drawBoard()}findValidPositions(){if(!this.game.selectedBlock)return;this.validPositions=[];const e=this.game.selectedBlock;this.game.board;const t=this.game.boardSize;for(let s=0;s<t;s++)for(let i=0;i<t;i++)this.game.canPlaceBlock(s,i)&&this.validPositions.push({row:s,col:i});this.validPositions.sort((s,i)=>{const o=this.calculatePositionScore(s.row,s.col,e);return this.calculatePositionScore(i.row,i.col,e)-o})}calculatePositionScore(e,t,s){let i=0;const o=this.simulateBlockPlacement(e,t,s),a=this.checkForCompletedLines(o);i+=(a.rows.length+a.columns.length+a.squares.length)*100,(a.rows.length>1||a.columns.length>1||a.squares.length>1)&&(i+=200);const l=this.game.boardSize/2,r=this.game.boardSize/2,n=Math.abs(e-l)+Math.abs(t-r);return i+=(this.game.boardSize-n)*10,i}checkForCompletedLines(e){const t=[],s=[],i=[];for(let o=0;o<e.length;o++)e[o].every(a=>a===1)&&t.push(o);for(let o=0;o<e[0].length;o++)e.every(a=>a[o]===1)&&s.push(o);for(let o=0;o<3;o++)for(let a=0;a<3;a++){const l=o*3,r=a*3;let n=!0;for(let c=l;c<l+3;c++){for(let h=r;h<r+3;h++)if(e[c][h]!==1){n=!1;break}if(!n)break}n&&i.push({row:o,col:a})}return{rows:t,columns:s,squares:i}}simulateBlockPlacement(e,t,s){const i=this.game.board.map(o=>[...o]);return this.game.blockManager.canPlaceBlock(s,e,t,i)?this.game.blockManager.placeBlock(s,e,t,i):i}drawHints(e){if(!this.hintsActive||this.validPositions.length===0)return;const t=this.game.actualCellSize||this.game.cellSize;e.save(),e.globalAlpha=.8,this.validPositions.slice(0,3).forEach((i,o)=>{const a=i.col*t,l=i.row*t,r="#4CAF50",n=o===0?3:2;e.strokeStyle=r,e.lineWidth=n,e.setLineDash(o===0?[]:[5,5]),e.strokeRect(a+1,l+1,t-2,t-2),e.shadowColor=r,e.shadowBlur=8,e.strokeRect(a+1,l+1,t-2,t-2)}),e.restore()}getHintCount(){return this.validPositions.length}getBestPosition(){return this.validPositions.length>0?this.validPositions[0]:null}getHintStatus(){return{active:this.hintsActive,available:this.isHintAvailable()||this.hintsActive,cooldownRemaining:Math.max(0,this.hintCooldown),validPositions:this.validPositions.length}}forceShowHints(){this.hintsActive=!0,this.hintCooldown=0,this.findValidPositions()}reset(){this.hintsActive=!1,this.validPositions=[],this.hintCooldown=0,this.lastHintTime=0}}class z{constructor(e){this.difficultyManager=e,this.timeLimit=null,this.timeRemaining=0,this.isActive=!1,this.isPaused=!1,this.startTime=0,this.pausedTime=0,this.timeBonus=0,this.warningThreshold=30,this.criticalThreshold=10}initialize(){this.timeLimit=this.difficultyManager.getTimeLimit(),this.timeLimit&&(this.timeRemaining=this.timeLimit,this.isActive=!0)}start(){!this.isActive||this.timeLimit===null||(this.startTime=Date.now(),this.isPaused=!1,this.pausedTime=0)}pause(){!this.isActive||this.isPaused||(this.isPaused=!0,this.pausedTime=Date.now())}resume(){if(!this.isActive||!this.isPaused)return;const e=Date.now()-this.pausedTime;this.startTime+=e,this.isPaused=!1}update(){if(!this.isActive||this.isPaused||this.timeLimit===null||this.startTime===0)return!0;const e=Date.now()-this.startTime;return this.timeRemaining=Math.max(0,this.timeLimit-Math.floor(e/1e3)),this.timeRemaining>0}addTimeBonus(e){this.timeRemaining+=e,this.timeBonus+=e}getTimeRemaining(){return this.timeRemaining}getTimeBonus(){return this.timeBonus}isTimeUp(){return this.isActive&&this.timeLimit!==null&&this.startTime>0&&this.timeRemaining<=0}isWarningTime(){return this.timeRemaining<=this.warningThreshold&&this.timeRemaining>this.criticalThreshold}isCriticalTime(){return this.timeRemaining<=this.criticalThreshold}getTimeStatus(){return{remaining:this.timeRemaining,limit:this.timeLimit,isActive:this.isActive,isPaused:this.isPaused,isWarning:this.isWarningTime(),isCritical:this.isCriticalTime(),bonus:this.timeBonus}}formatTime(e){const t=Math.floor(e/60),s=e%60;return`${t}:${s.toString().padStart(2,"0")}`}getFormattedTimeRemaining(){return this.formatTime(this.timeRemaining)}getFormattedTimeLimit(){return this.formatTime(this.timeLimit)}calculateTimeBonus(e){const t=e.rows.length+e.columns.length+e.squares.length;if(t===0)return 0;let s=t*5;t>1&&(s+=(t-1)*3);const i=this.difficultyManager.getComboThreshold();return t>=i&&(s+=10),s}getTimePressureEffects(){return this.isActive?this.isCriticalTime()?{type:"critical",color:"#ff0000",intensity:1,pulse:!0}:this.isWarningTime()?{type:"warning",color:"#ff8800",intensity:.7,pulse:!1}:null:null}reset(){this.timeRemaining=this.timeLimit||0,this.isActive=this.timeLimit!==null,this.isPaused=!1,this.startTime=0,this.pausedTime=0,this.timeBonus=0}disable(){this.isActive=!1,this.timeLimit=null,this.timeRemaining=0}}class R{constructor(e,t){this.game=e,this.difficultyManager=t,this.container=null,this.isVisible=!1,this.confirmationDialog=new C}create(){this.container=document.createElement("div"),this.container.id="difficulty-selector",this.container.className="difficulty-selector";const e=document.createElement("div");e.className="difficulty-overlay";const t=()=>this.hide();e.addEventListener("click",t),e.addEventListener("touchstart",n=>{n.preventDefault(),t()},{passive:!1});const s=document.createElement("div");s.className="difficulty-modal";const i=document.createElement("div");i.className="difficulty-header",i.innerHTML="<h2>Select Difficulty</h2>";const o=document.createElement("div");o.className="difficulty-options",this.difficultyManager.getAvailableDifficulties().forEach(n=>{const c=this.createDifficultyOption(n);o.appendChild(c)});const l=document.createElement("button");l.className="difficulty-close",l.innerHTML="×";const r=()=>this.hide();l.addEventListener("click",r),l.addEventListener("touchstart",n=>{n.preventDefault(),r()},{passive:!1}),s.appendChild(i),s.appendChild(o),s.appendChild(l),this.container.appendChild(e),this.container.appendChild(s),document.body.appendChild(this.container),this.addStyles()}createDifficultyOption(e){const t=document.createElement("div");t.className="difficulty-option",t.dataset.difficulty=e.key,e.key===this.difficultyManager.getCurrentDifficulty()&&t.classList.add("selected");const s=document.createElement("div");s.className="difficulty-icon",s.innerHTML=this.getDifficultyIcon(e.key);const i=document.createElement("div");i.className="difficulty-content";const o=document.createElement("h3");o.textContent=e.name;const a=document.createElement("p");a.textContent=e.shortDescription||e.description;const l=document.createElement("div");if(l.className="difficulty-features",e.key==="easy"&&e.hintsEnabled){const u=document.createElement("span");u.className="feature hint",u.textContent="💡 Hints",l.appendChild(u)}if(e.moveLimit){const u=document.createElement("span");u.className="feature moves",u.textContent="Limited Moves",l.appendChild(u)}i.appendChild(o),i.appendChild(a),i.appendChild(l),t.appendChild(s),t.appendChild(i);let r=null,n=null,c=!1;const h=()=>{n&&(clearTimeout(n),n=null),c=!1,r=null,t.classList.remove("pressing")},d=async u=>{u.preventDefault(),await this.selectDifficulty(e.key)},m=u=>{u.preventDefault(),!c&&(c=!0,r=Date.now(),t.classList.add("pressing"),n=setTimeout(()=>{c&&(d(u),h())},10))},f=u=>{c&&(u.preventDefault(),h())};return t.addEventListener("mousedown",m),t.addEventListener("mouseup",f),t.addEventListener("mouseleave",f),t.addEventListener("touchstart",m,{passive:!1}),t.addEventListener("touchend",f,{passive:!1}),t.addEventListener("touchcancel",f,{passive:!1}),t.addEventListener("click",async u=>{u.preventDefault(),!c&&(!r||Date.now()-r<200)&&await d(u)}),t}getDifficultyIcon(e){return{easy:"😊",normal:"😐",hard:"😤",expert:"🔥"}[e]||"🎮"}async selectDifficulty(e){console.log(`🎯 DifficultySelector: selectDifficulty called with difficulty: ${e}`);const t=this.difficultyManager.setDifficulty(e);console.log(`🎯 DifficultySelector: difficultyManager.setDifficulty(${e}) returned: ${t}`),this.updateSelection(e),console.log(`🎯 DifficultySelector: calling game.selectDifficulty(${e})`),this.game.selectDifficulty(e),this.hide()}updateSelection(e){this.container.querySelectorAll(".difficulty-option").forEach(s=>{s.dataset.difficulty===e?s.classList.add("selected"):s.classList.remove("selected")})}show(){this.container||this.create(),this.container.style.display="flex",this.container.style.pointerEvents="auto",this.isVisible=!0,requestAnimationFrame(()=>{this.container.classList.add("show")})}hide(){this.container&&(this.container.classList.remove("show"),this.isVisible=!1,this.container.style.pointerEvents="none",setTimeout(()=>{this.container&&this.container.parentNode&&(this.container.parentNode.removeChild(this.container),this.container=null)},300))}addStyles(){const e=document.createElement("style");e.textContent=`
            .difficulty-selector {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                z-index: 1000;
                display: none;
                align-items: center;
                justify-content: center;
                opacity: 0;
                transition: opacity 0.3s ease;
                pointer-events: none;
            }
            
            .difficulty-selector.show {
                opacity: 1;
                pointer-events: auto;
            }
            
            .difficulty-overlay {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0.7);
                backdrop-filter: blur(5px);
                pointer-events: auto;
            }
            
            .difficulty-modal {
                position: relative;
                background: var(--card-bg, var(--header-bg, white));
                border: 2px solid var(--border-color, #e0e0e0);
                border-radius: 12px;
                padding: 24px;
                max-width: 500px;
                width: 90%;
                max-height: 80vh;
                overflow-y: auto;
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
                transform: scale(0.9);
                transition: transform 0.3s ease;
            }
            
            .difficulty-selector.show .difficulty-modal {
                transform: scale(1);
            }
            
            .difficulty-header {
                text-align: center;
                margin-bottom: 24px;
            }
            
            .difficulty-header h2 {
                margin: 0;
                color: var(--text-color, #333);
                font-size: 1.5rem;
            }
            
            .difficulty-options {
                display: grid;
                gap: 12px;
            }
            
            .difficulty-option {
                display: flex;
                align-items: center;
                padding: 16px;
                border: 2px solid var(--border-color, #e0e0e0);
                border-radius: 8px;
                cursor: pointer;
                transition: all 0.2s ease;
                background: var(--card-bg, var(--header-bg, white));
            }
            
            .difficulty-option:hover {
                border-color: var(--primary-color, #007bff);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0, 123, 255, 0.2);
            }
            
            .difficulty-option.selected {
                border-color: var(--primary-color, #007bff);
                background: var(--primary-color, #007bff);
                color: white !important;
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7) !important;
            }
            
            .difficulty-option.pressing {
                transform: scale(0.98);
                opacity: 0.8;
                border-color: var(--primary-color, #007bff);
                background: var(--primary-color, #007bff);
                color: white !important;
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7) !important;
            }
            
            .difficulty-option.pressing .difficulty-content h3 {
                color: white !important;
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7) !important;
            }
            
            .difficulty-option.pressing .difficulty-content p {
                color: rgba(255, 255, 255, 0.9);
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
            }
            
            .difficulty-icon {
                font-size: 2rem;
                margin-right: 16px;
                min-width: 40px;
                text-align: center;
            }
            
            .difficulty-content {
                flex: 1;
            }
            
            .difficulty-content h3 {
                margin: 0 0 8px 0;
                color: var(--text-color, #333);
                font-size: 1.1rem;
            }
            
            .difficulty-option.selected .difficulty-content h3 {
                color: white !important;
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7) !important;
            }
            
            .difficulty-content p {
                margin: 0 0 8px 0;
                color: var(--text-muted, #666);
                font-size: 0.9rem;
                line-height: 1.4;
            }
            
            .difficulty-option.selected .difficulty-content p {
                color: rgba(255, 255, 255, 0.9);
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
            }
            
            .difficulty-features {
                display: flex;
                flex-wrap: wrap;
                gap: 6px;
            }
            
            .feature {
                padding: 4px 8px;
                border-radius: 12px;
                font-size: 0.75rem;
                font-weight: 500;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }
            
            .feature.hint {
                background: #e8f5e8;
                color: #2d5a2d;
            }
            
            .feature.undo {
                background: #fff3cd;
                color: #856404;
            }
            
            .feature.timer {
                background: #f8d7da;
                color: #721c24;
            }
            
            .feature.moves {
                background: #d1ecf1;
                color: #0c5460;
            }
            
            .difficulty-close {
                position: absolute;
                top: 12px;
                right: 12px;
                background: none;
                border: none;
                font-size: 1.5rem;
                cursor: pointer;
                color: var(--text-muted, #999);
                width: 32px;
                height: 32px;
                display: flex;
                align-items: center;
                justify-content: center;
                border-radius: 50%;
                transition: all 0.2s ease;
            }
            
            .difficulty-close:hover {
                background: var(--cell-hover, #f0f0f0);
                color: var(--text-color, #333);
            }
            
            @media (max-width: 480px) {
                .difficulty-modal {
                    padding: 16px;
                    margin: 16px;
                }
                
                .difficulty-option {
                    padding: 12px;
                }
                
                .difficulty-icon {
                    font-size: 1.5rem;
                    margin-right: 12px;
                }
            }
        `,document.head.appendChild(e)}}class ${constructor(e,t){this.canvas=e,this.ctx=t,this.particles=[],this.isEnabled=!0,this.maxParticles=200,this.animate()}setEnabled(e){this.isEnabled=e,e||(this.particles=[])}getThemeColor(e){try{const t=getComputedStyle(document.documentElement).getPropertyValue(e).trim();if(!t)throw new Error(`Theme color variable '${e}' not found`);return t}catch(t){throw console.error(`Failed to get theme color '${e}':`,t),new Error(`Theme color '${e}' is required but not available`)}}getThemeColorWithFallback(e){try{return this.getThemeColor(e)}catch{return console.warn(`CSS variable ${e} not available, using fallback color`),{"--clear-glow-color":"#00aaff","--primary-color":"#007bff","--text-color":"#333333","--bg-color":"#ffffff"}[e]||"#00aaff"}}createSparkles(e,t,s=8){if(this.isEnabled)for(let i=0;i<s;i++)this.particles.push(new O(e,t))}createConfetti(e,t,s=20){if(this.isEnabled)for(let i=0;i<s;i++)this.particles.push(new H(e,t))}createGlowTrail(e,t,s=null){if(!this.isEnabled)return;const i=s||this.getThemeColorWithFallback("--clear-glow-color");this.particles.push(new F(e,t,i))}createScoreNumber(e,t,s,i=null){if(!this.isEnabled)return;const o=i||this.getThemeColorWithFallback("--clear-glow-color");this.particles.push(new q(e,t,s,o))}createLevelUpEffect(e,t){this.isEnabled&&(this.createConfetti(e,t,30),this.createSparkles(e,t,15),this.particles.push(new N(e,t)))}createEmptyGridBonusEffect(e,t){if(this.isEnabled){for(let s=0;s<20;s++)this.particles.push(new W(e,t));for(let s=0;s<15;s++)this.particles.push(new j(e,t));this.particles.push(new _(e,t))}}createComboEffect(e,t,s){this.isEnabled&&(this.createSparkles(e,t,s*3),this.particles.push(new U(e,t,s)))}update(){if(this.isEnabled){for(let e=this.particles.length-1;e>=0;e--){const t=this.particles[e];t.update(),t.isDead()&&this.particles.splice(e,1)}this.particles.length>this.maxParticles&&(this.particles=this.particles.slice(-this.maxParticles))}}render(){if(this.isEnabled){this.ctx.save();for(const e of this.particles)e.render(this.ctx);this.ctx.restore()}}animate(){this.update(),this.render(),requestAnimationFrame(()=>this.animate())}clear(){this.particles=[]}}class p{constructor(e,t){this.x=e,this.y=t,this.vx=0,this.vy=0,this.life=1,this.maxLife=1,this.size=1,this.color="#ffffff",this.alpha=1}update(){this.x+=this.vx,this.y+=this.vy,this.life-=.016,this.alpha=this.life}isDead(){return this.life<=0}render(e){}}class O extends p{constructor(e,t){super(e,t),this.vx=(Math.random()-.5)*4,this.vy=(Math.random()-.5)*4,this.maxLife=.8,this.life=this.maxLife,this.size=Math.random()*3+1,this.color=`hsl(${Math.random()*60+40}, 100%, 70%)`,this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.2}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.1}render(e){e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.rotate(this.rotation),e.fillStyle=this.color,e.fillRect(-this.size/2,-this.size/2,this.size,this.size),e.restore()}}class H extends p{constructor(e,t){super(e,t),this.vx=(Math.random()-.5)*8,this.vy=Math.random()*-6-2,this.maxLife=2,this.life=this.maxLife,this.size=Math.random()*4+2,this.colors=["#ff6b6b","#4ecdc4","#45b7d1","#96ceb4","#feca57","#ff9ff3"],this.color=this.colors[Math.floor(Math.random()*this.colors.length)],this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.3}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.3,this.vx*=.98}render(e){e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.rotate(this.rotation),e.fillStyle=this.color,e.fillRect(-this.size/2,-this.size/2,this.size,this.size),e.restore()}}class F extends p{constructor(e,t,s){super(e,t),this.vx=(Math.random()-.5)*2,this.vy=(Math.random()-.5)*2,this.maxLife=.5,this.life=this.maxLife,this.size=Math.random()*6+3,this.color=s}update(){super.update(),this.size*=.98}render(e){e.save(),e.globalAlpha=this.alpha*.6,e.fillStyle=this.color,e.shadowColor=this.color,e.shadowBlur=10,e.beginPath(),e.arc(this.x,this.y,this.size,0,Math.PI*2),e.fill(),e.restore()}}class q extends p{constructor(e,t,s,i){super(e,t),this.vx=0,this.vy=-2,this.maxLife=1.5,this.life=this.maxLife,this.score=s,this.color=i,this.fontSize=20}update(){super.update(),this.fontSize+=.5}render(e){e.save(),e.globalAlpha=this.alpha,e.fillStyle=this.color,e.font=`bold ${this.fontSize}px Arial`,e.textAlign="center",e.shadowColor="rgba(0, 0, 0, 0.5)",e.shadowBlur=2,e.fillText(`+${this.score}`,this.x,this.y),e.restore()}}class N extends p{constructor(e,t){super(e,t),this.vx=0,this.vy=-1,this.maxLife=2,this.life=this.maxLife,this.text="LEVEL UP!",this.color="#ffd700",this.fontSize=24}update(){super.update(),this.fontSize+=.3}render(e){e.save(),e.globalAlpha=this.alpha,e.fillStyle=this.color,e.font=`bold ${this.fontSize}px Arial`,e.textAlign="center",e.shadowColor="rgba(0, 0, 0, 0.8)",e.shadowBlur=4,e.fillText(this.text,this.x,this.y),e.restore()}}class U extends p{constructor(e,t,s){super(e,t),this.vx=0,this.vy=-1.5,this.maxLife=1.5,this.life=this.maxLife,this.text=`${s}x COMBO!`,this.color="#ff6b6b",this.fontSize=18}update(){super.update(),this.fontSize+=.2}render(e){e.save(),e.globalAlpha=this.alpha,e.fillStyle=this.color,e.font=`bold ${this.fontSize}px Arial`,e.textAlign="center",e.shadowColor="rgba(0, 0, 0, 0.8)",e.shadowBlur=3,e.fillText(this.text,this.x,this.y),e.restore()}}class W extends p{constructor(e,t){super(e,t),this.vx=(Math.random()-.5)*6,this.vy=(Math.random()-.5)*6,this.maxLife=1.2,this.life=this.maxLife,this.size=Math.random()*4+2,this.color=`hsl(${Math.random()*40+120}, 100%, 60%)`,this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.3}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.05,this.size*=.99}render(e){e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.rotate(this.rotation),e.fillStyle=this.color,e.shadowColor=this.color,e.shadowBlur=8,e.fillRect(-this.size/2,-this.size/2,this.size,this.size),e.restore()}}class j extends p{constructor(e,t){super(e,t),this.vx=(Math.random()-.5)*10,this.vy=Math.random()*-8-3,this.maxLife=2.5,this.life=this.maxLife,this.size=Math.random()*5+3,this.colors=["#00ff88","#00cc66","#00ffaa","#66ff99","#00ff77","#33ff88"],this.color=this.colors[Math.floor(Math.random()*this.colors.length)],this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.4}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.2,this.vx*=.98}render(e){e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.rotate(this.rotation),e.fillStyle=this.color,e.shadowColor=this.color,e.shadowBlur=6,e.fillRect(-this.size/2,-this.size/2,this.size,this.size),e.restore()}}class _ extends p{constructor(e,t){super(e,t),this.vx=0,this.vy=-1.5,this.maxLife=2,this.life=this.maxLife,this.text="EMPTY GRID BONUS!",this.color="#00ff88",this.fontSize=22}update(){super.update(),this.fontSize+=.4}render(e){e.save(),e.globalAlpha=this.alpha,e.fillStyle=this.color,e.font=`bold ${this.fontSize}px Arial`,e.textAlign="center",e.shadowColor="rgba(0, 255, 136, 0.8)",e.shadowBlur=6,e.fillText(this.text,this.x,this.y),e.restore()}}class Y{constructor(){this.isEnabled=!0,this.isSupported=this.checkSupport(),this.userHasInteracted=!1,this.lastVibrationTime=0,this.vibrationThrottle=100,this.vibrationPatterns={light:[10],medium:[20],heavy:[50],success:[20,10,20],error:[100],blockPlace:[15],lineClear:[30,10,30],levelUp:[50,20,50],combo:[25,10,25,10,25],speedBonus:[20,5,20],buttonClick:[5],emptyGridBonus:[40,15,40,15,40]},this.setupUserInteractionListener()}checkSupport(){return"vibrate"in navigator}setupUserInteractionListener(){const e=()=>{this.userHasInteracted=!0,document.removeEventListener("click",e),document.removeEventListener("touchstart",e),document.removeEventListener("keydown",e),document.removeEventListener("pointerdown",e)};document.addEventListener("click",e,{once:!0,passive:!0}),document.addEventListener("touchstart",e,{once:!0,passive:!0}),document.addEventListener("keydown",e,{once:!0,passive:!0}),document.addEventListener("pointerdown",e,{once:!0,passive:!0}),document.visibilityState==="visible"&&document.hasFocus&&document.hasFocus()}setEnabled(e){this.isEnabled=e}enableAfterInteraction(){this.userHasInteracted=!0}vibrate(e){if(!this.isEnabled||!this.isSupported||!this.userHasInteracted)return;const t=Date.now();if(!(t-this.lastVibrationTime<this.vibrationThrottle))try{typeof e=="string"&&(e=this.vibrationPatterns[e]||[10]),navigator.vibrate&&typeof navigator.vibrate=="function"&&(navigator.vibrate(e),this.lastVibrationTime=t)}catch(s){!s.message.includes("user hasn't tapped")&&!s.message.includes("user activation")&&console.warn("Haptic feedback error:",s)}}onBlockPlace(){this.vibrate("blockPlace")}onLineClear(){this.vibrate("lineClear")}onLevelUp(){this.vibrate("levelUp")}onCombo(e){e>=1&&this.vibrate("combo")}onSpeedBonus(){this.vibrate("speedBonus")}onEmptyGridBonus(){this.vibrate("emptyGridBonus")}onError(){this.vibrate("error")}onButtonClick(){this.vibrate("buttonClick")}onSuccess(){this.vibrate("success")}onCustom(e){this.vibrate(e)}stop(){this.isSupported&&navigator.vibrate(0)}getStatus(){return{isEnabled:this.isEnabled,isSupported:this.isSupported,userHasInteracted:this.userHasInteracted,lastVibrationTime:this.lastVibrationTime,vibrationThrottle:this.vibrationThrottle}}}class X{constructor(e,t){this.canvas=e,this.ctx=t,this.particles=new $(e,t),this.sound=new M,this.haptic=new Y,this.settings={particles:!0,sound:!1,haptic:!0}}updateSettings(e){this.settings={...this.settings,...e},this.particles.setEnabled(this.settings.particles),this.sound.setEnabled(this.settings.sound),this.haptic.setEnabled(this.settings.haptic)}setVolume(e){this.sound.setVolume(e)}getThemeColor(e){try{const t=getComputedStyle(document.documentElement).getPropertyValue(e).trim();if(!t)throw new Error(`Theme color variable '${e}' not found`);return t}catch(t){throw console.error(`Failed to get theme color '${e}':`,t),new Error(`Theme color '${e}' is required but not available`)}}getThemeColorWithFallback(e){try{return this.getThemeColor(e)}catch{return console.warn(`CSS variable ${e} not available, using fallback color`),{"--clear-glow-color":"#00aaff","--primary-color":"#007bff","--text-color":"#333333","--bg-color":"#ffffff"}[e]||"#00aaff"}}onBlockPlace(e,t){this.particles.createSparkles(e,t,6),this.settings.sound&&this.sound.play("blockPlace"),this.haptic.onBlockPlace()}onLineClear(e,t,s){const i=s.rows.length+s.columns.length+s.squares.length;this.particles.createConfetti(e,t,i*5),this.settings.sound&&this.sound.play("lineClear"),this.haptic.onLineClear()}onLevelUp(e,t){this.particles.createLevelUpEffect(e,t),this.settings.sound&&this.sound.play("levelUp"),this.haptic.onLevelUp()}onCombo(e,t,s){this.particles.createComboEffect(e,t,s),this.settings.sound&&this.sound.play("combo"),this.haptic.onCombo(s)}onScoreGain(e,t,s){const i=this.getThemeColorWithFallback("--clear-glow-color");this.particles.createScoreNumber(e,t,s,i),this.settings.sound&&this.sound.play("scoreGain")}onSpeedBonus(e,t,s){this.particles.createSpeedBonusEffect(e,t,s),this.settings.sound&&this.sound.play("speedBonus"),this.haptic.onSpeedBonus()}onError(){this.settings.sound&&this.sound.play("error"),this.haptic.onError()}onButtonClick(){this.settings.sound&&this.sound.play("buttonClick"),this.haptic.enableAfterInteraction(),setTimeout(()=>{this.haptic.onButtonClick()},10)}onBlockRotate(){this.settings.sound&&this.sound.play("blockRotate")}onBlockMove(e,t,s=null){const i=s||this.getThemeColorWithFallback("--clear-glow-color");this.particles.createGlowTrail(e,t,i)}update(){this.particles.update()}render(){this.particles.render()}clear(){this.particles.clear()}resume(){this.sound.resume()}stop(){this.particles.clear(),this.sound.stop(),this.haptic.stop()}}class V{constructor(){this.enabled=!1,this.gridCellTimestamps={},this.blockTimestamps={},this.GRID_CELL_PETRIFY_TIME=1e4,this.BLOCK_PETRIFY_TIME=3e4,this.WARNING_7S_TIME=7e3,this.WARNING_3S_TIME=3e3,this.stats={gridCellsPetrified:0,blocksPetrified:0,gridCellsThawed:0,blocksThawed:0,totalPetrificationTime:0}}setEnabled(e){const t=this.enabled;this.enabled=e,t&&!e&&this.resetAll()}isEnabled(){return this.enabled}resetAll(){this.gridCellTimestamps={},this.blockTimestamps={}}trackGridCell(e,t){if(!this.enabled)return;const s=`${e},${t}`;this.gridCellTimestamps[s]={timestamp:Date.now(),warned7s:!1,warned3s:!1,petrified:!1}}untrackGridCell(e,t){const s=`${e},${t}`;delete this.gridCellTimestamps[s]}trackBlock(e){this.enabled&&(this.blockTimestamps[e]={timestamp:Date.now(),warned7s:!1,warned3s:!1,petrified:!1})}untrackBlock(e){delete this.blockTimestamps[e]}updateBoardTracking(e){if(this.enabled)for(let t=0;t<e.length;t++)for(let s=0;s<e[t].length;s++){const i=`${t},${s}`;e[t][s]===1?this.gridCellTimestamps[i]||this.trackGridCell(t,s):this.gridCellTimestamps[i]&&this.untrackGridCell(t,s)}}updateBlockTracking(e){if(!this.enabled)return;const t=new Set(e.map(s=>s.id));e.forEach(s=>{this.blockTimestamps[s.id]||this.trackBlock(s.id)}),Object.keys(this.blockTimestamps).forEach(s=>{t.has(s)||this.untrackBlock(s)})}getGridCellState(e,t){if(!this.enabled)return{petrified:!1,warning:null,timeRemaining:1/0};const s=`${e},${t}`,i=this.gridCellTimestamps[s];if(!i)return{petrified:!1,warning:null,timeRemaining:1/0};const o=Date.now()-i.timestamp,a=this.GRID_CELL_PETRIFY_TIME-o;return o>=this.GRID_CELL_PETRIFY_TIME?(i.petrified||(i.petrified=!0,this.stats.gridCellsPetrified++),{petrified:!0,warning:null,timeRemaining:0}):a<=this.WARNING_3S_TIME?{petrified:!1,warning:"3s",timeRemaining:a}:a<=this.WARNING_7S_TIME?{petrified:!1,warning:"7s",timeRemaining:a}:{petrified:!1,warning:null,timeRemaining:a}}getBlockState(e){if(!this.enabled)return{petrified:!1,warning:null,timeRemaining:1/0};const t=this.blockTimestamps[e];if(!t)return{petrified:!1,warning:null,timeRemaining:1/0};const s=Date.now()-t.timestamp,i=this.BLOCK_PETRIFY_TIME-s;return s>=this.BLOCK_PETRIFY_TIME?(t.petrified||(t.petrified=!0,this.stats.blocksPetrified++),{petrified:!0,warning:null,timeRemaining:0}):i<=this.WARNING_3S_TIME?{petrified:!1,warning:"3s",timeRemaining:i}:i<=this.WARNING_7S_TIME?{petrified:!1,warning:"7s",timeRemaining:i}:{petrified:!1,warning:null,timeRemaining:i}}isGridCellPetrified(e,t){return this.getGridCellState(e,t).petrified}isBlockPetrified(e){return this.getBlockState(e).petrified}canClearRow(e,t){if(!this.enabled)return!0;for(let s=0;s<e[t].length;s++)if(e[t][s]===1&&this.isGridCellPetrified(t,s))return!1;return!0}canClearColumn(e,t){if(!this.enabled)return!0;for(let s=0;s<e.length;s++)if(e[s][t]===1&&this.isGridCellPetrified(s,t))return!1;return!0}canClearSquare(e,t,s){if(!this.enabled)return!0;const i=t*3,o=s*3;for(let a=i;a<i+3;a++)for(let l=o;l<o+3;l++)if(e[a][l]===1&&this.isGridCellPetrified(a,l))return!1;return!0}thawAll(){this.enabled&&(Object.keys(this.gridCellTimestamps).forEach(e=>{const t=this.gridCellTimestamps[e];t.petrified&&this.stats.gridCellsThawed++,t.petrified=!1,t.timestamp=Date.now(),t.warned7s=!1,t.warned3s=!1}),Object.keys(this.blockTimestamps).forEach(e=>{const t=this.blockTimestamps[e];t.petrified&&this.stats.blocksThawed++,t.petrified=!1,t.timestamp=Date.now(),t.warned7s=!1,t.warned3s=!1}))}getPetrifiedGridCells(){const e=[];return Object.keys(this.gridCellTimestamps).forEach(t=>{const[s,i]=t.split(",").map(Number);this.isGridCellPetrified(s,i)&&e.push({row:s,col:i})}),e}getPetrifiedBlocks(){return Object.keys(this.blockTimestamps).filter(e=>this.isBlockPetrified(e))}getStats(){return{...this.stats,currentPetrifiedCells:this.getPetrifiedGridCells().length,currentPetrifiedBlocks:this.getPetrifiedBlocks().length}}resetStats(){this.stats={gridCellsPetrified:0,blocksPetrified:0,gridCellsThawed:0,blocksThawed:0,totalPetrificationTime:0}}serialize(){return{enabled:this.enabled,gridCellTimestamps:this.gridCellTimestamps,blockTimestamps:this.blockTimestamps,stats:this.stats}}deserialize(e){e&&(this.enabled=e.enabled||!1,this.gridCellTimestamps=e.gridCellTimestamps||{},this.blockTimestamps=e.blockTimestamps||{},this.stats=e.stats||{gridCellsPetrified:0,blocksPetrified:0,gridCellsThawed:0,blocksThawed:0,totalPetrificationTime:0})}}class K{constructor(){this.enabled=!1,this.intensity=0,this.deadPixels=new Set,this.stats={deadPixelsGenerated:0,gamesPlayedWithDeadPixels:0}}setEnabled(e){const t=this.enabled;this.enabled=e,t&&!e&&this.clearDeadPixels()}isEnabled(){return this.enabled}setIntensity(e){this.intensity=Math.max(0,Math.min(5,e))}getIntensity(){return this.intensity}generateDeadPixels(e){if(!this.enabled||this.intensity===0){this.deadPixels.clear();return}this.deadPixels.clear();const t=this.intensity*3,s=Math.floor(Math.random()*(this.intensity+1)),i=t+s,o=e*e,a=[];for(let r=0;r<e;r++)for(let n=0;n<e;n++)a.push({row:r,col:n});for(let r=a.length-1;r>0;r--){const n=Math.floor(Math.random()*(r+1));[a[r],a[n]]=[a[n],a[r]]}const l=Math.min(i,o);for(let r=0;r<l;r++){const{row:n,col:c}=a[r],h=`${n},${c}`;this.deadPixels.add(h)}this.stats.deadPixelsGenerated+=l,l>0&&this.stats.gamesPlayedWithDeadPixels++}clearDeadPixels(){this.deadPixels.clear()}isDeadPixel(e,t){if(!this.enabled)return!1;const s=`${e},${t}`;return this.deadPixels.has(s)}getDeadPixels(){const e=[];return this.deadPixels.forEach(t=>{const[s,i]=t.split(",").map(Number);e.push({row:s,col:i})}),e}canPlaceBlockWithDeadPixels(e,t,s,i){if(!this.enabled)return!0;for(let o=0;o<e.shape.length;o++)for(let a=0;a<e.shape[o].length;a++)if(e.shape[o][a]===1){const l=t+o,r=s+a;if(this.isDeadPixel(l,r))return!1}return!0}getStats(){return{...this.stats,currentDeadPixels:this.deadPixels.size}}resetStats(){this.stats={deadPixelsGenerated:0,gamesPlayedWithDeadPixels:0}}serialize(){return{enabled:this.enabled,intensity:this.intensity,deadPixels:Array.from(this.deadPixels),stats:this.stats}}deserialize(e){e&&(this.enabled=e.enabled||!1,this.intensity=e.intensity||0,this.deadPixels=new Set(e.deadPixels||[]),this.stats=e.stats||{deadPixelsGenerated:0,gamesPlayedWithDeadPixels:0})}}class Q{constructor(){var e;console.log("BlockdokuGame constructor called"),this.canvas=document.getElementById("game-board"),this.ctx=this.canvas.getContext("2d"),this.boardSize=9,this.cellSize=0,console.log("About to initialize board...");try{this.board=this.initializeBoard(),console.log("Board initialized in constructor:",this.board?"SUCCESS":"FAILED","Length:",(e=this.board)==null?void 0:e.length),console.log("Board contents:",this.board)}catch(t){console.error("ERROR during board initialization:",t),this.board=null}this.score=0,this.level=1,this.currentTheme="light",this.previousScore=0,this.previousLevel=1,this.previousCombo=0,this.previousTotalCombos=0,this.pendingClears=null,this.difficulty="normal",this.enableHints=!1,this.enableTimer=!1,this.moveLimit=null,this.timeLimit=null,this.blockManager=new I,this.petrificationManager=new V,this.deadPixelsManager=new K,this.blockPalette=new L("block-palette",this.blockManager,this),this.scoringSystem=new D(this.petrificationManager,this.difficultyManager),this.storage=new T,this.difficultySettings=new P(this.storage),this.pwaInstallManager=new x,this.offlineManager=new w,this.difficultyManager=new E(this),this.hintSystem=new G(this,this.difficultyManager),this.timerSystem=new z(this.difficultyManager),this.difficultySelector=new R(this,this.difficultyManager),this.effectsManager=new X(this.canvas,this.ctx),this.confirmationDialog=new C,this.preGameOverPending=!1,this.selectedBlock=null,this.previewPosition=null,this.isGameOver=!1,this.isInitialized=!1,this.comboModeActive="cumulative",this.comboModesUsed=new Set,this.speedTimerStartTime=null,this.speedTimerInterval=null,this.speedDisplayMode="timer",this.isDragging=!1,this.dragStartPosition=null,this.dragCurrentPosition=null,this.dragBlockElement=null;try{console.log("About to load settings..."),this.loadSettings(),console.log("Settings loaded, setting isInitialized..."),this.isInitialized=!0,console.log("About to call init()..."),this.init(),console.log("Init completed, setting up resize handler..."),this.setupResizeHandler(),console.log("Constructor completed successfully")}catch(t){console.error("ERROR in constructor after board init:",t)}window.addEventListener("focus",()=>{this.loadSettings(),this.updateDifficultyButton(),this.renderPersonalBests(),this.isGameOver||setTimeout(()=>{this.loadGameState(),this.draw()},10)}),window.addEventListener("storage",t=>{(t.key==="blockdoku-settings"||t.key==="blockdoku_settings")&&(this.loadSettings(),this.updateDifficultyButton(),this.updateHintControls(),this.renderPersonalBests(),this.isGameOver||setTimeout(()=>{this.loadGameState(),this.draw()},10))})}resizeCanvas(){const e=this.canvas.parentElement;if(!e)return;const t=e.getBoundingClientRect(),s=Math.min(t.width,t.height);this.cellSize=Math.floor(s/this.boardSize),this.cellSize*this.boardSize,this.canvas.width=s,this.canvas.height=s,this.canvas.style.width=s+"px",this.canvas.style.height=s+"px",this.actualCellSize=s/this.boardSize,this.gridCellSize=this.cellSize,this.mouseCellSize=this.actualCellSize,this.ctx.imageSmoothingEnabled=!1,this.ctx.lineCap="square",this.ctx.lineJoin="miter"}initializeBoard(){console.log("initializeBoard called, boardSize:",this.boardSize);const e=[];for(let t=0;t<this.boardSize;t++){e[t]=[];for(let s=0;s<this.boardSize;s++)e[t][s]=0}return console.log("initializeBoard created board with length:",e.length),e}setupResizeHandler(){window.addEventListener("resize",()=>{this.resizeCanvas(),requestAnimationFrame(()=>{this.drawBoard()})})}init(){var e;console.log("Game init() called"),console.log("Board state at start of init():",this.board?"VALID":"UNDEFINED","Length:",(e=this.board)==null?void 0:e.length),this.setupEventListeners(),this.registerServiceWorker(),this.blockPalette&&this.blockPalette.render(),this.loadGameState(),(!this.blockManager.currentBlocks||this.blockManager.currentBlocks.length===0)&&this.generateNewBlocks(),this.timerSystem.initialize(),this.timerSystem.start(),setTimeout(()=>{this.resizeCanvas(),requestAnimationFrame(()=>{this.drawBoard(),this.updateUI(),this.renderPersonalBests()})},100),this.isInitialized=!0,this.startGameLoop(),console.log("About to initialize PWA managers..."),this.initializePWAManagers().then(()=>{console.log("PWA managers initialization completed")}).catch(t=>{console.error("PWA managers initialization failed:",t)}),this.updateDifficultyButton(),this.renderPersonalBests(),this.updateUtilityBarState(),this.blockPalette.setPieceTimeoutCallback(t=>{this.handlePieceTimeout(t)})}async registerServiceWorker(){if("serviceWorker"in navigator)try{if(window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1"){console.log("PWA: Skipping Service Worker registration in development mode");return}const t=await navigator.serviceWorker.register("./sw.js");console.log("PWA: Service Worker registered successfully",t),t.addEventListener("updatefound",()=>{console.log("PWA: Service Worker update found")})}catch(e){console.log("PWA: Service Worker registration failed (this is normal in development mode)",e.message)}}async initializePWAManagers(){try{console.log("Initializing PWA managers...");const e=await v(()=>import("./confirmation-dialog-Bfw5TIb9.js").then(s=>s.i),[],import.meta.url),t=await v(()=>Promise.resolve().then(()=>A),void 0,import.meta.url);this.pwaInstallManager=new e.PWAInstallManager,this.offlineManager=new t.OfflineManager,console.log("PWA managers initialized successfully"),console.log("PWAInstallManager:",this.pwaInstallManager),console.log("OfflineManager:",this.offlineManager)}catch(e){console.error("Error initializing PWA managers:",e),this.pwaInstallManager=null,this.offlineManager=null}}startGameLoop(){const e=()=>{this.update(),this.draw(),requestAnimationFrame(e)};e()}update(){this.isGameOver||(this.effectsManager.update(),this.hintSystem&&this.hintSystem.update(16),this.timerSystem&&(!this.timerSystem.update(16)&&this.timerSystem.isTimeUp()&&this.isInitialized&&this.handleTimeUp(),this.updateTimerDisplay()),this.isInitialized&&this.blockManager&&this.blockManager.currentBlocks&&this.blockManager.currentBlocks.length>0&&this.updatePlaceabilityIndicators())}draw(){this.drawBoard(),this.effectsManager.render()}setupEventListeners(){console.log("Setting up event listeners..."),this.canvas.addEventListener("click",n=>this.handleCanvasClick(n)),this.canvas.addEventListener("mousemove",n=>this.handleCanvasMouseMove(n)),this.canvas.addEventListener("mouseleave",()=>this.handleCanvasMouseLeave()),this.canvas.addEventListener("touchstart",n=>this.handleTouchStart(n),{passive:!1}),this.canvas.addEventListener("touchmove",n=>this.handleTouchMove(n),{passive:!1}),this.canvas.addEventListener("touchend",n=>this.handleTouchEnd(n),{passive:!1}),this.canvas.addEventListener("touchcancel",n=>this.handleTouchCancel(n),{passive:!1}),document.addEventListener("touchmove",n=>this.handleGlobalTouchMove(n),{passive:!1}),document.addEventListener("touchend",n=>this.handleGlobalTouchEnd(n),{passive:!1}),document.addEventListener("touchcancel",n=>this.handleGlobalTouchCancel(n),{passive:!1});const e=document.getElementById("settings-toggle");if(e){const n=()=>{this.effectsManager.onButtonClick(),console.log("Settings button clicked - navigating to settings page"),this.isGameOver||(console.log("Saving game state before navigating to settings"),this.saveGameState()),window.location.href="settings.html"};e.addEventListener("click",n),e.addEventListener("touchstart",c=>{c.preventDefault(),n()},{passive:!1})}else console.error("Settings toggle button not found!");const t=document.getElementById("game-settings-toggle");if(t){const n=()=>{this.effectsManager.onButtonClick(),console.log("Game Settings button clicked - navigating to game settings page"),window.location.href="gamesettings.html"};t.addEventListener("click",n),t.addEventListener("touchstart",c=>{c.preventDefault(),n()},{passive:!1})}else console.error("Game Settings toggle button not found!");const s=document.getElementById("new-game");if(s){const n=()=>{this.effectsManager.onButtonClick(),this.newGame()};s.addEventListener("click",n),s.addEventListener("touchstart",c=>{c.preventDefault(),n()},{passive:!1})}else console.error("New game button not found!");const i=document.getElementById("difficulty-btn");if(i){const n=()=>{this.effectsManager.onButtonClick(),this.difficultySelector.show();const c=document.querySelectorAll("#difficulty-selector");c.length>1&&c.forEach((h,d)=>{d>0&&h.parentNode&&h.parentNode.removeChild(h)})};i.addEventListener("click",n),i.addEventListener("touchstart",c=>{c.preventDefault(),n()},{passive:!1})}else console.error("Difficulty button not found!");const o=document.getElementById("hint-btn");if(console.log("Looking for hint button:",o),o){console.log("Hint button found, setting up event listeners");const n=()=>{if(console.log("Hint button clicked!"),console.log("Current difficulty:",this.difficultyManager.getCurrentDifficulty()),console.log("Hints enabled:",this.difficultyManager.isHintsEnabled()),!this.difficultyManager.isHintsEnabled()){console.warn("Hints not enabled for current difficulty");return}this.effectsManager.onButtonClick(),this.hintSystem.toggleHints()};o.addEventListener("click",n),o.addEventListener("touchstart",c=>{c.preventDefault(),n()},{passive:!1})}else console.error("Hint button not found!");const a=document.getElementById("close-high-scores");a&&a.addEventListener("click",()=>this.hideHighScores());const l=document.getElementById("close-difficulty");l&&l.addEventListener("click",()=>this.hideDifficultyModal());const r=document.getElementById("close-settings");r&&r.addEventListener("click",()=>this.hideSettingsModal()),document.querySelectorAll(".difficulty-option").forEach(n=>{n.addEventListener("click",async c=>{await this.selectDifficulty(c.currentTarget.dataset.difficulty)})}),document.getElementById("enable-hints").addEventListener("change",n=>this.toggleSetting("hints",n.target.checked)),document.getElementById("enable-timer").addEventListener("change",n=>this.toggleSetting("timer",n.target.checked)),document.querySelectorAll(".theme-option").forEach(n=>{n.addEventListener("click",c=>this.selectTheme(c.currentTarget.dataset.theme))}),document.addEventListener("blockSelected",n=>this.handleBlockSelected(n)),document.addEventListener("blockDragStart",n=>this.handleBlockDragStart(n)),window.addEventListener("message",async n=>{n.data.type==="difficultyChanged"&&await this.selectDifficulty(n.data.difficulty)}),window.addEventListener("storage",n=>{(n.key==="blockdoku-settings"||n.key==="blockdoku_settings")&&(this.loadSettings(),this.updateHintControls())}),window.addEventListener("beforeunload",()=>{console.log("beforeunload event triggered, autoSave:",this.autoSave,"isGameOver:",this.isGameOver),this.autoSave&&!this.isGameOver&&this.saveGameState()}),document.addEventListener("visibilitychange",()=>{console.log("visibilitychange event triggered, hidden:",document.hidden,"autoSave:",this.autoSave,"isGameOver:",this.isGameOver),document.hidden&&this.autoSave&&!this.isGameOver&&this.saveGameState()})}getBlockCenterOffset(e){const t=e.length,s=e[0].length;let i=0,o=0,a=0;for(let l=0;l<t;l++)for(let r=0;r<s;r++)e[l][r]===1&&(i+=l,o+=r,a++);return a===0?{row:0,col:0}:(i=Math.round(i/a),o=Math.round(o/a),{row:i,col:o})}getBlockDragOffset(e){return{row:0,col:0}}getBlockPlacementOffset(e){return this.getBlockCenterOffset(e)}handleCanvasClick(e){if(this.isGameOver||!this.selectedBlock)return;const t=this.canvas.getBoundingClientRect(),s=e.clientX-t.left,i=e.clientY-t.top,o=Math.floor(s/this.mouseCellSize),a=Math.floor(i/this.mouseCellSize),l=this.getBlockCenterOffset(this.selectedBlock.shape),r=a-l.row,n=o-l.col;this.canPlaceBlock(r,n)&&this.placeBlock(r,n)}handleCanvasMouseMove(e){if(!this.selectedBlock)return;const t=this.canvas.getBoundingClientRect(),s=e.clientX-t.left,i=e.clientY-t.top,o=Math.floor(s/this.mouseCellSize),a=Math.floor(i/this.mouseCellSize),l=this.getBlockCenterOffset(this.selectedBlock.shape),r=a-l.row,n=o-l.col;this.previewPosition={row:r,col:n},this.drawBoard()}handleCanvasMouseLeave(){this.previewPosition=null,this.drawBoard()}handleTouchStart(e){if(e.preventDefault(),this.isGameOver||!this.selectedBlock)return;const t=e.touches[0],s=this.canvas.getBoundingClientRect(),i=t.clientX-s.left,o=t.clientY-s.top;this.isDragging=!0,this.dragStartPosition={x:i,y:o},this.dragCurrentPosition={x:i,y:o},this.createDragElement();const a=Math.floor(i/this.mouseCellSize),l=Math.floor(o/this.mouseCellSize),r=this.getBlockPlacementOffset(this.selectedBlock.shape),n=l-r.row,c=a-r.col;this.previewPosition={row:n,col:c},this.drawBoard()}handleTouchMove(e){if(this.isGameOver||!this.isDragging||!this.selectedBlock)return;e.preventDefault();const t=e.touches[0],s=this.canvas.getBoundingClientRect(),i=t.clientX-s.left,o=t.clientY-s.top;this.dragCurrentPosition={x:t.clientX,y:t.clientY},this.updateDragElement(t.clientX,t.clientY);const a=Math.floor(i/this.mouseCellSize),l=Math.floor(o/this.mouseCellSize),r=this.getBlockPlacementOffset(this.selectedBlock.shape),n=l-r.row,c=a-r.col;this.previewPosition={row:n,col:c},this.drawBoard()}handleTouchEnd(e){if(e.preventDefault(),this.isGameOver||!this.isDragging||!this.selectedBlock)return;const t=e.changedTouches[0],s=this.canvas.getBoundingClientRect(),i=t.clientX-s.left,o=t.clientY-s.top,a=Math.floor(i/this.mouseCellSize),l=Math.floor(o/this.mouseCellSize),r=this.getBlockPlacementOffset(this.selectedBlock.shape),n=l-r.row,c=a-r.col;this.canPlaceBlock(n,c)?this.placeBlock(n,c):this.effectsManager.onError(),this.cleanupDrag()}handleTouchCancel(e){e.cancelable&&e.preventDefault(),this.cleanupDrag()}handleGlobalTouchMove(e){if(this.isGameOver||!this.isDragging||!this.selectedBlock)return;e.preventDefault();const t=e.touches[0];this.dragCurrentPosition={x:t.clientX,y:t.clientY},this.updateDragElement(t.clientX,t.clientY);const s=this.canvas.getBoundingClientRect(),i=t.clientX-s.left,l=t.clientY-s.top-2.5*this.mouseCellSize,r=Math.floor(i/this.mouseCellSize),n=Math.floor(l/this.mouseCellSize),c=this.getBlockPlacementOffset(this.selectedBlock.shape),h=n-c.row,d=r-c.col,m=d*this.mouseCellSize,f=h*this.mouseCellSize;m>=0&&m<=s.width&&f>=0&&f<=s.height?(this.previewPosition={row:h,col:d},this.drawBoard()):(this.previewPosition=null,this.drawBoard())}handleGlobalTouchEnd(e){if(this.isGameOver||!this.isDragging||!this.selectedBlock)return;e.preventDefault();const t=e.changedTouches[0],s=this.canvas.getBoundingClientRect(),i=t.clientX-s.left,l=t.clientY-s.top-2.5*this.mouseCellSize,r=Math.floor(i/this.mouseCellSize),n=Math.floor(l/this.mouseCellSize),c=this.getBlockPlacementOffset(this.selectedBlock.shape),h=n-c.row,d=r-c.col,m=d*this.mouseCellSize,f=h*this.mouseCellSize;m>=0&&m<=s.width&&f>=0&&f<=s.height&&(this.canPlaceBlock(h,d)?this.placeBlock(h,d):this.effectsManager.onError()),this.cleanupDrag()}handleGlobalTouchCancel(e){e.cancelable&&e.preventDefault(),this.cleanupDrag()}createDragElement(){this.dragBlockElement&&this.dragBlockElement.remove(),this.dragBlockElement=null}updateDragElement(e,t){}drawBlockOnCanvas(e,t,s){const i=s/Math.max(t.shape.length,t.shape[0].length);e.fillStyle=t.color,e.strokeStyle=this.darkenColor(t.color),e.lineWidth=1;for(let o=0;o<t.shape.length;o++)for(let a=0;a<t.shape[o].length;a++)if(t.shape[o][a]===1){const l=a*i,r=o*i;e.fillRect(l,r,i,i),e.strokeRect(l,r,i,i)}}darkenColor(e){const t=e.replace("#",""),s=Math.max(0,parseInt(t.substr(0,2),16)-30),i=Math.max(0,parseInt(t.substr(2,2),16)-30),o=Math.max(0,parseInt(t.substr(4,2),16)-30);return`#${s.toString(16).padStart(2,"0")}${i.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}`}getThemeColor(e){try{const t=getComputedStyle(document.documentElement).getPropertyValue(e).trim();if(!t)throw new Error(`Theme color variable '${e}' not found`);return t}catch{throw new Error(`Theme color '${e}' is required but not available`)}}getClearGlowColor(){try{return this.getThemeColor("--clear-glow-color")}catch{return{light:"#00ff00",dark:"#ff4444",wood:"#00aaff"}[this.currentTheme]||"#00ff00"}}verifyThemeLoaded(){getComputedStyle(document.documentElement).getPropertyValue("--clear-glow-color").trim()||(console.warn(`Theme CSS not fully loaded for ${this.currentTheme}, using fallback colors`),setTimeout(()=>{getComputedStyle(document.documentElement).getPropertyValue("--clear-glow-color").trim()&&console.log(`Theme CSS loaded successfully after delay for ${this.currentTheme}`)},100))}cleanupDrag(){this.isDragging=!1,this.dragStartPosition=null,this.dragCurrentPosition=null,this.previewPosition=null,this.dragBlockElement&&(this.dragBlockElement.remove(),this.dragBlockElement=null),this.drawBoard()}handleBlockSelected(e){this.selectedBlock=e.detail.block,this.previewPosition=null,this.drawBoard()}handleBlockDragStart(e){const{block:t,input:s}=e.detail;this.selectedBlock=t,this.isDragging=!0,this.dragStartPosition={x:s.clientX,y:s.clientY},this.dragCurrentPosition={x:s.clientX,y:s.clientY},this.createDragElement();const i=this.canvas.getBoundingClientRect(),o=s.clientX-i.left,a=s.clientY-i.top,l=Math.floor(o/this.mouseCellSize),r=Math.floor(a/this.mouseCellSize),n=this.getBlockPlacementOffset(t.shape),c=r-n.row,h=l-n.col;this.previewPosition={row:c,col:h},this.drawBoard()}canPlaceBlock(e,t){return!this.selectedBlock||(this.board||(console.error("canPlaceBlock: Board is undefined! Reinitializing..."),this.board=this.initializeBoard(),this.updatePlaceabilityIndicators()),!this.blockManager.canPlaceBlock(this.selectedBlock,e,t,this.board))?!1:this.deadPixelsManager&&this.deadPixelsManager.isEnabled()?this.deadPixelsManager.canPlaceBlockWithDeadPixels(this.selectedBlock,e,t,this.board):!0}generateNewBlocks(){const e=this.blockManager.generateRandomBlocks(3,"all",this.difficultyManager);this.blockPalette.updateBlocks(e),this.updatePlaceabilityIndicators(),this.autoSelectNextBlock()}autoSelectNextBlock(){if(this.blockManager.currentBlocks.length>0){const e=this.blockManager.currentBlocks[0];this.selectedBlock=e,this.blockPalette.selectBlockById(e.id)}else this.selectedBlock=null}toggleCell(e,t){this.board[e][t]=this.board[e][t]===0?1:0}drawBoard(){if(this.cellSize===0||this.canvas.width===0)return;const e=this.ctx,t=this.actualCellSize||this.cellSize;e.clearRect(0,0,this.canvas.width,this.canvas.height),e.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--board-bg"),e.fillRect(0,0,this.canvas.width,this.canvas.height),e.strokeStyle=getComputedStyle(document.documentElement).getPropertyValue("--grid-line"),e.lineWidth=1;const s=this.canvas.width,i=this.canvas.height;for(let o=0;o<=this.boardSize;o++){const a=Math.round(o*t);e.beginPath(),e.moveTo(a,0),e.lineTo(a,i),e.stroke()}for(let o=0;o<=this.boardSize;o++){const a=Math.round(o*t);e.beginPath(),e.moveTo(0,a),e.lineTo(s,a),e.stroke()}e.lineWidth=2;for(let o=0;o<=3;o++){const a=Math.round(o*3*t),l=Math.round(o*3*t);e.beginPath(),e.moveTo(a,0),e.lineTo(a,i),e.stroke(),e.beginPath(),e.moveTo(0,l),e.lineTo(s,l),e.stroke()}if(!this.board||!Array.isArray(this.board)){if(console.error("EMERGENCY: drawBoard - Board is not initialized properly, reinitializing..."),this.board=this.initializeBoard(),!this.board){console.error("FATAL: Could not initialize board in drawBoard");return}this.updatePlaceabilityIndicators()}if(this.deadPixelsManager&&this.deadPixelsManager.isEnabled()){const o=this.deadPixelsManager.getDeadPixels(),a=getComputedStyle(document.documentElement).getPropertyValue("--board-bg").trim();o.forEach(({row:l,col:r})=>{const n=Math.round(r*t)+1,c=Math.round(l*t)+1,h=Math.round(t)-2;e.fillStyle=a,e.fillRect(n,c,h,h),e.save(),e.strokeStyle="rgba(128, 128, 128, 0.3)",e.lineWidth=1,e.beginPath(),e.moveTo(n,c),e.lineTo(n+h,c+h),e.moveTo(n+h,c),e.lineTo(n,c+h),e.stroke(),e.restore()})}e.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--block-color");for(let o=0;o<this.boardSize;o++){if(!this.board[o]||!Array.isArray(this.board[o])){console.warn(`drawBoard: Board row ${o} is not initialized properly`);continue}for(let a=0;a<this.boardSize;a++){const l=this.deadPixelsManager&&this.deadPixelsManager.isDeadPixel(o,a);if(this.board[o][a]===1&&!l){const r=Math.round(a*t)+1,n=Math.round(o*t)+1,c=Math.round(t)-2,h=this.petrificationManager.getGridCellState(o,a);if(h.petrified)e.fillStyle="#404040";else if(h.warning==="3s"){const d=Math.sin(Date.now()/150)*.5+.5;e.fillStyle=`rgba(255, 100, 100, ${.5+d*.5})`}else if(h.warning==="7s"){const d=Math.sin(Date.now()/1e3)*.3+.7;e.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--block-color"),e.globalAlpha=d}else e.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--block-color"),e.globalAlpha=1;if(e.fillRect(r,n,c,c),e.globalAlpha=1,e.strokeStyle=h.petrified?"#202020":getComputedStyle(document.documentElement).getPropertyValue("--block-border"),e.lineWidth=h.petrified?2:1,e.strokeRect(r,n,c,c),h.petrified){e.save(),e.strokeStyle="rgba(150, 200, 255, 0.3)",e.lineWidth=1;for(let d=0;d<3;d++)e.beginPath(),e.moveTo(r+d*(c/3),n),e.lineTo(r,n+d*(c/3)),e.stroke(),e.beginPath(),e.moveTo(r+c,n+d*(c/3)),e.lineTo(r+d*(c/3),n+c),e.stroke();e.restore()}}}}if(this.selectedBlock&&this.previewPosition&&(this.drawPreviewBlock(),this.difficulty==="easy"||this.difficulty==="normal")){const o=this.previewPosition.row,a=this.previewPosition.col;if(this.canPlaceBlock(o,a)){const l=this.blockManager.placeBlock(this.selectedBlock,o,a,this.board),r=this.scoringSystem.checkForCompletedLines(l);(r.rows.length||r.columns.length||r.squares.length)&&this.drawClearingBlockGlow(r,{subtle:!0})}}this.difficultyManager.isHintsEnabled()&&this.hintSystem.drawHints(e),this.pendingClears&&this.drawClearingBlockGlow(this.pendingClears)}toggleTheme(){const e=["light","dark","wood"],s=(e.indexOf(this.currentTheme)+1)%e.length;this.applyTheme(e[s]),this.drawBoard()}selectTheme(e){this.applyTheme(e)}drawPreviewBlock(){if(!this.selectedBlock||!this.previewPosition)return;const e=this.ctx,t=this.actualCellSize||this.cellSize,s=this.selectedBlock.shape,i=this.previewPosition.row,o=this.previewPosition.col,a=this.canPlaceBlock(i,o);e.fillStyle=a?this.selectedBlock.color+"80":"#ff000080",e.strokeStyle=a?this.selectedBlock.color:"#ff0000",e.lineWidth=2;for(let l=0;l<s.length;l++)for(let r=0;r<s[l].length;r++)if(s[l][r]===1){const n=o+r,c=i+l;if(n>=0&&n<this.boardSize&&c>=0&&c<this.boardSize){const h=Math.round(n*t)+1,d=Math.round(c*t)+1,m=Math.round(t)-2;e.fillRect(h,d,m,m),e.strokeRect(h,d,m,m)}}}checkLineClears(){if(this.pendingClears&&this.pendingClearsTimestamp&&Date.now()-this.pendingClearsTimestamp>5e3&&(console.warn("Pending clears stuck for too long, resetting..."),this.pendingClears=null,this.pendingClearResult=null,this.pendingClearsTimestamp=null),this.pendingClears){console.log("Skipping line clear check - animation in progress");return}if(!this.board||!Array.isArray(this.board)){console.error("Invalid board state in checkLineClears, reinitializing..."),this.board=this.initializeBoard();return}const e=this.scoringSystem.checkForCompletedLines(this.board);e.rows.length>0||e.columns.length>0||e.squares.length>0?(console.log("Lines detected for clearing:",e),this.updateScoreForClears(e),this.updateUI(),this.showImmediateClearFeedback(e),this.startLineClearAnimation(e)):(console.log("No lines detected for clearing"),this.scoringSystem.resetStreak(),this.updateUI())}updateScoreForClears(e){console.log("updateScoreForClears called with:",e);const t=this.difficultyManager.getScoreMultiplier(),s=this.scoringSystem.calculateScoreForClears(e,t);console.log("Score calculation result:",s),this.score=this.score+s.scoreGained,this.scoringSystem.score=this.score,this.scoringSystem.updateLevelFromScore(),this.level=this.scoringSystem.getLevel();const i=e.rows.length+e.columns.length+e.squares.length;i>0&&(this.scoringSystem.rowsClearedCount+=e.rows.length,this.scoringSystem.columnsClearedCount+=e.columns.length,this.scoringSystem.squaresClearedCount+=e.squares.length,this.scoringSystem.linesCleared+=i,s.isComboEvent?(this.scoringSystem.combo++,this.scoringSystem.maxCombo=Math.max(this.scoringSystem.maxCombo,this.scoringSystem.combo),this.scoringSystem.totalCombos++,this.scoringSystem.maxTotalCombos=Math.max(this.scoringSystem.maxTotalCombos,this.scoringSystem.totalCombos),this.scoringSystem.comboActivations++,this.scoringSystem.streakCount++,this.scoringSystem.maxStreakCount=Math.max(this.scoringSystem.maxStreakCount,this.scoringSystem.streakCount)):this.scoringSystem.combo=0),this.pendingClearResult={clearedLines:e,scoreGained:s.scoreGained,isCombo:s.isComboEvent,combo:this.scoringSystem.getCombo()},this.lastScoreInfo=s,this.showPointBreakdown(s,e),console.log("Score updated immediately. New score:",this.score,"New level:",this.level)}startLineClearAnimation(e){console.log("Starting line clear animation for:",e),this.pendingClearsTimestamp=Date.now(),this.highlightClearingBlocks(e),this.clearTimeoutId=setTimeout(()=>{console.log("Timeout reached, calling completeLineClear"),this.completeLineClear(e)},750),this.safetyTimeoutId=setTimeout(()=>{this.pendingClears&&(console.warn("Safety timeout reached - forcing line clear completion"),this.forceCompleteLineClear(e))},2e3)}showImmediateClearFeedback(e){this.pendingClears=e,this.pendingClearsTimestamp=Date.now(),this.ctx.save();const t=this.getClearGlowColor();this.ctx.fillStyle=t,this.ctx.globalAlpha=.2,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,this.ctx.restore(),this.canvas.style.border=`1px solid ${t}`,this.canvas.style.boxShadow=`0 0 5px ${t}`,setTimeout(()=>{this.canvas.style.border="",this.canvas.style.boxShadow=""},300),this.drawBoard();const s=this.canvas.width/2,i=this.canvas.height/2;this.showQuickClearNotification(s,i,e)}drawClearingBlockGlow(e,t={}){const{subtle:s=!1}=t;this.ctx.save();const i=this.actualCellSize||this.cellSize,o=this.getClearGlowColor();this.ctx.shadowColor=o,this.ctx.shadowBlur=s?2:4,this.ctx.strokeStyle=o,this.ctx.lineWidth=s?.5:1,this.ctx.globalAlpha=s?.2:.4,e.rows.forEach(a=>{for(let l=0;l<this.boardSize;l++)if(this.board[a][l]===1){const r=l*i,n=a*i,c=s?3:2;this.ctx.strokeRect(r+c,n+c,i-c*2,i-c*2)}}),e.columns.forEach(a=>{for(let l=0;l<this.boardSize;l++)if(this.board[l][a]===1){const r=a*i,n=l*i,c=s?3:2;this.ctx.strokeRect(r+c,n+c,i-c*2,i-c*2)}}),e.squares.forEach(a=>{const l=a.row*3,r=a.col*3;for(let n=0;n<3;n++)for(let c=0;c<3;c++){const h=l+n,d=r+c;if(this.board[h][d]===1){const m=d*i,f=h*i,u=s?3:2;this.ctx.strokeRect(m+u,f+u,i-u*2,i-u*2)}}}),this.ctx.shadowBlur=0,this.ctx.strokeStyle="#ffffff",this.ctx.lineWidth=s?.5:.75,this.ctx.globalAlpha=s?.25:.5,e.rows.forEach(a=>{for(let l=0;l<this.boardSize;l++)if(this.board[a][l]===1){const r=l*i,n=a*i,c=s?5:4;this.ctx.strokeRect(r+c,n+c,i-c*2,i-c*2)}}),e.columns.forEach(a=>{for(let l=0;l<this.boardSize;l++)if(this.board[l][a]===1){const r=a*i,n=l*i,c=s?5:4;this.ctx.strokeRect(r+c,n+c,i-c*2,i-c*2)}}),e.squares.forEach(a=>{const l=a.row*3,r=a.col*3;for(let n=0;n<3;n++)for(let c=0;c<3;c++){const h=l+n,d=r+c;if(this.board[h][d]===1){const m=d*i,f=h*i,u=s?5:4;this.ctx.strokeRect(m+u,f+u,i-u*2,i-u*2)}}}),this.ctx.restore()}showQuickClearNotification(e,t,s){this.ctx.save();const i=s.rows.length+s.columns.length+s.squares.length;let o="";i===1?s.rows.length>0?o="ROW!":s.columns.length>0?o="COLUMN!":s.squares.length>0&&(o="SQUARE!"):o=`${i} CLEARS!`,this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillRect(e-80,t-20,160,40);const a=this.getClearGlowColor();this.ctx.strokeStyle=a,this.ctx.lineWidth=3,this.ctx.strokeRect(e-80,t-20,160,40),this.ctx.fillStyle=a,this.ctx.font="bold 24px Arial",this.ctx.textAlign="center",this.ctx.fillText(o,e,t+8),this.ctx.restore(),setTimeout(()=>{this.drawBoard()},400)}highlightClearingBlocks(e){this.drawBoard();const t=this.ctx,s=this.actualCellSize||this.cellSize,i=this.getClearGlowColor();t.save(),t.globalAlpha=.7,e.rows.forEach(o=>{t.fillStyle=i,t.fillRect(0,o*s,this.canvas.width,s)}),e.columns.forEach(o=>{t.fillStyle=i,t.fillRect(o*s,0,s,this.canvas.height)}),e.squares.forEach(o=>{t.fillStyle=i;const a=o.col*3*s,l=o.row*3*s;t.fillRect(a,l,3*s,3*s)}),t.restore()}completeLineClear(e){var n;console.log("completeLineClear called with:",e);let t,s,i;try{if(console.log("Clearing lines from board..."),t=this.scoringSystem.clearLinesFromBoard(this.board,e),console.log("Lines cleared from board, result:",t),t&&t.board)this.board=t.board,this.pendingClears=null,this.pendingClearsTimestamp=null,this.clearTimeoutId&&(clearTimeout(this.clearTimeoutId),this.clearTimeoutId=null),this.safetyTimeoutId&&(clearTimeout(this.safetyTimeoutId),this.safetyTimeoutId=null);else{console.error("Failed to clear lines from board, keeping pending state");return}this.petrificationManager.thawAll(),this.petrificationManager.updateBoardTracking(this.board),i=this.pendingClearResult,i?s=i.combo:(console.warn("No pendingClearResult found - score was not pre-calculated!"),s=this.scoringSystem.getCombo()),this.pendingClearResult=null,console.log("Line clear completed. Score was already updated. Current score:",this.score,"Current level:",this.level)}catch(c){console.error("Error during line clear completion:",c),console.log("Attempting recovery from line clear error...");try{const h=this.scoringSystem.clearLinesFromBoard(this.board,e);h&&h.board?(this.board=h.board,this.pendingClears=null,this.pendingClearsTimestamp=null,this.pendingClearResult=null,console.log("Recovery successful, lines cleared")):console.error("Recovery failed, keeping pending state for manual intervention")}catch(h){console.error("Recovery attempt also failed:",h)}return}this.createLineClearEffect(e);const o=this.canvas.width/2,a=this.canvas.height/2;this.effectsManager.onLineClear(o,a,e);const l=i?i.scoreGained:0,r=i?i.isCombo:!1;this.createScorePopup(o,a,l,e,r,s,((n=this.storage.loadSettings())==null?void 0:n.comboDisplayMode)||"cumulative"),s>=1&&(this.createComboEffect(s,o,a+50),this.effectsManager.onCombo(o,a+50,s)),this.updateUI(),this.updatePlaceabilityIndicators(),setTimeout(()=>{this.checkLineClears()},200)}forceCompleteLineClear(e){console.log("Force completing line clear for:",e);try{this.clearTimeoutId&&(clearTimeout(this.clearTimeoutId),this.clearTimeoutId=null),this.safetyTimeoutId&&(clearTimeout(this.safetyTimeoutId),this.safetyTimeoutId=null);const t=this.scoringSystem.clearLinesFromBoard(this.board,e);t&&t.board?(this.board=t.board,this.pendingClears=null,this.pendingClearsTimestamp=null,this.pendingClearResult=null,this.petrificationManager.thawAll(),this.petrificationManager.updateBoardTracking(this.board),this.updateUI(),this.updatePlaceabilityIndicators(),console.log("Force clear completed successfully")):(console.error("Force clear failed - using emergency reset"),this.resetStuckUIState())}catch(t){console.error("Force clear error:",t),this.resetStuckUIState()}}newGame(){this.score>0&&this.checkHighScore(),this.board=this.initializeBoard(),this.scoringSystem.reset(),this.petrificationManager.resetAll(),this.petrificationManager.resetStats(),this.deadPixelsManager&&this.deadPixelsManager.isEnabled()&&this.deadPixelsManager.generateDeadPixels(this.boardSize),this.score=0,this.level=1,this.selectedBlock=null,this.previewPosition=null,this.isGameOver=!1,this.stopSpeedTimerCountdown(),this.timerSystem.reset(),this.timerSystem.start(),this.isInitialized=!0;const e=this.storage.loadSettings();this.comboModeActive=e.comboDisplayMode||"cumulative",this.comboModesUsed=new Set,this.blockPalette&&this.blockPalette.stopTimeoutChecking&&this.blockPalette.stopTimeoutChecking(),this.blockPalette&&this.blockPalette.resetDragState&&this.blockPalette.resetDragState(),this.previousScore=0,this.previousLevel=1,this.previousCombo=0,this.previousTotalCombos=0,this.generateNewBlocks(),this.drawBoard(),this.updateUI(),this.storage.clearGameState()}restartWithDifficulty(e){console.log(`Restarting game with difficulty: ${e}`),this.difficulty=e,this.difficultyManager.setDifficulty(e),this.updateDifficultyButton(),this.timerSystem.initialize(),this.timerSystem.start(),this.hintSystem.reset(),this.newGame()}updateUI(){const e=document.getElementById("score"),t=document.getElementById("level"),s=document.getElementById("combo"),i=document.getElementById("combo-label"),o=document.getElementById("speed-timer"),a=document.getElementById("speed-timer-value"),l=this.scoringSystem.getCombo(),r=this.scoringSystem.getTotalCombos(),n=this.scoringSystem.getSpeedStats(),h=this.storage.loadSettings().comboDisplayMode||"cumulative";if(this.comboModeActive=h,this.comboModesUsed.add(h),this.previousScore===0&&this.score>0?this.successModeEnabled&&this.animateFirstScore(e):this.score>this.previousScore&&this.animateScoreIncrease(e),this.level>this.previousLevel){this.animateLevelUp(t);const m=this.scoringSystem.applyEmptyGridBonus(this.board);m>0&&this.showEmptyGridBonus(m)}const d=this.previousTotalCombos||0;if(h==="cumulative"?r>d&&r>=1&&this.animateComboHit(s):l>this.previousCombo&&l>=1&&this.animateComboHit(s),e.textContent=this.score,t.textContent=this.level,i&&(i.textContent="Combo"),h==="cumulative"?s.textContent=r:s.textContent=l,o&&a)if(this.storage.loadSettings().showSpeedTimer===!0){if(o.style.display="flex",this.speedDisplayMode==="timer")if(this.speedTimerStartTime){const b=((Date.now()-this.speedTimerStartTime)/1e3).toFixed(1);a.textContent=`${b}s`}else a.textContent="0.0s";else if(a.textContent=n.totalSpeedBonus,n.speedBonuses.length>0){const u=n.speedBonuses[n.speedBonuses.length-1];Date.now()-u.timestamp<2e3&&(o.classList.add("speed-pulse"),setTimeout(()=>{o.classList.remove("speed-pulse")},600))}}else o.style.display="none";this.previousScore=this.score,this.previousLevel=this.level,this.previousCombo=l,this.previousTotalCombos=r,this.updateHintControls(),this.renderPersonalBests()}renderPersonalBests(){try{const e=document.getElementById("personal-bests");if(!e)return;if(!(this.showPersonalBests===!0)){e.style.display="none";return}const i=this.storage.getBestScoresByDifficulty()[this.difficulty]||0,o=this.difficulty.charAt(0).toUpperCase()+this.difficulty.slice(1);e.innerHTML=`
                <span class="pb-item">
                    <span class="pb-label">BEST</span>
                    <span class="pb-value">${i.toLocaleString()}</span>
                </span>
            `,e.style.display="inline-flex"}catch(e){console.warn("renderPersonalBests failed:",e)}this.updateUtilityBarState()}showPointBreakdown(e,t){if(!e||e.scoreGained===0)return;let s=document.getElementById("point-breakdown");s||(s=document.createElement("div"),s.id="point-breakdown",s.className="point-breakdown",document.querySelector(".game-info").appendChild(s));const i=e.breakdown||{},o=[];if(i.linePoints>0){const a=t.rows.length+t.columns.length;o.push(`${a} Line${a>1?"s":""}: +${i.linePoints}`)}if(i.squarePoints>0){const a=t.squares.length;o.push(`${a} Square${a>1?"s":""}: +${i.squarePoints}`)}i.comboBonus>0&&o.push(`Combo Bonus: +${i.comboBonus}`),o.length>0&&(s.innerHTML=o.join("<br>"),s.style.display="block",s.style.opacity="1",s.style.transition="all 0.3s ease-out",s.style.transform="scale(1.1)",s.style.color=this.getClearGlowColor(),setTimeout(()=>{s.style.opacity="0",s.style.transform="scale(1)",setTimeout(()=>{s.style.display="none"},300)},3e3)),this.showFloatingScore(e.scoreGained,e.isComboEvent)}showFloatingScore(e,t=!1){const i=document.getElementById("score").getBoundingClientRect(),o=this.canvas.getBoundingClientRect(),a=i.left+i.width/2-o.left,l=i.top+i.height/2-o.top,r=document.createElement("div");r.className="floating-score",r.textContent=`+${e}`,r.style.position="absolute",r.style.left=`${a}px`,r.style.top=`${l}px`,r.style.color=t?"#ff6600":this.getClearGlowColor(),r.style.fontSize="2rem",r.style.fontWeight="900",r.style.textShadow=`0 0 10px ${t?"#ff6600":this.getClearGlowColor()}`,r.style.pointerEvents="none",r.style.zIndex="1000",r.style.transition="all 1.5s ease-out",this.canvas.parentElement.appendChild(r),setTimeout(()=>{r.style.transform="translateY(-60px) scale(1.2)",r.style.opacity="0"},100),setTimeout(()=>{r.parentElement&&r.parentElement.removeChild(r)},1600)}showPlacementPointsFeedback(e,t,s){if(!(this.storage.loadSettings().showPlacementPoints===!0))return;const a=this.actualCellSize||this.cellSize,l=s*a+a/2,r=t*a+a/2,n=document.createElement("div");n.className="floating-placement-points",n.textContent=`+${e}`,n.style.position="absolute",n.style.left=`${l}px`,n.style.top=`${r}px`,n.style.color="#00ff88",n.style.fontSize="1.2rem",n.style.fontWeight="700",n.style.textShadow="0 0 8px #00ff88",n.style.pointerEvents="none",n.style.zIndex="1000",n.style.transition="all 1.2s ease-out",n.style.transform="translate(-50%, -50%) scale(0.8)",n.style.opacity="0",this.canvas.parentElement.appendChild(n),setTimeout(()=>{n.style.transform="translate(-50%, -50%) scale(1.1)",n.style.opacity="1"},50),setTimeout(()=>{n.style.transform="translate(-50%, -80px) scale(0.9)",n.style.opacity="0"},800),setTimeout(()=>{n.parentElement&&n.parentElement.removeChild(n)},1300)}showEmptyGridBonus(e){const t=this.canvas.width/2,s=this.canvas.height/2,i=document.createElement("div");i.className="floating-empty-grid-bonus",i.textContent=`Empty Grid Bonus: +${e}`,i.style.position="absolute",i.style.left=`${t}px`,i.style.top=`${s}px`,i.style.color="#00ff88",i.style.fontSize="1.8rem",i.style.fontWeight="900",i.style.textShadow="0 0 15px #00ff88, 0 0 30px #00ff88",i.style.pointerEvents="none",i.style.zIndex="1001",i.style.transition="all 2.5s ease-out",i.style.transform="translate(-50%, -50%) scale(0.8)",i.style.opacity="0",i.style.textAlign="center",i.style.whiteSpace="nowrap",this.canvas.parentElement.appendChild(i),setTimeout(()=>{i.style.transform="translate(-50%, -50%) scale(1.3)",i.style.opacity="1"},100),setTimeout(()=>{i.style.transform="translate(-50%, -120px) scale(1.1)",i.style.opacity="0"},1500),setTimeout(()=>{i.parentElement&&i.parentElement.removeChild(i)},2600),this.successModeEnabled&&this.effectsManager.particles.createEmptyGridBonusEffect(t,s),this.effectsManager.sound&&this.effectsManager.sound.play("emptyGridBonus"),this.effectsManager.haptic&&this.effectsManager.haptic.onEmptyGridBonus()}updateHintControls(){const e=document.getElementById("hint-controls"),t=document.getElementById("hint-btn");if(console.log("updateHintControls called"),console.log("hintControls element:",e),console.log("hintBtn element:",t),console.log("isHintsEnabled:",this.difficultyManager.isHintsEnabled()),console.log("current difficulty:",this.difficultyManager.getCurrentDifficulty()),e&&t){const s=this.difficultyManager.isHintsEnabled();if(e.style.display=s?"block":"none",console.log("Setting hint controls display to:",s?"block":"none"),s){const i=this.hintSystem.getHintStatus();t.disabled=!i.available,i.active?t.textContent="💡 Hint On":i.available?t.textContent="💡 Hint Off":t.textContent=`💡 Hint (${Math.ceil(i.cooldownRemaining/1e3)}s)`,console.log("Hint button status:",i)}}else console.error("Hint controls or button not found in updateHintControls");this.updateUtilityBarState()}updateUtilityBarState(){const e=document.getElementById("utility-bar");if(!e)return;const t=document.getElementById("timer-display"),s=document.getElementById("speed-timer"),i=document.getElementById("hint-controls"),o=document.getElementById("personal-bests");t&&t.style.display!=="none"||s&&s.style.display!=="none"||i&&i.style.display!=="none"||o&&o.style.display!=="none"?e.classList.add("has-content"):e.classList.remove("has-content"),this.updateSlotActiveState("hint-slot",i),this.updateSlotActiveState("timer-slot",t),this.updateSlotActiveState("personal-best-slot",o),this.updateSlotActiveState("speed-timer-slot",s)}updateSlotActiveState(e,t){const s=document.getElementById(e);if(!s)return;t&&t.style.display!=="none"?s.classList.add("active"):s.classList.remove("active")}updateTimerDisplay(){const e=document.getElementById("timer-display"),t=document.getElementById("timer");if(e&&t&&this.timerSystem){const s=this.difficultyManager.getTimeLimit()!==null;if(e.style.display=s?"block":"none",s){const i=this.timerSystem.getTimeRemaining();t.textContent=this.timerSystem.formatTime(i),e.classList.remove("warning","critical"),this.timerSystem.isCriticalTime()?e.classList.contains("critical")||(e.classList.add("critical"),this.effectsManager.sound.play("timeCritical")):this.timerSystem.isWarningTime()&&(e.classList.contains("warning")||(e.classList.add("warning"),this.effectsManager.sound.play("timeWarning"))),t.style.color="",t.style.textShadow="",t.style.animation=""}}this.updateUtilityBarState()}handleTimeUp(){this.effectsManager.onError(),this.gameOver()}showTimeBonus(e){this.effectsManager.onScoreGain(e);const t=this.canvas;this.ctx;const s=t.width/2,i=t.height/2;this.effectsManager.particles.createFloatingText(s,i-50,`+${e}s`,this.getClearGlowColor(),2e3)}updateDifficultyButton(){const e=document.getElementById("difficulty-btn");if(e){const t=this.difficultyManager.getCurrentDifficulty(),s=this.difficultyManager.getDifficultyInfo();e.classList.remove("easy","normal","hard","expert"),e.classList.add(t),e.textContent=s.name,e.title=`Current difficulty: ${s.name} - ${s.description}`}}createLineClearEffect(e){const t=this.getClearGlowColor();this.ctx.fillStyle=t,this.ctx.globalAlpha=.8,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,setTimeout(()=>{this.ctx.fillStyle="#ffffff",this.ctx.globalAlpha=.6,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,setTimeout(()=>{this.drawBoard()},150)},100)}createScorePopup(e,t,s,i={rows:[],columns:[],squares:[]},o=!1,a=0,l="streak"){var b,y,S;this.ctx.save(),this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(e-60,t-20,120,40);const r=this.getClearGlowColor();this.ctx.strokeStyle=r,this.ctx.lineWidth=2,this.ctx.strokeRect(e-60,t-20,120,40);const n=(((b=i==null?void 0:i.rows)==null?void 0:b.length)||0)+(((y=i==null?void 0:i.columns)==null?void 0:y.length)||0),c=((S=i==null?void 0:i.squares)==null?void 0:S.length)||0,h=[];n>0&&h.push(`${n} line${n>1?"s":""}`),c>0&&h.push(`${c} square${c>1?"s":""}`);const d=h.length?h.join(" + "):"Placement";this.ctx.fillStyle=r,this.ctx.font="bold 22px Arial",this.ctx.textAlign="center",this.ctx.fillText(`+${s}`,e,t),this.ctx.fillStyle="#ffffff",this.ctx.font="bold 14px Arial";const m=o?l==="cumulative"?` • COMBO x${a} (total)`:` • COMBO x${a}`:"";this.ctx.fillText(`${d}${m}`,e,t+18),this.ctx.restore();let f=0;const u=()=>{if(f<60){this.ctx.save(),this.ctx.globalAlpha=1-f/60,this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(e-70,t-24-f*2,140,48),this.ctx.strokeStyle=r,this.ctx.lineWidth=2,this.ctx.strokeRect(e-70,t-24-f*2,140,48),this.ctx.fillStyle=r,this.ctx.font="bold 22px Arial",this.ctx.textAlign="center",this.ctx.fillText(`+${s}`,e,t-4-f*2),this.ctx.fillStyle="#ffffff",this.ctx.font="bold 14px Arial";const B=o?l==="cumulative"?` • COMBO x${a} (total)`:` • COMBO x${a}`:"";this.ctx.fillText(`${d}${B}`,e,t+14-f*2),this.ctx.restore(),f++,requestAnimationFrame(u)}else this.drawBoard()};setTimeout(()=>{requestAnimationFrame(u)},200)}createComboEffect(e,t,s){if(!this.successModeEnabled)return;this.ctx.save(),this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillRect(t-80,s-15,160,30),this.ctx.strokeStyle="#ff6600",this.ctx.lineWidth=2,this.ctx.strokeRect(t-80,s-15,160,30),this.ctx.fillStyle="#ff6600",this.ctx.font="bold 24px Arial",this.ctx.textAlign="center",this.ctx.fillText(`${e}x COMBO!`,t,s+5),this.ctx.restore();let i=0;const o=()=>{if(i<60){this.ctx.save();const a=1+Math.sin(i*.3)*.2;this.ctx.scale(a,a),this.ctx.globalAlpha=1-i/60,this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillRect((t-80)/a,(s-15)/a,160/a,30/a),this.ctx.strokeStyle="#ff6600",this.ctx.lineWidth=2,this.ctx.strokeRect((t-80)/a,(s-15)/a,160/a,30/a),this.ctx.fillStyle="#ff6600",this.ctx.font="bold 24px Arial",this.ctx.textAlign="center",this.ctx.fillText(`${e}x COMBO!`,t/a,(s+5)/a),this.ctx.restore(),i++,requestAnimationFrame(o)}else this.drawBoard()};setTimeout(()=>{requestAnimationFrame(o)},300)}animateFirstScore(e){e.style.transition="all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55)",e.style.transform="scale(1.6)";const t=this.getClearGlowColor();e.style.color=t,e.style.textShadow=`0 0 20px ${t}`,setTimeout(()=>{e.style.transform="scale(1.3)"},300),setTimeout(()=>{e.style.transform="scale(1.1)"},500),setTimeout(()=>{e.style.transform="scale(1)",e.style.color="",e.style.textShadow=""},800)}animateScoreIncrease(e){e.style.transition="all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55)",e.style.transform="scale(1.3)",e.style.color=this.getClearGlowColor(),e.style.textShadow=`0 0 15px ${this.getClearGlowColor()}`,setTimeout(()=>{e.style.transform="scale(1.1)"},200),setTimeout(()=>{e.style.transform="scale(1)",e.style.color="",e.style.textShadow=""},400)}animateLevelUp(e){e.style.transition="all 0.8s ease-out",e.style.transform="scale(1.4) rotate(5deg)",e.style.color="#ff6600",e.style.textShadow="0 0 15px #ff6600";const t=this.canvas.width/2,s=this.canvas.height/2;this.effectsManager.onLevelUp(t,s),this.showEncouragingLevelMessage(),setTimeout(()=>{e.style.transform="scale(1) rotate(0deg)",e.style.color="",e.style.textShadow=""},800)}showEncouragingLevelMessage(){const e=this.ctx,t=this.canvas.width/2,s=this.canvas.height/2-60,i=this.getEncouragementText();e.save(),e.fillStyle="rgba(0, 0, 0, 0.75)",e.fillRect(t-140,s-24,280,48),e.strokeStyle="#ff6600",e.lineWidth=2,e.strokeRect(t-140,s-24,280,48),e.fillStyle="#ffcc66",e.font="bold 18px Arial",e.textAlign="center",e.fillText(i,t,s+6),e.restore(),setTimeout(()=>this.drawBoard(),1200)}getEncouragementText(){var o,a;const e=this.level,t=((a=(o=this.difficultyManager)==null?void 0:o.getCurrentDifficulty)==null?void 0:a.call(o))||this.difficulty||"normal",s={easy:["Great rhythm! Keep building streaks!","Nice clears! Try planning two moves ahead.","You’re cruising—consider Normal soon!"],normal:["Clean plays! Eye the 3x3 squares.","Strong pace—chain those clears!","Feeling comfy? Hard might be fun!"],hard:["Impressive! Combos are your friend.","Great foresight—minimize leftover singles.","Dominating Hard? Expert awaits."],expert:["Elite moves! Stay calm under the clock.","Precision play—keep the board breathable.","Excellent focus—push that high score!"]},i=s[t]||s.normal;return i[(e-1)%i.length]}animateComboHit(e){e.style.transition="all 0.5s ease-out",e.style.transform="scale(1.3)",e.style.color="#ff0066",e.style.textShadow="0 0 12px #ff0066";let t=0;const s=()=>{t<3?(e.style.transform=t%2===0?"scale(1.3)":"scale(1.1)",t++,setTimeout(s,150)):(e.style.transform="scale(1)",e.style.color="",e.style.textShadow="")};setTimeout(s,200)}loadGameState(){const e=this.storage.loadGameState();e?(console.log("Loading saved game state:",e),this.board=e.board||this.initializeBoard(),this.score=e.score||0,this.level=e.level||1,this.previousScore=this.score,this.previousLevel=this.level,this.previousCombo=0,this.previousTotalCombos=0,this.scoringSystem.score=this.score,this.scoringSystem.level=this.level,e.scoringState&&(this.scoringSystem.linesCleared=e.scoringState.linesCleared||0,this.scoringSystem.combo=e.scoringState.combo||0,this.scoringSystem.maxCombo=e.scoringState.maxCombo||0,this.scoringSystem.rowsClearedCount=e.scoringState.rowsClearedCount||0,this.scoringSystem.columnsClearedCount=e.scoringState.columnsClearedCount||0,this.scoringSystem.squaresClearedCount=e.scoringState.squaresClearedCount||0,this.scoringSystem.comboActivations=e.scoringState.comboActivations||0,this.scoringSystem.pointsBreakdown=e.scoringState.pointsBreakdown||{linePoints:0,squarePoints:0,comboBonusPoints:0}),e.currentBlocks&&(this.blockManager.currentBlocks=e.currentBlocks,this.blockPalette.updateBlocks(e.currentBlocks)),e.selectedBlock&&(this.selectedBlock=e.selectedBlock),e.petrificationState&&this.petrificationManager&&this.petrificationManager.deserialize(e.petrificationState),e.deadPixelsState&&this.deadPixelsManager&&this.deadPixelsManager.deserialize(e.deadPixelsState),this.updatePlaceabilityIndicators(),console.log("Game state loaded successfully")):(console.log("No saved game state found - starting fresh game"),(!this.board||!Array.isArray(this.board))&&(this.board=this.initializeBoard()),this.blockPalette?(console.log("Rendering block palette before generating blocks"),this.blockPalette.render()):console.error("BlockPalette not available!"),setTimeout(()=>{console.log("Generating new blocks for fresh game"),this.generateNewBlocks()},10))}saveGameState(){if(!(this.score>0||this.board&&this.board.some(s=>s.some(i=>i===1))||this.blockManager.currentBlocks&&this.blockManager.currentBlocks.length>0)){console.log("No game progress to save, skipping save");return}const t={board:this.board,score:this.score,level:this.level,currentBlocks:this.blockManager.currentBlocks,selectedBlock:this.selectedBlock,scoringState:{linesCleared:this.scoringSystem.linesCleared,combo:this.scoringSystem.combo,maxCombo:this.scoringSystem.maxCombo,rowsClearedCount:this.scoringSystem.rowsClearedCount,columnsClearedCount:this.scoringSystem.columnsClearedCount,squaresClearedCount:this.scoringSystem.squaresClearedCount,comboActivations:this.scoringSystem.comboActivations,pointsBreakdown:this.scoringSystem.pointsBreakdown},petrificationState:this.petrificationManager?this.petrificationManager.serialize():null,deadPixelsState:this.deadPixelsManager?this.deadPixelsManager.serialize():null};console.log("Saving game state:",t),this.storage.saveGameState(t),console.log("Game state saved successfully")}loadSettings(){if(this.storage){const e=this.storage.loadSettings();console.log("Loading theme from storage:",e.theme),this.currentTheme=e.theme||"wood",console.log("Current theme set to:",this.currentTheme),this.difficulty=e.difficulty||"normal",this.autoSave=e.autoSave!==!1;const t=this.difficultySettings.getSettingsForDifficulty(this.difficulty);this.soundEnabled=t.soundEnabled===!0,this.animationsEnabled=t.animationsEnabled!==!1,this.enableHints=t.enableHints||!1,this.enableTimer=t.enableTimer||!1,this.enablePetrification=t.enablePetrification||!1,this.enableDeadPixels=t.enableDeadPixels||!1,this.deadPixelsIntensity=t.deadPixelsIntensity||0,this.showPoints=t.showPoints||!1,this.showPersonalBests=t.showPersonalBests||!1,this.showSpeedTimer=t.showSpeedTimer||!1,console.log(`🎮 Difficulty level game settings applied for: ${this.difficulty.toUpperCase()}`),console.log("Applied settings:",{soundEnabled:this.soundEnabled,animationsEnabled:this.animationsEnabled,enableHints:this.enableHints,enableTimer:this.enableTimer,enablePetrification:this.enablePetrification,enableDeadPixels:this.enableDeadPixels,showPoints:this.showPoints,showPersonalBests:this.showPersonalBests,showSpeedTimer:this.showSpeedTimer}),this.showPlacementPoints=e.showPlacementPoints||!1,this.speedDisplayMode=e.speedDisplayMode||"timer",this.particlesEnabled=e.particlesEnabled!==!1;const s=e.speedMode||"ignored";this.scoringSystem.setSpeedMode(s),this.pieceTimeoutEnabled=e.pieceTimeoutEnabled||!1,this.hapticEnabled=e.hapticEnabled!==!1,this.enablePrizeRecognition=e.enablePrizeRecognition!==!1,this.successModeEnabled=e.successModeEnabled!==!1,this.petrificationManager&&this.petrificationManager.setEnabled(this.enablePetrification),this.blockHoverEffects=e.blockHoverEffects!==!1,this.blockSelectionGlow=e.blockSelectionGlow!==!1,this.blockEntranceAnimations=e.blockEntranceAnimations!==!1,this.particleEffects=e.particleEffects!==!1,this.animationSpeed=e.animationSpeed||"normal",this.settings=e;const i=localStorage.getItem("blockdoku_pending_difficulty");if(i&&(this.difficulty=i,localStorage.removeItem("blockdoku_pending_difficulty")),this.applyTheme(this.currentTheme),this.blockPalette&&this.blockPalette.setPieceTimeoutEnabled&&this.blockPalette.setPieceTimeoutEnabled(this.pieceTimeoutEnabled),this.verifyThemeLoaded(),document.readyState==="loading"&&document.addEventListener("DOMContentLoaded",()=>{this.applyTheme(this.currentTheme)}),this.difficultyManager&&this.difficultyManager.setDifficulty(this.difficulty),this.applyEffectsSettings(),this.deadPixelsManager){const o=this.deadPixelsManager.isEnabled(),a=this.deadPixelsManager.getIntensity();this.deadPixelsManager.setEnabled(this.enableDeadPixels),this.deadPixelsManager.setIntensity(this.deadPixelsIntensity);const l=this.deadPixelsIntensity!==a;this.enableDeadPixels&&(!o||l)&&(!(this.deadPixelsManager.getDeadPixels().length>0)||l)&&this.deadPixelsManager.generateDeadPixels(this.boardSize),!this.enableDeadPixels&&o&&this.deadPixelsManager.clearDeadPixels()}this.updateBlockPointsDisplay()}}saveSettings(){const e={theme:this.currentTheme,soundEnabled:this.soundEnabled,animationsEnabled:this.animationsEnabled,difficulty:this.difficulty,autoSave:this.autoSave,enableHints:this.enableHints,enableTimer:this.enableTimer,showPoints:this.showPoints,showPlacementPoints:this.showPlacementPoints,particlesEnabled:this.particlesEnabled,hapticEnabled:this.hapticEnabled};this.storage&&this.storage.saveSettings(e)}updateBlockPointsDisplay(){const e=this.showPoints||!1;document.querySelectorAll(".block-info").forEach(s=>{e?s.classList.add("show-points"):s.classList.remove("show-points")})}applyEffectsSettings(){this.effectsManager&&this.effectsManager.updateSettings({particles:this.particlesEnabled!==!1,sound:this.soundEnabled===!0,haptic:this.hapticEnabled!==!1})}applyTheme(e){console.log("App.js applying theme:",e),this.currentTheme=e;try{const i=Array.from(document.querySelectorAll('link[rel="stylesheet"]')).filter(l=>(l.getAttribute("href")||"").includes("/assets/wood-")||(l.href||"").includes("/assets/wood-")),o=Array.from(document.querySelectorAll('link[rel="stylesheet"]')).filter(l=>(l.getAttribute("href")||"").includes("/assets/light-")||(l.href||"").includes("/assets/light-")),a=Array.from(document.querySelectorAll('link[rel="stylesheet"]')).filter(l=>(l.getAttribute("href")||"").includes("/assets/dark-")||(l.href||"").includes("/assets/dark-"));[...i,...o,...a].forEach(l=>{l.disabled=!0}),e==="wood"&&i.length>0?(i[0].disabled=!1,console.log("App.js enabled built wood theme")):e==="light"&&o.length>0?(o[0].disabled=!1,console.log("App.js enabled built light theme")):e==="dark"&&a.length>0&&(a[0].disabled=!1,console.log("App.js enabled built dark theme"))}catch(i){console.log("Error managing built theme links:",i)}["light","dark","wood"].forEach(i=>{const o=document.getElementById(`theme-css-${i}`);o&&(o.disabled=i!==e)});let s=document.getElementById("theme-css");s||(s=document.createElement("link"),s.rel="stylesheet",s.id="theme-css",document.head.appendChild(s)),s.href=`css/themes/${e}.css`,document.documentElement.setAttribute("data-theme",e),document.body.className=document.body.className.replace(/light-theme|dark-theme|wood-theme/g,""),document.body.classList.add(`${e}-theme`),this.pendingClears&&(console.log("Clearing pending clears due to theme switch"),this.pendingClears=null,this.pendingClearsTimestamp=null),setTimeout(()=>{this.draw()},50),this.saveSettings()}checkHighScore(){const e=this.getStats();return this.storage.saveStatistics(e),this.storage.isHighScore(e.score)?(this.storage.saveHighScore(e),!0):!1}getHighScores(){return this.storage.getHighScores()}getStatistics(){return this.storage.loadStatistics()}gameOver(){if(this.isGameOver)return;this.isGameOver=!0,this.stopSpeedTimerCountdown(),console.log("Game Over! Final Score:",this.score),this.blockPalette&&this.blockPalette.pauseTimeoutChecking&&this.blockPalette.pauseTimeoutChecking(),this.blockPalette&&this.blockPalette.resetDragState&&this.blockPalette.resetDragState(),this.stopGameLoop();const e=this.getStats();this.checkHighScore(),this.loadHighScores(),this.settingsManager&&this.settingsManager.refreshStatistics&&this.settingsManager.refreshStatistics(),this.showGameOverModal(e),this.saveGameState(),this.storage&&this.storage.clearGameState&&this.storage.clearGameState()}stopGameLoop(){this.gameRunning=!1,this.animationId&&(cancelAnimationFrame(this.animationId),this.animationId=null)}getPrizeForScore(e){const t=[{minScore:0,maxScore:999,emoji:"🎯",name:"First Steps",message:"Every journey begins with a single step!"},{minScore:1e3,maxScore:2499,emoji:"🌟",name:"Rising Star",message:"You're getting the hang of it!"},{minScore:2500,maxScore:4999,emoji:"🔥",name:"Hot Streak",message:"You're on fire! Keep it up!"},{minScore:5e3,maxScore:9999,emoji:"💎",name:"Diamond Player",message:"Shining bright like a diamond!"},{minScore:1e4,maxScore:19999,emoji:"🏆",name:"Champion",message:"You're a true champion!"},{minScore:2e4,maxScore:49999,emoji:"👑",name:"Royal Master",message:"Fit for a king or queen!"},{minScore:5e4,maxScore:99999,emoji:"🚀",name:"Rocket Master",message:"You're reaching for the stars!"},{minScore:1e5,maxScore:199999,emoji:"⭐",name:"Superstar",message:"You're absolutely stellar!"},{minScore:2e5,maxScore:499999,emoji:"🎪",name:"Carnival Legend",message:"The carnival has a new legend!"},{minScore:5e5,maxScore:999999,emoji:"🎭",name:"Master Performer",message:"A performance worthy of the grandest stage!"},{minScore:1e6,maxScore:1/0,emoji:"🏅",name:"Ultimate Grandmaster",message:"You've achieved the impossible!"}];for(const s of t)if(e>=s.minScore&&e<=s.maxScore)return s;return t[0]}getNextPrizeInfo(e){const t=[{minScore:0,maxScore:999,emoji:"🎯",name:"First Steps"},{minScore:1e3,maxScore:2499,emoji:"🌟",name:"Rising Star"},{minScore:2500,maxScore:4999,emoji:"🔥",name:"Hot Streak"},{minScore:5e3,maxScore:9999,emoji:"💎",name:"Diamond Player"},{minScore:1e4,maxScore:19999,emoji:"🏆",name:"Champion"},{minScore:2e4,maxScore:49999,emoji:"👑",name:"Royal Master"},{minScore:5e4,maxScore:99999,emoji:"🚀",name:"Rocket Master"},{minScore:1e5,maxScore:199999,emoji:"⭐",name:"Superstar"},{minScore:2e5,maxScore:499999,emoji:"🎪",name:"Carnival Legend"},{minScore:5e5,maxScore:999999,emoji:"🎭",name:"Master Performer"},{minScore:1e6,maxScore:1/0,emoji:"🏅",name:"Ultimate Grandmaster"}];for(let s=0;s<t.length;s++)if(e<t[s].minScore)return{nextPrize:t[s],progress:Math.min(100,(e/t[s].minScore*100).toFixed(1)),pointsNeeded:t[s].minScore-e};return null}showGameOverModal(e){var l,r;const t=this.storage.isHighScore(e.score),s=this.enablePrizeRecognition!==!1,i=s?this.getPrizeForScore(e.score):null,o=s?this.getNextPrizeInfo(e.score):null,a={score:e.score,level:e.level,linesCleared:e.linesCleared,maxCombo:e.maxCombo,totalCombos:e.totalCombos||0,maxStreakCount:e.maxStreakCount||0,difficulty:e.difficulty||this.difficulty,difficultyMultiplier:e.difficultyMultiplier||((r=(l=this.difficultyManager)==null?void 0:l.getScoreMultiplier)==null?void 0:r.call(l))||1,isHighScore:t,breakdown:e.breakdown||{linePoints:0,squarePoints:0,comboBonusPoints:0,placementPoints:0,streakBonusPoints:0},rowClears:e.rowClears||0,columnClears:e.columnClears||0,squareClears:e.squareClears||0,petrificationStats:e.petrificationStats,enablePetrification:this.enablePetrification,speedStats:this.scoringSystem.getSpeedStats?this.scoringSystem.getSpeedStats():null,speedMode:this.scoringSystem.speedConfig?this.scoringSystem.speedConfig.mode:"ignored",prizeRecognitionEnabled:s,prize:i,nextPrize:(o==null?void 0:o.nextPrize)||null,nextPrizeProgress:(o==null?void 0:o.progress)||0,nextPrizePointsNeeded:(o==null?void 0:o.pointsNeeded)||0,timestamp:Date.now()};try{localStorage.setItem("blockdoku_lastgame",JSON.stringify(a))}catch(n){console.error("Failed to save last game data:",n)}window.location.href="lastgame.html"}getStats(){var i,o;const e=this.scoringSystem.getStats(),t=((o=(i=this.difficultyManager)==null?void 0:i.getScoreMultiplier)==null?void 0:o.call(i))||1,s=this.petrificationManager?this.petrificationManager.getStats():null;return{score:this.score,level:this.level,linesCleared:e.linesCleared,combo:e.combo,maxCombo:e.maxCombo,totalCombos:e.totalCombos,maxStreakCount:e.maxStreakCount,rowClears:e.rowClears,columnClears:e.columnClears,squareClears:e.squareClears,comboActivations:e.comboActivations,comboModesUsed:Array.from(this.comboModesUsed||[]),breakdown:e.breakdownBase,difficulty:this.difficulty,difficultyMultiplier:t,petrificationStats:s}}showHighScores(){const e=document.getElementById("high-scores-modal"),t=document.getElementById("high-scores-list"),s=document.getElementById("statistics-display"),i=this.getHighScores();i.length===0?t.innerHTML="<p>No high scores yet. Play a game to set your first record!</p>":t.innerHTML=i.map((a,l)=>`
                <div class="score-item">
                    <span class="rank">#${l+1}</span>
                    <span class="score-value">${a.score.toLocaleString()}</span>
                    <span class="score-details">${(a.difficulty||"normal").toUpperCase()} • Level ${a.level} • ${a.linesCleared} lines • ${a.date}</span>
                </div>
            `).join("");const o=this.getStatistics();s.innerHTML=`
            <div class="stat-item">
                <span class="stat-label">Games Played:</span>
                <span class="stat-value">${o.gamesPlayed}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Score:</span>
                <span class="stat-value">${o.totalScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Best Score:</span>
                <span class="stat-value">${o.bestScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Lines:</span>
                <span class="stat-value">${o.totalLinesCleared}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Max Combo:</span>
                <span class="stat-value">${o.maxCombo}</span>
            </div>
        `,e.style.display="block"}hideHighScores(){const e=document.getElementById("high-scores-modal");e.style.display="none"}loadHighScores(){const e=document.getElementById("high-scores-list"),t=document.getElementById("statistics-display");if(!e||!t)return;const s=this.getHighScores();s.length===0?e.innerHTML="<p>No high scores yet. Play a game to set your first record!</p>":e.innerHTML=s.map((o,a)=>`
                <div class="score-item">
                    <span class="rank">#${a+1}</span>
                    <span class="score-value">${o.score.toLocaleString()}</span>
                    <span class="score-details">Level ${o.level} • ${o.linesCleared} lines • Max Streak: ${o.maxCombo||0} • Total Combos: ${o.totalCombos||0} • ${o.date}</span>
                </div>
            `).join("");const i=this.getStatistics();t.innerHTML=`
            <div class="stat-item">
                <span class="stat-label">Games Played:</span>
                <span class="stat-value">${i.gamesPlayed}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Score:</span>
                <span class="stat-value">${i.totalScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Best Score:</span>
                <span class="stat-value">${i.bestScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
				<span class="stat-label">Total Lines:</span>
				<span class="stat-value">${i.totalLinesCleared}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Max Streak:</span>
                <span class="stat-value">${i.maxCombo}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Combos:</span>
                <span class="stat-value">${i.totalCombos||0}</span>
            </div>
        `}showDifficultyModal(){const e=document.getElementById("difficulty-modal");this.updateDifficultyUI(),e.style.display="block"}hideDifficultyModal(){const e=document.getElementById("difficulty-modal");e.style.display="none"}showSettingsModal(){console.log("showSettingsModal called");const e=document.getElementById("settings-modal");if(!e){console.error("Settings modal not found!");return}console.log("Settings modal found, showing..."),this.pwaInstallManager?(this.pwaInstallManager.createInstallButton(),this.pwaInstallManager.showInstallButton()):console.log("PWA Install Manager not available"),this.updateThemeUI(),this.updateDifficultyUI(),this.loadHighScores(),this.settingsManager&&this.settingsManager.refreshStatistics&&this.settingsManager.refreshStatistics(),e.style.display="block",console.log("Settings modal should now be visible")}hideSettingsModal(){const e=document.getElementById("settings-modal");e.style.display="none"}updateDifficultyUI(){document.querySelectorAll(".difficulty-option").forEach(e=>{e.classList.remove("selected"),e.dataset.difficulty===this.difficulty&&e.classList.add("selected")}),document.getElementById("enable-hints").checked=this.enableHints,document.getElementById("enable-timer").checked=this.enableTimer}async selectDifficulty(e){if(console.log(`🎮 App.js: selectDifficulty called with difficulty: ${e}`),console.log(`🎮 App.js: current difficulty before change: ${this.difficulty}`),this.difficulty=e,console.log(`🎮 App.js: difficulty set to: ${this.difficulty}`),this.difficultyManager){const t=this.difficultyManager.setDifficulty(e);console.log(`🎮 App.js: difficultyManager.setDifficulty(${e}) returned: ${t}`)}console.log("🎮 App.js: calling saveSettings()..."),this.saveSettings(),console.log("🎮 App.js: calling loadSettings()..."),this.loadSettings(),console.log("🎮 App.js: calling updateDifficultyUI()..."),this.updateDifficultyUI(),console.log("🎮 App.js: calling updateDifficultyButton()..."),this.updateDifficultyButton(),console.log("🎮 App.js: calling updateHintControls()..."),this.updateHintControls(),console.log("🎮 App.js: calling renderPersonalBests()..."),this.renderPersonalBests(),console.log(`🎮 App.js: selectDifficulty completed. Final difficulty: ${this.difficulty}`)}selectTheme(e){this.gameRunning&&this.saveGameState(),this.blockPalette&&this.blockPalette.clearPlaceability&&this.blockPalette.clearPlaceability(),this.currentTheme=e,this.applyTheme(e),this.updateThemeUI(),this.saveSettings(),this.gameRunning&&(this.drawBoard(),setTimeout(()=>{this.updatePlaceabilityIndicators()},100))}updateThemeUI(){document.querySelectorAll(".theme-option").forEach(e=>{e.classList.remove("selected"),e.dataset.theme===this.currentTheme&&e.classList.add("selected")})}toggleSetting(e,t){switch(e){case"hints":this.enableHints=t;break;case"timer":this.enableTimer=t;break}this.saveSettings()}applyDifficultySettings(){switch(this.difficulty){case"easy":this.enableTimer=!1,this.moveLimit=null,this.timeLimit=null;break;case"normal":this.enableTimer=!1,this.moveLimit=null,this.timeLimit=null;break;case"hard":this.enableTimer=!1,this.moveLimit=50,this.timeLimit=null;break;case"expert":this.enableTimer=!0,this.moveLimit=30,this.timeLimit=300;break}}generateNewBlocks(){let e=3,t="all";switch(this.difficultyManager.getCurrentDifficulty()){case"easy":e=3,t="large";break;case"normal":e=3,t="all";break;case"hard":e=3,t="small";break;case"expert":e=3,t="complex";break}const i=this.blockManager.generateRandomBlocks(e,t,this.difficultyManager);console.log("Generated new blocks:",i),console.log("BlockPalette exists:",!!this.blockPalette),this.blockPalette.updateBlocks(i),this.petrificationManager.updateBlockTracking(i),this.updatePlaceabilityIndicators(),this.updateBlockPointsDisplay(),this.autoSelectNextBlock()}placeBlock(e,t){if(!this.canPlaceBlock(e,t))return;this.board=this.blockManager.placeBlock(this.selectedBlock,e,t,this.board),this.petrificationManager.updateBoardTracking(this.board),this.scoringSystem.addPlacementPoints(this.scoringSystem.basePoints.single,this.difficultyManager.getScoreMultiplier());const s=this.scoringSystem.totalSpeedBonus;this.scoringSystem.recordPlacementTime();const i=this.scoringSystem.totalSpeedBonus-s;this.startSpeedTimerCountdown(),this.score=this.scoringSystem.getScore(),this.showPlacementPointsFeedback(this.scoringSystem.basePoints.single,e,t),i>0&&this.showSpeedTimerFeedback(i,e,t);const o=this.canvas.width/2,a=this.canvas.height/2;this.effectsManager.onBlockPlace(o,a),this.blockPalette.resetPieceTimeout(this.selectedBlock.id),this.blockPalette.resetDragState&&this.blockPalette.resetDragState(),this.petrificationManager.untrackBlock(this.selectedBlock.id),this.blockManager.removeBlock(this.selectedBlock.id),this.selectedBlock=null,this.previewPosition=null,this.blockPalette.updateBlocks(this.blockManager.currentBlocks),this.drawBoard(),this.updateUI(),this.updatePlaceabilityIndicators(),this.checkLineClears(),this.autoSave&&this.saveGameState(),this.blockManager.currentBlocks.length===0&&this.generateNewBlocks(),this.isGameOver||this.checkGameOver(),this.autoSelectNextBlock()}showSpeedTimerFeedback(e,t,s){if(!(this.storage.loadSettings().showSpeedTimer===!0))return;const a=this.cellSize,l=s*a+a/2,r=t*a+a/2,n=this.scoringSystem.getSpeedMode(),c=document.createElement("div");c.className="speed-timer-text",n==="punishment"?c.textContent=`-${e} Too Slow!`:c.textContent=`+${e} Speed!`,c.style.cssText=`
            position: absolute;
            left: ${l}px;
            top: ${r}px;
            transform: translate(-50%, -50%);
            color: ${n==="punishment"?"#ff3333":"#ff6b35"};
            font-weight: 900;
            font-size: 1.2rem;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);
            pointer-events: none;
            z-index: 1000;
            animation: speedTimerFloat 1.5s ease-out forwards;
        `;const h=document.getElementById("board-overlay");h&&(h.appendChild(c),setTimeout(()=>{c.parentNode&&c.parentNode.removeChild(c)},1500)),this.effectsManager.onSpeedTimer(l,r,e)}resetStuckUIState(){console.log("Resetting stuck UI state..."),this.pendingClears=null,this.pendingClearResult=null,this.pendingClearsTimestamp=null,this.clearTimeoutId&&(clearTimeout(this.clearTimeoutId),this.clearTimeoutId=null),this.safetyTimeoutId&&(clearTimeout(this.safetyTimeoutId),this.safetyTimeoutId=null),this.drawBoard(),!this.blockManager.currentBlocks||this.blockManager.currentBlocks.length===0?(console.log("No blocks available, generating new blocks..."),this.generateNewBlocks()):(console.log("Refreshing existing blocks..."),this.blockPalette.updateBlocks(this.blockManager.currentBlocks)),this.updatePlaceabilityIndicators(),this.updateUI(),console.log("UI state reset complete")}checkGameOver(){if(this.board||(console.error("EMERGENCY: Board is undefined in checkGameOver, reinitializing..."),this.board=this.initializeBoard(),this.updatePlaceabilityIndicators()),!this.isInitialized||this.isGameOver||this.blockManager.currentBlocks.length===0)return;if(this.blockPalette.areAllPiecesTimedOut()){console.log("Game Over: All pieces timed out"),this.gameOver();return}const e=this.computePlaceabilityMap();if(Object.values(e).some(s=>s)){this.preGameOverPending=!1;return}this.preGameOverPending||(this.preGameOverPending=!0,this.blockPalette&&this.blockPalette.showPreGameOverIndicator&&this.blockPalette.showPreGameOverIndicator(1250),setTimeout(()=>{this.isGameOver||(!Object.values(this.computePlaceabilityMap()).some(i=>i)?this.gameOver():this.preGameOverPending=!1)},1250))}handlePieceTimeout(e){console.log("Piece timed out:",e),this.blockPalette.areAllPiecesTimedOut()&&setTimeout(()=>{this.isGameOver||(console.log("All pieces timed out - Game Over"),this.gameOver())},1e3)}updatePlaceabilityIndicators(){if(!this.blockManager||!this.blockPalette||!this.blockManager.currentBlocks||this.blockManager.currentBlocks.length===0)return;const e=this.computePlaceabilityMap(),t=Object.keys(e).filter(s=>e[s]);this.blockPalette.setPlaceability&&(t.length===1?this.blockPalette.setPlaceability(e,{highlightLast:!0,durationMs:0}):t.length===0?this.blockPalette.showPreGameOverIndicator(0):this.blockPalette.setPlaceability(e,{highlightLast:!1,durationMs:0}))}computePlaceabilityMap(){const e={};if(!this.blockManager||!this.blockManager.currentBlocks)return e;for(const t of this.blockManager.currentBlocks)e[t.id]=this.canPlaceAnywhere(t);return e}canPlaceAnywhere(e){for(let t=0;t<this.boardSize;t++)for(let s=0;s<this.boardSize;s++)if(this.blockManager.canPlaceBlock(e,t,s,this.board))return!0;return!1}startSpeedTimerCountdown(){this.speedTimerInterval&&clearInterval(this.speedTimerInterval),this.speedTimerStartTime=Date.now(),this.speedTimerInterval=setInterval(()=>{this.updateSpeedTimerDisplay()},100)}stopSpeedTimerCountdown(){this.speedTimerInterval&&(clearInterval(this.speedTimerInterval),this.speedTimerInterval=null),this.speedTimerStartTime=null}updateSpeedTimerDisplay(){if(!(this.storage.loadSettings().showSpeedTimer===!0)||this.speedDisplayMode!=="timer")return;const s=document.getElementById("speed-timer"),i=document.getElementById("speed-timer-value");if(s&&i&&this.speedTimerStartTime){const a=((Date.now()-this.speedTimerStartTime)/1e3).toFixed(1);i.textContent=`${a}s`}}}function k(){window.game=new Q,localStorage.getItem("blockdoku_start_new_game")==="true"&&(localStorage.removeItem("blockdoku_start_new_game"),window.game&&(window.game.isGameOver=!1,window.game.newGame())),window.resetStuckUI=function(){window.game&&window.game.resetStuckUIState?(window.game.resetStuckUIState(),console.log("Stuck UI state has been reset")):console.error("Game not initialized or resetStuckUIState method not available")},console.log("Global resetStuckUI() function available for debugging")}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",k):k();
