import"./modulepreload-polyfill-B5Qt9EMX.js";/* empty css             */import{L as o}from"./level-manager-BX9v6P63.js";import{G as r}from"./game-storage-DL9oYqbD.js";class c{constructor(){this.storage=new r,this.levelManager=new o(null,this.storage),this.currentDifficulty="normal",this.selectedLevel=1,this.progressData=this.storage.loadProgressModeData()||this.getDefaultProgressData(),this.initializePage()}initializePage(){this.setupEventListeners(),this.loadProgressData(),this.renderDifficultySelection(),this.renderProgressStats()}setupEventListeners(){document.getElementById("back-to-settings").addEventListener("click",()=>{window.location.href="gamesettings.html"}),document.getElementById("back-to-game").addEventListener("click",()=>{window.location.href="index.html"}),document.querySelectorAll(".difficulty-option").forEach(e=>{e.addEventListener("click",t=>{const s=t.currentTarget.dataset.difficulty;this.selectDifficulty(s)})}),document.getElementById("change-difficulty").addEventListener("click",()=>{this.showDifficultySelection()}),document.getElementById("back-to-levels").addEventListener("click",()=>{this.showLevelSelection()}),document.getElementById("start-level-btn").addEventListener("click",()=>{this.startSelectedLevel()})}selectDifficulty(e){this.currentDifficulty=e,this.showLevelSelection(),this.renderLevelGrid()}showDifficultySelection(){document.getElementById("difficulty-section").style.display="block",document.getElementById("levels-section").style.display="none",document.getElementById("level-details").style.display="none"}showLevelSelection(){document.getElementById("difficulty-section").style.display="none",document.getElementById("levels-section").style.display="block",document.getElementById("level-details").style.display="none"}showLevelDetails(e){this.selectedLevel=e,document.getElementById("difficulty-section").style.display="none",document.getElementById("levels-section").style.display="none",document.getElementById("level-details").style.display="block",this.renderLevelDetails(e)}renderDifficultySelection(){["easy","normal","hard","expert"].forEach(t=>{const s=this.getCompletedLevelsCount(t),i=document.getElementById(`${t}-completed`);i&&(i.textContent=`${s}/30`)}),document.getElementById("selected-difficulty-title").textContent=`${this.currentDifficulty.charAt(0).toUpperCase()+this.currentDifficulty.slice(1)} Levels`}renderLevelGrid(){const e=document.getElementById("levels-grid");e.innerHTML="";for(let t=1;t<=30;t++){const s=this.createLevelButton(t);e.appendChild(s)}}createLevelButton(e){const t=document.createElement("button");t.className="level-button",t.dataset.level=e;const s=this.isLevelCompleted(e,this.currentDifficulty),i=this.isLevelUnlocked(e,this.currentDifficulty);return s?t.classList.add("completed"):i||t.classList.add("locked"),t.innerHTML=`
            <div class="level-number">${e}</div>
            <div class="level-status">
                ${s?"âœ“":i?"â—‹":"ðŸ”’"}
            </div>
        `,i&&t.addEventListener("click",()=>{this.showLevelDetails(e)}),t}renderLevelDetails(e){const t=this.levelManager.getLevelDefinition(e,this.currentDifficulty);if(!t){console.error(`Level ${e} not found for difficulty ${this.currentDifficulty}`);return}document.getElementById("level-name").textContent=`Level ${e}`,document.getElementById("level-description-text").textContent="Complete the objectives to advance to the next level.";const s=document.getElementById("level-objectives-list");if(s.innerHTML="",t.objectives.scoreTarget){const l=document.createElement("li");l.textContent=`Score ${t.objectives.scoreTarget} points`,s.appendChild(l)}if(t.objectives.maxMoves){const l=document.createElement("li");l.textContent=`Complete in ${t.objectives.maxMoves} moves or less`,s.appendChild(l)}if(t.objectives.comboRequirement>0){const l=document.createElement("li");l.textContent=`Achieve ${t.objectives.comboRequirement} combos`,s.appendChild(l)}const i=document.getElementById("level-rewards-list");if(i.innerHTML="",t.rewards&&t.rewards.length>0)t.rewards.forEach(l=>{const n=document.createElement("li");n.textContent=this.formatReward(l),i.appendChild(n)});else{const l=document.createElement("li");l.textContent="Progress towards next level",i.appendChild(l)}}formatReward(e){return e.startsWith("theme:")?`Unlock ${e.split(":")[1]} theme`:e.startsWith("block:")?`Unlock ${e.split(":")[1]} block type`:e}startSelectedLevel(){this.storage.saveProgressModeData({...this.progressData,selectedLevel:this.selectedLevel,selectedDifficulty:this.currentDifficulty}),window.location.href=`index.html?mode=progress&level=${this.selectedLevel}&difficulty=${this.currentDifficulty}`}renderProgressStats(){const e=this.getTotalCompletedLevels(),t=this.getTotalAchievements(),s=this.getTotalRewards();document.getElementById("total-completed").textContent=e,document.getElementById("total-achievements").textContent=t,document.getElementById("total-rewards").textContent=s}getCompletedLevelsCount(e){var t;return this.progressData.completedLevels&&((t=this.progressData.completedLevels[e])==null?void 0:t.length)||0}getTotalCompletedLevels(){return["easy","normal","hard","expert"].reduce((t,s)=>t+this.getCompletedLevelsCount(s),0)}getTotalAchievements(){return this.progressData.achievements?Object.keys(this.progressData.achievements).length:0}getTotalRewards(){return this.progressData.unlockedRewards?this.progressData.unlockedRewards.length:0}isLevelCompleted(e,t){var s;return this.progressData.completedLevels&&((s=this.progressData.completedLevels[t])==null?void 0:s.includes(e))||!1}isLevelUnlocked(e,t){return e===1?!0:this.isLevelCompleted(e-1,t)}getDefaultProgressData(){return{completedLevels:{easy:[],normal:[],hard:[],expert:[]},achievements:{},unlockedRewards:[],selectedLevel:1,selectedDifficulty:"normal"}}loadProgressData(){const e=this.storage.loadProgressModeData();e&&(this.progressData={...this.getDefaultProgressData(),...e})}}document.addEventListener("DOMContentLoaded",()=>{new c});
