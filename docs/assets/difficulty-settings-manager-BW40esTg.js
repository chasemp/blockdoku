const O="modulepreload",g=function(u,e){return new URL(u,e).href},b={},p=function(e,s,r){let t=Promise.resolve();if(s&&s.length>0){const i=document.getElementsByTagName("link"),a=document.querySelector("meta[property=csp-nonce]"),h=(a==null?void 0:a.nonce)||(a==null?void 0:a.getAttribute("nonce"));t=Promise.allSettled(s.map(n=>{if(n=g(n,r),n in b)return;b[n]=!0;const f=n.endsWith(".css"),m=f?'[rel="stylesheet"]':"";if(!!r)for(let d=i.length-1;d>=0;d--){const c=i[d];if(c.href===n&&(!f||c.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${n}"]${m}`))return;const l=document.createElement("link");if(l.rel=f?"stylesheet":O,f||(l.as="script"),l.crossOrigin="",l.href=n,h&&l.setAttribute("nonce",h),document.head.appendChild(l),f)return new Promise((d,c)=>{l.addEventListener("load",d),l.addEventListener("error",()=>c(new Error(`Unable to preload CSS for ${n}`)))})}))}function o(i){const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=i,window.dispatchEvent(a),!a.defaultPrevented)throw i}return t.then(i=>{for(const a of i||[])a.status==="rejected"&&o(a.reason);return e().catch(o)})};class D{constructor(e){this.storage=e,this.difficultyDefaults=this.initializeDifficultyDefaults()}initializeDifficultyDefaults(){return{easy:{enableHints:!0,showPoints:!0,enableTimer:!1,enablePetrification:!1,enableDeadPixels:!1,showPersonalBests:!0,showSpeedTimer:!1,speedMode:"bonus",animationsEnabled:!0,soundEnabled:!1,pieceTimeoutEnabled:!1,enablePrizeRecognition:!0,enableMagicBlocks:!1},normal:{enableHints:!1,showPoints:!1,enableTimer:!1,enablePetrification:!1,enableDeadPixels:!1,showPersonalBests:!1,showSpeedTimer:!1,speedMode:"ignored",animationsEnabled:!0,soundEnabled:!1,pieceTimeoutEnabled:!1,enablePrizeRecognition:!1,enableMagicBlocks:!1},hard:{enableHints:!1,showPoints:!1,enableTimer:!0,enablePetrification:!1,enableDeadPixels:!1,showPersonalBests:!0,showSpeedTimer:!0,speedMode:"ignored",animationsEnabled:!0,soundEnabled:!1,pieceTimeoutEnabled:!1,enablePrizeRecognition:!1,enableMagicBlocks:!1},expert:{enableHints:!1,showPoints:!1,enableTimer:!0,enablePetrification:!1,enableDeadPixels:!1,showPersonalBests:!0,showSpeedTimer:!0,speedMode:"punishment",animationsEnabled:!0,soundEnabled:!1,pieceTimeoutEnabled:!1,enablePrizeRecognition:!1,enableMagicBlocks:!1}}}getSettingsForDifficulty(e){const s=this.difficultyDefaults[e]||{},r=this.getUserOverrides(e);return e==="hard"&&console.log("🔍 Hard Difficulty Settings Debug:",{difficulty:e,defaultHints:s.enableHints,userOverrides:r,userHintsOverride:r.enableHints,finalHints:{...s,...r}.enableHints}),{...s,...r}}getUserOverrides(e){return this.storage.loadDifficultyOverrides()[e]||{}}saveSettingOverride(e,s,r){const t=this.storage.loadDifficultyOverrides();t[e]||(t[e]={});const o=this.difficultyDefaults[e]||{};r===o[s]?(delete t[e][s],Object.keys(t[e]).length===0&&delete t[e]):t[e][s]=r,this.storage.saveDifficultyOverrides(t)}resetToDefaults(e){const s=this.storage.loadDifficultyOverrides();delete s[e],this.storage.saveDifficultyOverrides(s)}resetAllToDefaults(){this.storage.saveDifficultyOverrides({})}getSettingNote(e){return{enableHints:{easy:"ON for easy",normal:"OFF for normal",hard:"OFF for hard",expert:"OFF for expert"},showPoints:{easy:"ON for easy",normal:"OFF for normal (clean interface)",hard:"OFF for hard (clean interface)",expert:"OFF for expert (clean interface)"},enableTimer:{easy:"OFF for easy",normal:"OFF for normal",hard:"ON for hard",expert:"ON for expert"},showPersonalBests:{easy:"ON for easy",normal:"OFF for normal",hard:"ON for hard",expert:"ON for expert"},showSpeedTimer:{easy:"OFF for easy",normal:"OFF for normal",hard:"ON for hard",expert:"ON for expert"},speedMode:{easy:"BONUS for easy",normal:"IGNORED for normal",hard:"IGNORED for hard",expert:"PUNISHMENT for expert"}}[e]||{}}isAtDefault(e,s){const r=this.difficultyDefaults[e]||{},t=this.getUserOverrides(e);return(t[s]!==void 0?t[s]:r[s])===r[s]}getDifficultiesWithOverrides(){const e=this.storage.loadDifficultyOverrides();return Object.keys(e).filter(s=>Object.keys(e[s]).length>0)}}export{D,p as _};
