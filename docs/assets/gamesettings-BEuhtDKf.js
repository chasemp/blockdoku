import"./modulepreload-polyfill-B5Qt9EMX.js";/* empty css             *//* empty css             */import{D as y,_ as b}from"./difficulty-settings-manager-BW40esTg.js";import{G as S,C as w}from"./confirmation-dialog-DHeRndj-.js";class p{constructor(){this.storage=new S,this.difficultySettings=new y(this.storage),this.settings=this.storage.loadSettings(),this.currentDifficulty=this.settings.difficulty||"normal",this.confirmationDialog=new w,this.init()}init(){this.loadSettings(),this.setupEventListeners(),this.setupResetListeners(),this.setupCrossPageCommunication(),this.updateUI()}loadSettings(){const e=this.storage.loadSettings();this.currentDifficulty=e.difficulty||"normal";const t=this.difficultySettings.getSettingsForDifficulty(this.currentDifficulty);this.settings={...e,...t},this.loadComboDisplaySettings(),this.loadGameModesSettings(),this.loadBasicSettings(),this.loadAdditionalSettings(),this.loadUtilityBarSettings()}loadComboDisplaySettings(){const e=this.settings.comboDisplayMode||"cumulative",t=document.getElementById("combo-streak"),i=document.getElementById("combo-cumulative");t&&i&&(e==="streak"?t.checked=!0:i.checked=!0)}loadGameModesSettings(){const e=document.getElementById("enable-petrification");e&&(e.checked=this.settings.enablePetrification===!0);const t=document.getElementById("enable-dead-pixels"),i=document.getElementById("dead-pixels-intensity"),s=document.getElementById("dead-pixels-intensity-value"),n=document.getElementById("dead-pixels-intensity-container");if(t&&(t.checked=this.settings.enableDeadPixels===!0,n&&(n.style.display=this.settings.enableDeadPixels?"block":"none")),i&&s){const h=this.settings.deadPixelsIntensity||0;i.value=h,s.textContent=h}const o=document.getElementById("enable-magic-blocks");o&&(o.checked=this.settings.enableMagicBlocks===!0);const d=document.getElementById("auto-rotate-blocks");d&&(d.checked=this.settings.autoRotateBlocks===!0);const a=document.getElementById("enable-wild-shapes");a&&(a.checked=this.settings.enableWildShapes===!0);const l=this.settings.speedMode||"ignored",c=document.getElementById("speed-mode-bonus"),u=document.getElementById("speed-mode-punishment"),r=document.getElementById("speed-mode-ignored");c&&u&&r&&(l==="punishment"?u.checked=!0:l==="ignored"?r.checked=!0:c.checked=!0);const f=this.settings.speedDisplayMode||"timer",m=document.getElementById("speed-display-timer"),g=document.getElementById("speed-display-points");m&&g&&(f==="points"?g.checked=!0:m.checked=!0)}loadBasicSettings(){const e=document.getElementById("sound-enabled");e&&(e.checked=this.settings.soundEnabled===!0);const t=document.getElementById("piece-timeout-enabled");t&&(t.checked=this.settings.pieceTimeoutEnabled===!0)}loadAdditionalSettings(){[{id:"auto-save",key:"autoSave"}].forEach(({id:t,key:i})=>{const s=document.getElementById(t);s&&(s.checked=this.settings[i]===!0)})}loadUtilityBarSettings(){[{id:"enable-hints",key:"enableHints"},{id:"enable-timer",key:"enableTimer"},{id:"show-personal-bests",key:"showPersonalBests"},{id:"show-speed-timer",key:"showSpeedTimer"}].forEach(({id:c,key:u})=>{const r=document.getElementById(c);r&&(r.checked=this.settings[u]===!0)});const t=document.getElementById("enable-timer"),i=document.getElementById("countdown-duration"),s=document.getElementById("countdown-duration-value"),n=document.getElementById("countdown-duration-container");if(t&&n&&(n.style.display=this.settings.enableTimer?"block":"none"),i&&s){const c=this.settings.countdownDuration||3;i.value=c,s.textContent=`${c}:00`}const o=document.getElementById("show-speed-timer"),d=document.getElementById("speed-timer-duration"),a=document.getElementById("speed-timer-duration-value"),l=document.getElementById("speed-timer-duration-container");if(o&&l&&(l.style.display=this.settings.showSpeedTimer?"block":"none"),d&&a){const c=this.settings.speedTimerDuration||10;d.value=c,a.textContent=`${c}s`}}setupEventListeners(){this.setupDifficultyListeners(),this.setupComboDisplayListeners(),this.setupGameModesListeners(),this.setupBasicSettingsListeners(),this.setupAdditionalSettingsListeners(),this.setupUtilityBarListeners(),this.setupResetStatisticsListener()}setupDifficultyListeners(){document.querySelectorAll(".difficulty-option").forEach(t=>{t.addEventListener("click",async i=>{i.preventDefault();const s=t.dataset.difficulty;if(s===this.currentDifficulty)return;console.log(`üéÆ Game Settings: Changing difficulty to ${s.toUpperCase()}`),this.currentDifficulty=s,this.settings.difficulty=s;const n=this.difficultySettings.getSettingsForDifficulty(s);Object.assign(this.settings,n),this.storage.saveSettings(this.settings),this.updateDifficultySelection(),this.loadSettings(),this.updateUI(),window.postMessage({type:"difficultyChanged",difficulty:s},"*")})})}updateDifficultySelection(){document.querySelectorAll(".difficulty-option").forEach(t=>{const i=t.dataset.difficulty;i===this.currentDifficulty?t.classList.add("selected"):t.classList.remove("selected"),this.updateDifficultyDescription(t,i)})}updateDifficultyDescription(e,t){const i=e.querySelector("p");i&&(this.difficultyManager?this.renderDifficultyWithBubbles(i,t):b(()=>import("./difficulty-manager-BLAdw1T_.js"),[],import.meta.url).then(s=>{const n=s.DifficultyManager;this.difficultyManager=new n,this.renderDifficultyWithBubbles(i,t)}).catch(s=>{console.warn("Could not load difficulty manager for descriptions:",s)}))}renderDifficultyWithBubbles(e,t){const i=this.difficultyManager.difficultySettings[t],s=i?i.shortDescription:"",n=this.difficultyManager.getComparisonBubbles(t,this.difficultySettings);let o=`<span class="difficulty-short-desc">${s}</span>`;n.length>0&&(o+='<div class="difficulty-bubbles">',n.forEach(d=>{const a=d.type==="enabled"?"bubble-enabled":"bubble-disabled";o+=`<span class="difficulty-bubble ${a}">${d.emoji} ${d.label}</span>`}),o+="</div>"),e.innerHTML=o}setupComboDisplayListeners(){const e=document.getElementById("combo-streak"),t=document.getElementById("combo-cumulative");e&&e.addEventListener("change",()=>{e.checked&&this.saveSetting("comboDisplayMode","streak")}),t&&t.addEventListener("change",()=>{t.checked&&this.saveSetting("comboDisplayMode","cumulative")})}setupGameModesListeners(){const e=document.getElementById("enable-petrification");e&&e.addEventListener("change",()=>{this.saveSetting("enablePetrification",e.checked)});const t=document.getElementById("enable-dead-pixels"),i=document.getElementById("dead-pixels-intensity"),s=document.getElementById("dead-pixels-intensity-container");t&&t.addEventListener("change",()=>{this.saveSetting("enableDeadPixels",t.checked),s&&(s.style.display=t.checked?"block":"none")}),i&&i.addEventListener("input",()=>{const f=parseInt(i.value);this.saveSetting("deadPixelsIntensity",f);const m=document.getElementById("dead-pixels-intensity-value");m&&(m.textContent=f)});const n=document.getElementById("enable-magic-blocks");n&&n.addEventListener("change",()=>{this.saveSetting("enableMagicBlocks",n.checked)});const o=document.getElementById("auto-rotate-blocks");o&&o.addEventListener("change",()=>{this.saveSetting("autoRotateBlocks",o.checked)});const d=document.getElementById("enable-wild-shapes");d&&d.addEventListener("change",()=>{this.saveSetting("enableWildShapes",d.checked)});const a=document.getElementById("speed-mode-bonus"),l=document.getElementById("speed-mode-punishment"),c=document.getElementById("speed-mode-ignored");a&&a.addEventListener("change",()=>{a.checked&&this.saveSetting("speedMode","bonus")}),l&&l.addEventListener("change",()=>{l.checked&&this.saveSetting("speedMode","punishment")}),c&&c.addEventListener("change",()=>{c.checked&&this.saveSetting("speedMode","ignored")});const u=document.getElementById("speed-display-timer"),r=document.getElementById("speed-display-points");u&&u.addEventListener("change",()=>{u.checked&&this.saveSetting("speedDisplayMode","timer")}),r&&r.addEventListener("change",()=>{r.checked&&this.saveSetting("speedDisplayMode","points")})}setupBasicSettingsListeners(){const e=document.getElementById("sound-enabled");e&&e.addEventListener("change",()=>{this.saveSetting("soundEnabled",e.checked)});const t=document.getElementById("piece-timeout-enabled");t&&t.addEventListener("change",()=>{this.saveSetting("pieceTimeoutEnabled",t.checked)})}setupAdditionalSettingsListeners(){[{id:"auto-save",key:"autoSave"}].forEach(({id:t,key:i})=>{const s=document.getElementById(t);s&&s.addEventListener("change",()=>{this.saveSetting(i,s.checked)})})}setupUtilityBarListeners(){[{id:"enable-hints",key:"enableHints"},{id:"enable-timer",key:"enableTimer"},{id:"show-personal-bests",key:"showPersonalBests"},{id:"show-speed-timer",key:"showSpeedTimer"}].forEach(({id:s,key:n})=>{const o=document.getElementById(s);o&&o.addEventListener("change",async()=>{if(s==="enable-timer"){const d=this.settings[n]===!0,a=o.checked;if(d!==a&&this.isGameInProgress()){const c=a?"enabling":"disabling";if(!await this.confirmationDialog.show(`‚ö†Ô∏è Countdown Timer Change

${c==="enabling"?"Enabling":"Disabling"} the countdown timer mid-game will reset your current score to 0.

This ensures fair scoring since the countdown timer affects the game's difficulty and scoring system.

Do you want to continue?`)){o.checked=d;return}this.saveSetting(n,o.checked),this.resetCurrentGameScore()}else if(this.saveSetting(n,o.checked),window.opener&&window.opener.game){const c=window.opener.game;c.timerSystem&&(o.checked?(c.timerSystem.initialize(),c.timerSystem.start()):c.timerSystem.disable()),c.updateTimerDisplay&&c.updateTimerDisplay()}const l=document.getElementById("countdown-duration-container");l&&(l.style.display=o.checked?"block":"none")}else if(s==="show-speed-timer"){const d=this.settings[n]===!0,a=o.checked;if(!d&&a&&this.isGameInProgress()){if(!await this.confirmationDialog.show(`‚ö†Ô∏è Speed Timer Change

Enabling the speed timer mid-game will reset your current score to 0.

This ensures fair scoring since the speed timer affects the game's scoring system and bonus calculations.

Do you want to continue?`)){o.checked=d;return}this.saveSetting(n,o.checked),this.resetCurrentGameScore()}else this.saveSetting(n,o.checked);const l=document.getElementById("speed-timer-duration-container");l&&(l.style.display=o.checked?"block":"none")}else this.saveSetting(n,o.checked)})});const t=document.getElementById("countdown-duration");t&&t.addEventListener("input",async()=>{const s=parseInt(t.value),n=this.settings.countdownDuration||3;if(s!==n&&this.isGameInProgress()&&this.settings.enableTimer){if(!await this.confirmationDialog.show(`‚ö†Ô∏è Countdown Duration Change

Changing the countdown duration mid-game will reset your current score to 0.

This ensures fair scoring since the countdown timer affects the game's difficulty and scoring system.

Do you want to continue?`)){t.value=n;return}this.saveSetting("countdownDuration",s),this.resetCurrentGameScore()}else if(this.saveSetting("countdownDuration",s),window.opener&&window.opener.game&&this.settings.enableTimer){const d=window.opener.game;d.timerSystem&&(d.timerSystem.initialize(),d.timerSystem.start()),d.updateTimerDisplay&&d.updateTimerDisplay()}const o=document.getElementById("countdown-duration-value");o&&(o.textContent=`${s}:00`)});const i=document.getElementById("speed-timer-duration");i&&i.addEventListener("input",async()=>{const s=parseInt(i.value),n=this.settings.speedTimerDuration||10;if(s!==n&&this.isGameInProgress()&&this.settings.showSpeedTimer){if(!await this.confirmationDialog.show(`‚ö†Ô∏è Speed Timer Duration Change

Changing the speed timer duration mid-game will reset your current score to 0.

This ensures fair scoring since the speed timer affects the game's scoring system and bonus calculations.

Do you want to continue?`)){i.value=n;return}this.saveSetting("speedTimerDuration",s),this.resetCurrentGameScore()}else this.saveSetting("speedTimerDuration",s);const o=document.getElementById("speed-timer-duration-value");o&&(o.textContent=`${s}s`)})}setupResetStatisticsListener(){const e=document.getElementById("reset-stats");e&&e.addEventListener("click",async()=>{await this.confirmationDialog.show(`‚ö†Ô∏è PERMANENT DATA LOSS WARNING ‚ö†Ô∏è

This will permanently delete ALL your game data:
‚Ä¢ All high scores for all difficulty levels
‚Ä¢ All game statistics (games played, totals, combos)
‚Ä¢ All personal best records
‚Ä¢ All play time data

Your game settings and preferences will NOT be affected.

This action CANNOT be undone. Are you absolutely sure you want to continue?`)&&this.resetStatistics()})}setupCrossPageCommunication(){window.addEventListener("storage",e=>{(e.key==="blockdoku-settings"||e.key==="blockdoku_settings")&&(console.log("Settings changed in another page, reloading..."),this.settings=this.storage.loadSettings(),this.loadSettings(),this.updateUI())}),window.addEventListener("settingsChanged",e=>{console.log("Settings changed in same page, updating..."),this.settings=this.storage.loadSettings(),this.loadSettings(),this.updateUI()})}saveSetting(e,t){["enableHints","showPoints","enableTimer","enablePetrification","enableDeadPixels","showPersonalBests","showSpeedTimer","speedMode","animationsEnabled","soundEnabled","enableWildBlocks"].includes(e)?(this.difficultySettings.saveSettingOverride(this.currentDifficulty,e,t),console.log(`Difficulty-specific setting saved: ${e} = ${t} for ${this.currentDifficulty}`)):(this.settings[e]=t,this.storage.saveSettings(this.settings),console.log(`Global setting saved: ${e} = ${t}`)),this.settings[e]=t,window.dispatchEvent(new CustomEvent("settingsChanged",{detail:{key:e,value:t}})),this.updateDifficultyBubbles(),this.updateSettingStateBubbles()}updateDifficultyBubbles(){document.querySelectorAll(".difficulty-option").forEach(t=>{const i=t.dataset.difficulty;this.updateDifficultyDescription(t,i)}),this.updateIndividualSettingBubbles()}updateIndividualSettingBubbles(){document.querySelectorAll(".individual-setting-bubble").forEach(e=>{e.remove()})}getSettingKeyForBubble(e,t){return{Hints:"enableHints",Points:"showPoints",Timer:"enableTimer",Best:"showPersonalBests",Speed:"showSpeedTimer",Prizes:"enablePrizeRecognition",Timeout:"pieceTimeoutEnabled"}[e]}addBubbleToSetting(e,t){const i=e.closest(".setting-item");if(!i)return;const s=document.createElement("div");s.className=`individual-setting-bubble difficulty-bubble ${t.type==="enabled"?"bubble-enabled":"bubble-disabled"}`,s.innerHTML=`${t.emoji} ${t.label}`,s.style.marginBottom="0.5rem",s.style.alignSelf="flex-start",i.insertBefore(s,i.firstChild)}addBubbleToSection(e,t){const i=e.querySelector(".individual-setting-bubble");i&&i.remove();const s=document.createElement("div");s.className=`individual-setting-bubble difficulty-bubble ${t.type==="enabled"?"bubble-enabled":"bubble-disabled"}`,s.innerHTML=`${t.emoji} ${t.label}`,s.style.marginBottom="1rem",s.style.alignSelf="flex-start";const n=e.querySelector("h3");n&&n.insertAdjacentElement("afterend",s)}resetStatistics(){this.storage.clearStatistics(),this.storage.clearHighScores(),this.showNotification("All statistics and high scores have been permanently deleted")}showNotification(e){const t=document.createElement("div");t.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            background: var(--primary-color);
            color: white;
            padding: 1rem 2rem;
            border-radius: 8px;
            z-index: 1000;
            font-weight: 600;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
        `,t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},3e3)}updateUI(){this.loadSettings(),this.updateDifficultySelection(),setTimeout(()=>{this.updateIndividualSettingBubbles(),this.updateSettingStateBubbles()},100)}updateSettingStateBubbles(){const e=document.querySelectorAll(".setting-bubble[data-setting]"),t=["hints","timer","personalBest","speedTimer","showPoints","sound","animations","petrification","deadPixels","speedMode","magicBlocks","autoRotate","wildShapes"];e.forEach(i=>{const s=i.dataset.setting;let n=!1;if(s==="speedMode"){const a=this.settings.speedMode||"ignored",l={bonus:"üèÉ Bonus",punishment:"‚ö° Punishment",ignored:"üö∂ Ignored"};i.textContent=l[a]||"üö∂ mode",i.classList.remove("state-red","state-green","state-orange"),a==="ignored"?i.classList.add("state-red"):a==="punishment"?i.classList.add("state-orange"):i.classList.add("state-green"),i.classList.add("difficulty-specific"),i.classList.remove("global-setting");return}if(s==="animationSpeed"){const a=this.settings.animationSpeed||"normal",l={slow:"üê¢ Slow",normal:"üé¨ Normal",fast:"üöÄ Fast"};i.textContent=l[a]||"üé¨ speed",i.classList.remove("state-red","state-green","state-orange"),a==="normal"?i.classList.add("state-red"):a==="fast"?i.classList.add("state-orange"):i.classList.add("state-green"),i.classList.add("global-setting"),i.classList.remove("difficulty-specific");return}const d={hints:"enable-hints",timer:"enable-timer",personalBest:"show-personal-bests",speedTimer:"show-speed-timer",sound:"sound-enabled",animations:"animations-enabled",haptic:"haptic-enabled",autoSave:"auto-save",showPoints:"show-points",placementPoints:"show-placement-points",prizeRecognition:"enable-prize-recognition",successMode:"success-mode-enabled",petrification:"enable-petrification",deadPixels:"enable-dead-pixels",magicBlocks:"enable-magic-blocks",autoRotate:"auto-rotate-blocks",wildShapes:"enable-wild-shapes",blockHover:"block-hover-effects",selectionGlow:"block-selection-glow",blockEntrance:"block-entrance-animations",blockPlacement:"block-placement-animations",lineClear:"line-clear-animations",scoreAnim:"score-animations",combo:"combo-animations",particles:"particle-effects"}[s];if(d){const a=document.getElementById(d);a&&(n=a.checked)}i.classList.remove("state-red","state-green"),i.classList.add(n?"state-green":"state-red"),t.includes(s)?(i.classList.add("difficulty-specific"),i.classList.remove("global-setting")):(i.classList.add("global-setting"),i.classList.remove("difficulty-specific"))})}updateBlockPointsDisplay(){const e=this.settings.showPoints||!1;document.querySelectorAll(".block-info").forEach(i=>{e?i.classList.add("show-points"):i.classList.remove("show-points")})}updateCurrentDifficultyText(){const e=document.getElementById("current-difficulty-text");if(e){const t=this.currentDifficulty.charAt(0).toUpperCase()+this.currentDifficulty.slice(1);e.textContent=`Reset ${t}`}}setupResetListeners(){const e=document.getElementById("reset-current-difficulty");e&&e.addEventListener("click",async()=>{const a=this.currentDifficulty.charAt(0).toUpperCase()+this.currentDifficulty.slice(1);await this.confirmationDialog.show(`Reset ${a} settings to defaults?`)&&(this.difficultySettings.resetToDefaults(this.currentDifficulty),this.loadSettings(),this.updateUI(),this.showNotification(`Settings reset to defaults for ${a} difficulty`))});const t=document.getElementById("reset-all-difficulties");t&&t.addEventListener("click",async()=>{await this.confirmationDialog.show("Reset ALL difficulty settings to defaults?")&&(this.difficultySettings.resetAllToDefaults(),this.loadSettings(),this.updateUI(),this.showNotification("All difficulty settings reset to defaults"))});const i=document.getElementById("toggle-difficulty-defaults"),s=document.getElementById("difficulty-defaults-table"),n=document.getElementById("toggle-text"),o=document.getElementById("toggle-arrow"),d=document.getElementById("view-difficulty-defaults-link");if(i&&s&&n&&o){const a=()=>{s.style.display!=="none"?(s.style.display="none",n.textContent="üìã Show Defaults by Difficulty",o.style.transform="rotate(0deg)"):(s.style.display="block",n.textContent="üìã Hide Defaults by Difficulty",o.style.transform="rotate(180deg)",this.populateDifficultyDefaultsTable(),setTimeout(()=>{s.scrollIntoView({behavior:"smooth",block:"center"})},100))};i.addEventListener("click",a),d&&d.addEventListener("click",l=>{l.preventDefault(),s.style.display==="none"?a():s.scrollIntoView({behavior:"smooth",block:"center"})})}}populateDifficultyDefaultsTable(){const e=document.getElementById("defaults-table-body");if(!e)return;e.innerHTML="";const t=[{key:"enableHints",name:"Enable Hints",description:"Show placement suggestions"},{key:"showPoints",name:"Show Block Points",description:"Display point values on blocks"},{key:"enableTimer",name:"Enable Timer",description:"Add time pressure"},{key:"enablePetrification",name:"Enable Petrification",description:"Blocks petrify over time"},{key:"enableDeadPixels",name:"Enable Dead Pixels",description:"Add visual interference"},{key:"showPersonalBests",name:"Show Personal Bests",description:"Display progress in utility bar"},{key:"showSpeedTimer",name:"Show Speed Timer",description:"Track placement speed"},{key:"speedMode",name:"Speed Tracking Mode",description:"How speed affects scoring"},{key:"enablePrizeRecognition",name:"Enable Prize Recognition",description:"Recognize and celebrate achievements"},{key:"pieceTimeoutEnabled",name:"Enable Piece Timeout",description:"Auto-end game when pieces timeout"},{key:"animationsEnabled",name:"Animations",description:"Visual effects and transitions"},{key:"soundEnabled",name:"Sound Effects",description:"Audio feedback"}],i=["easy","normal","hard","expert"];t.forEach(s=>{const n=document.createElement("tr");n.style.borderBottom="1px solid var(--border-color)";const o=document.createElement("td");o.style.padding="0.75rem",o.style.border="1px solid var(--border-color)",o.innerHTML=`
                <div style="font-weight: 600; color: var(--text-color);">${s.name}</div>
                <div style="font-size: 0.8rem; color: var(--text-muted); margin-top: 0.25rem;">${s.description}</div>
            `,n.appendChild(o),i.forEach(d=>{const a=document.createElement("td");a.style.padding="0.75rem",a.style.border="1px solid var(--border-color)",a.style.textAlign="center";const l=this.difficultySettings.difficultyDefaults[d][s.key];let c,u;if(s.key==="speedMode"){const r={bonus:"var(--success-color, #28a745)",punishment:"var(--warning-color, #ff6b35)",ignored:"var(--muted-color, #6c757d)"};c=l.toUpperCase(),u=r[l]||"var(--muted-color, #6c757d)"}else{const r=l===!0;c=r?"ON":"OFF",u=r?"var(--success-color, #28a745)":"var(--muted-color, #6c757d)"}a.innerHTML=`
                    <div style="display: inline-block; padding: 0.25rem 0.75rem; border-radius: 4px; font-weight: 600; font-size: 0.8rem; 
                                background: ${u}; 
                                color: white;">
                        ${c}
                    </div>
                `,n.appendChild(a)}),e.appendChild(n)})}setupCrossPageCommunication(){window.addEventListener("storage",e=>{(e.key==="blockdoku-settings"||e.key==="blockdoku_settings")&&(this.loadSettings(),this.updateUI(),this.updateCurrentDifficultyText())}),window.addEventListener("focus",()=>{this.loadSettings(),this.updateUI(),this.updateCurrentDifficultyText()})}isGameInProgress(){var e,t;if(window.opener&&window.opener.game){const i=window.opener.game;return i.score>0||((t=(e=i.blockManager)==null?void 0:e.currentBlocks)==null?void 0:t.length)>0}return!1}resetCurrentGameScore(){if(window.opener&&window.opener.game){const e=window.opener.game;e.loadSettings&&e.loadSettings(),e.score=0,e.level=1,e.firstPiecePlaced=!1,e.scoringSystem&&e.scoringSystem.reset(),e.timerSystem&&(e.timerSystem.reset(),e.timerSystem.initialize(),e.timerSystem.isActive?console.log("‚è±Ô∏è Countdown timer will start on next piece placement"):console.log("‚è±Ô∏è Countdown timer disabled")),e.updateUI&&e.updateUI(),e.updateTimerDisplay&&e.updateTimerDisplay(),e.updateUtilityBarLayout&&e.updateUtilityBarLayout()}}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{window.gameSettingsManager=new p}):window.gameSettingsManager=new p;
