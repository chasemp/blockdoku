import"./modulepreload-polyfill-B5Qt9EMX.js";/* empty css             *//* empty css             */import{G as _}from"./game-storage-Umaiwskq.js";import{C as J,P as X}from"./confirmation-dialog-BCUkn7Jw.js";import{S as Y}from"./sound-manager-DEf2ZdWT.js";import{b as R}from"./build-info-D7ucx6ER.js";class K{constructor(){this.storage=new _,this.settings=this.storage.loadSettings(),this.currentTheme=this.settings.theme||"wood",this.pwaInstallManager=null,this.confirmationDialog=new J,this.soundManager=new Y,this.init()}init(){this.loadSettings(),this.setupEventListeners(),this.updateUI(),this.updateBuildInfo(),this.initializePWA()}initializePWA(){try{this.pwaInstallManager=new X,console.log("PWA Install Manager initialized in settings")}catch(e){console.error("Failed to initialize PWA Install Manager:",e)}}loadSettings(){console.log("Settings.js loading settings:",this.settings),this.currentTheme=this.settings.theme||"wood",console.log("Settings.js current theme:",this.currentTheme);const e=document.documentElement.getAttribute("data-theme");console.log("Current data-theme attribute:",e),!e||e!==this.currentTheme?(console.log("Applying theme from settings.js:",this.currentTheme),this.applyTheme(this.currentTheme)):console.log("Theme already applied, skipping"),this.fixSectionPlacement(),this.loadEffectsSettings()}loadEffectsSettings(){const e=document.getElementById("sound-enabled");e&&(e.checked=this.settings.soundEnabled===!0);const n=document.getElementById("sound-enabled-sounds-section");n&&(n.checked=this.settings.soundEnabled===!0);const s=document.getElementById("animations-enabled");s&&(s.checked=this.settings.animationsEnabled!==!1);const o=document.getElementById("block-hover-effects");o&&(o.checked=this.settings.blockHoverEffects!==!1);const c=document.getElementById("block-selection-glow");c&&(c.checked=this.settings.blockSelectionGlow!==!1);const a=document.getElementById("block-entrance-animations");a&&(a.checked=this.settings.blockEntranceAnimations!==!1);const u=document.getElementById("particle-effects");u&&(u.checked=this.settings.particleEffects!==!1);const i=document.getElementById("pattern-detection");i&&(i.checked=this.settings.enablePatternDetection===!0);const l=document.getElementById("block-placement-animations");l&&(l.checked=this.settings.blockPlacementAnimations===!0);const r=document.getElementById("line-clear-animations");r&&(r.checked=this.settings.lineClearAnimations!==!1);const g=document.getElementById("score-animations");g&&(g.checked=this.settings.scoreAnimations!==!1);const m=document.getElementById("combo-animations");m&&(m.checked=this.settings.comboAnimations!==!1);const p=document.getElementById("animation-speed-slow"),E=document.getElementById("animation-speed-normal"),b=document.getElementById("animation-speed-fast"),I=this.settings.animationSpeed||"normal";p&&(p.checked=I==="slow"),E&&(E.checked=I==="normal"),b&&(b.checked=I==="fast");const B=document.getElementById("enable-hints");B&&(B.checked=this.settings.enableHints===!0);const L=document.getElementById("enable-timer");L&&(L.checked=this.settings.enableTimer===!0);const O=document.getElementById("enable-petrification");O&&(O.checked=this.settings.enablePetrification===!0);const A=document.getElementById("enable-dead-pixels");A&&(A.checked=this.settings.enableDeadPixels===!0);const M=document.getElementById("dead-pixels-intensity"),P=document.getElementById("dead-pixels-intensity-value"),T=document.getElementById("dead-pixels-intensity-container");if(M&&P){const S=this.settings.deadPixelsIntensity||0;M.value=S,P.textContent=S,T&&(T.style.display=this.settings.enableDeadPixels===!0?"block":"none")}const x=document.getElementById("auto-save");x&&(x.checked=this.settings.autoSave!==!1);const C=document.getElementById("show-points");C&&(C.checked=this.settings.showPoints===!0);const D=document.getElementById("show-placement-points");if(D&&(D.checked=this.settings.showPlacementPoints===!0),this.speedModeOrder=["ignored","bonus","punishment"],this.currentSpeedModeIndex=0,document.getElementById("speed-mode-toggle")){const S=this.settings.speedMode||"ignored";this.currentSpeedModeIndex=this.speedModeOrder.indexOf(S),this.currentSpeedModeIndex===-1&&(this.currentSpeedModeIndex=0),this.updateSpeedModeDisplay()}const $=document.getElementById("success-mode-enabled");$&&($.checked=this.settings.successModeEnabled!==!1);const N=document.getElementById("show-speed-timer");N&&(N.checked=this.settings.showSpeedTimer===!0);const H=document.getElementById("enable-prize-recognition");H&&(H.checked=this.settings.enablePrizeRecognition!==!1);const G=document.getElementById("combo-streak"),q=document.getElementById("combo-cumulative");G&&q&&((this.settings.comboDisplayMode||"cumulative")==="cumulative"?q.checked=!0:G.checked=!0),this.updateAnimationSettingsVisibility()}updateAnimationSettingsVisibility(){const e=document.getElementById("animations-enabled"),n=document.getElementById("animation-settings");e&&n&&(e.checked?(n.style.display="block",n.style.opacity="1"):(n.style.display="none",n.style.opacity="0.5"))}setupEventListeners(){document.querySelectorAll(".nav-item[data-section]").forEach(t=>{let d=null,h=null,v=!1;const w=f=>{f.preventDefault(),this.showSection(t.dataset.section)},z=()=>{h&&(clearTimeout(h),h=null),v=!1,d=null,t.classList.remove("pressing")},U=f=>{f.preventDefault(),!v&&(v=!0,d=Date.now(),t.classList.add("pressing"),h=setTimeout(()=>{v&&(w(f),z())},10))},k=f=>{v&&(f.preventDefault(),z())};t.addEventListener("mousedown",U),t.addEventListener("mouseup",k),t.addEventListener("mouseleave",k),t.addEventListener("touchstart",U,{passive:!1}),t.addEventListener("touchend",k,{passive:!1}),t.addEventListener("touchcancel",k,{passive:!1}),t.addEventListener("click",f=>{f.preventDefault(),!v&&(!d||Date.now()-d<200)&&w(f)})}),document.querySelectorAll(".theme-option").forEach(t=>{let d=null,h=null,v=!1,w=null;const z=y=>{this.selectTheme(y)},U=()=>{h&&(clearTimeout(h),h=null),v=!1,d=null,t.classList.remove("pressing")},k=y=>{y.preventDefault(),!v&&(v=!0,d=Date.now(),w=y.currentTarget.dataset.theme,t.classList.add("pressing"),h=setTimeout(()=>{v&&w&&(z(w),U())},10))},f=y=>{v&&(y.preventDefault(),U())};t.addEventListener("mousedown",k),t.addEventListener("mouseup",f),t.addEventListener("mouseleave",f),t.addEventListener("touchstart",k,{passive:!1}),t.addEventListener("touchend",f,{passive:!1}),t.addEventListener("touchcancel",f,{passive:!1}),t.addEventListener("click",y=>{y.preventDefault(),!v&&(!d||Date.now()-d<200)&&z(y.currentTarget.dataset.theme)})});const e=document.getElementById("enable-hints");e&&e.addEventListener("change",t=>{this.updateSetting("enableHints",t.target.checked)});const n=document.getElementById("enable-timer");n&&n.addEventListener("change",t=>{this.updateSetting("enableTimer",t.target.checked)});const s=document.getElementById("enable-petrification");s&&s.addEventListener("change",t=>{this.updateSetting("enablePetrification",t.target.checked)});const o=document.getElementById("enable-dead-pixels");o&&o.addEventListener("change",t=>{this.updateSetting("enableDeadPixels",t.target.checked);const d=document.getElementById("dead-pixels-intensity-container");d&&(d.style.display=t.target.checked?"block":"none")});const c=document.getElementById("dead-pixels-intensity"),a=document.getElementById("dead-pixels-intensity-value");c&&a&&c.addEventListener("input",t=>{const d=parseInt(t.target.value);a.textContent=d,this.updateSetting("deadPixelsIntensity",d)});const u=document.getElementById("sound-enabled");u&&u.addEventListener("change",t=>{this.updateSetting("soundEnabled",t.target.checked);const d=document.getElementById("sound-enabled-sounds-section");d&&(d.checked=t.target.checked)});const i=document.getElementById("sound-enabled-sounds-section");i&&i.addEventListener("change",t=>{this.updateSetting("soundEnabled",t.target.checked);const d=document.getElementById("sound-enabled");d&&(d.checked=t.target.checked)});const l=document.getElementById("animations-enabled");l&&l.addEventListener("change",t=>{this.updateSetting("animationsEnabled",t.target.checked),this.updateAnimationSettingsVisibility()});const r=document.getElementById("block-hover-effects");r&&r.addEventListener("change",t=>{this.updateSetting("blockHoverEffects",t.target.checked)});const g=document.getElementById("block-selection-glow");g&&g.addEventListener("change",t=>{this.updateSetting("blockSelectionGlow",t.target.checked)});const m=document.getElementById("block-entrance-animations");m&&m.addEventListener("change",t=>{this.updateSetting("blockEntranceAnimations",t.target.checked)});const p=document.getElementById("particle-effects");p&&p.addEventListener("change",t=>{this.updateSetting("particleEffects",t.target.checked)});const E=document.getElementById("pattern-detection");E&&E.addEventListener("change",t=>{this.updateSetting("enablePatternDetection",t.target.checked)});const b=document.getElementById("block-placement-animations");b&&b.addEventListener("change",t=>{this.updateSetting("blockPlacementAnimations",t.target.checked)});const I=document.getElementById("line-clear-animations");I&&I.addEventListener("change",t=>{this.updateSetting("lineClearAnimations",t.target.checked)});const B=document.getElementById("score-animations");B&&B.addEventListener("change",t=>{this.updateSetting("scoreAnimations",t.target.checked)});const L=document.getElementById("combo-animations");L&&L.addEventListener("change",t=>{this.updateSetting("comboAnimations",t.target.checked)}),document.querySelectorAll('input[name="animation-speed"]').forEach(t=>{t.addEventListener("change",d=>{d.target.checked&&this.updateSetting("animationSpeed",d.target.value)})});const A=document.getElementById("animation-speed");A&&A.addEventListener("change",t=>{this.updateSetting("animationSpeed",t.target.value)});const M=document.getElementById("haptic-enabled");M&&M.addEventListener("change",t=>{this.updateSetting("hapticEnabled",t.target.checked)});const P=document.getElementById("auto-save");P&&P.addEventListener("change",t=>{this.updateSetting("autoSave",t.target.checked)});const T=document.getElementById("show-points");T&&T.addEventListener("change",t=>{this.updateSetting("showPoints",t.target.checked),this.updateBlockPointsDisplay()});const x=document.getElementById("show-placement-points");x&&x.addEventListener("change",t=>{this.updateSetting("showPlacementPoints",t.target.checked)});const C=document.getElementById("speed-mode-toggle");C&&C.addEventListener("click",t=>{t.preventDefault(),this.cycleSpeedMode()});const D=document.getElementById("success-mode-enabled");D&&D.addEventListener("change",t=>{this.updateSetting("successModeEnabled",t.target.checked)});const W=document.getElementById("show-speed-timer");W&&W.addEventListener("change",t=>{this.updateSetting("showSpeedTimer",t.target.checked)});const $=document.getElementById("enable-prize-recognition");$&&$.addEventListener("change",t=>{this.updateSetting("enablePrizeRecognition",t.target.checked)});const N=document.getElementById("combo-streak"),H=document.getElementById("combo-cumulative");N&&H&&(N.addEventListener("change",t=>{t.target.checked&&this.updateSetting("comboDisplayMode","streak")}),H.addEventListener("change",t=>{t.target.checked&&this.updateSetting("comboDisplayMode","cumulative")}));const G=document.getElementById("share-button");G&&G.addEventListener("click",()=>{this.shareGame()});const q=document.getElementById("share-scores-button");q&&q.addEventListener("click",()=>{this.shareHighScores()});const S=document.getElementById("view-last-game-btn");S&&S.addEventListener("click",()=>{this.viewLastGame()});const j=document.getElementById("reset-stats");j&&j.addEventListener("click",async()=>{if(await this.confirmationDialog.show(`⚠️ PERMANENT DATA LOSS WARNING ⚠️

This will permanently delete ALL your game data:
• All high scores for all difficulty levels
• All game statistics (games played, totals, combos)
• All personal best records
• All play time data

Your game settings and preferences will NOT be affected.

This action CANNOT be undone. Are you absolutely sure you want to continue?`)){this.storage.clearStatistics(),this.storage.clearHighScores();try{this.loadHighScores()}catch{}this.showNotification("All statistics and high scores have been permanently deleted")}});const F=document.getElementById("check-upgrade-button");F&&F.addEventListener("click",async()=>{try{if(this.showNotification("Checking for updates..."),"serviceWorker"in navigator){const t=await navigator.serviceWorker.getRegistration();t?(await t.update(),t.waiting?(this.showNotification("Update available! Installing..."),t.waiting.postMessage({type:"SKIP_WAITING"}),navigator.serviceWorker.addEventListener("controllerchange",()=>{this.showNotification("Update installed! Reloading..."),setTimeout(()=>{window.location.reload(!0)},1e3)}),setTimeout(()=>{this.showNotification("Update installed! Reloading..."),window.location.reload(!0)},3e3)):this.showNotification("App is up to date!")):this.showNotification("No service worker found. App may not be installed.")}else this.showNotification("Service workers not supported in this browser.")}catch(t){console.error("Error checking for updates:",t),this.showNotification("Error checking for updates. Check console for details.")}});const V=document.getElementById("clear-cache-button");V&&V.addEventListener("click",async()=>{if(await this.confirmationDialog.show(`Reset Factory Defaults

This will:
• Clear ALL game data (saved games, high scores, settings, statistics)
• Unregister all service workers
• Clear all service worker caches
• Force a fresh reload of all files

⚠️ ALL GAME DATA WILL BE PERMANENTLY DELETED!

This action cannot be undone. Continue?`))try{if("serviceWorker"in navigator){const d=await navigator.serviceWorker.getRegistrations();for(const h of d)await h.unregister(),console.log("Service worker unregistered:",h)}if("caches"in window){const d=await caches.keys();for(const h of d)await caches.delete(h),console.log("Cache deleted:",h)}this.storage.clearAllData(),console.log("All game data cleared from localStorage"),this.showNotification("Factory defaults restored! Reloading page..."),setTimeout(()=>{window.location.reload(!0)},1500)}catch(d){console.error("Error clearing cache:",d),this.showNotification("Error clearing cache. Check console for details.")}})}showSection(e){document.querySelectorAll(".nav-item").forEach(o=>{o.classList.remove("active")});const n=document.querySelector(`[data-section="${e}"]`);n&&n.classList.add("active"),document.querySelectorAll(".settings-section").forEach(o=>{o.classList.remove("active")});const s=document.getElementById(`${e}-section`);s&&s.classList.add("active"),e==="scores"?this.loadHighScores():e==="sounds"&&this.loadSoundCustomization()}loadSoundCustomization(){const e=document.getElementById("sound-customization-container");if(!e)return;this.soundManager.setEnabled(!0);const n=this.soundManager.getGroupedSoundEffects(),s=this.soundManager.getAvailablePresets(),o=this.soundManager.getGroupedSoundSettings();let c="";for(const[i,l]of Object.entries(n)){const r=o[i]||"default",g=r==="mixed",m=r==="none";c+=`
                <div class="sound-group-item">
                    <div class="sound-group-info">
                        <h4>${l.name}</h4>
                        <p>${l.description}</p>
                        <div class="sound-group-details">
                            <small>Includes: ${l.sounds.length} sound${l.sounds.length!==1?"s":""}</small>
                            ${g?'<small class="mixed-indicator">⚠️ Mixed presets</small>':""}
                        </div>
                    </div>
                    <div class="sound-group-controls">
                        <select class="sound-group-preset-select" data-group="${i}">
                            <option value="default" ${r==="default"?"selected":""}>Default</option>
                            <option value="none" ${r==="none"?"selected":""}>None</option>
                            ${Object.entries(s).map(([p,E])=>p!=="default"?`<option value="${p}" ${r===p?"selected":""}>${E.name}</option>`:"").join("")}
                        </select>
                        <button class="sound-group-preview-btn" data-group="${i}">
                            🔊 Preview
                        </button>
                        <button class="sound-group-mute-btn ${m?"muted":""}" data-group="${i}" title="${m?"Unmute":"Mute"}">
                            ${m?"🔇":"🔊"}
                        </button>
                    </div>
                </div>
            `}c+=`
            <div class="sound-group-actions">
                <button class="sound-reset-all-btn" id="reset-all-sounds">
                    Reset All to Default
                </button>
                <button class="sound-advanced-btn" id="show-advanced-sounds">
                    Advanced Individual Settings
                </button>
            </div>
        `,e.innerHTML=c,e.querySelectorAll(".sound-group-preset-select").forEach(i=>{i.addEventListener("change",l=>{const r=l.target.dataset.group,g=l.target.value;this.soundManager.setGroupedSoundSettings(r,g);const m=l.target.parentElement.querySelector(".sound-group-mute-btn");m&&(g==="none"?(m.classList.add("muted"),m.textContent="🔇",m.title="Unmute"):(m.classList.remove("muted"),m.textContent="🔊",m.title="Mute"));const p=l.target.closest(".sound-group-item"),E=p.querySelector(".mixed-indicator");if(g==="mixed"){if(!E){const b=p.querySelector(".sound-group-details");b.innerHTML+='<small class="mixed-indicator">⚠️ Mixed presets</small>'}}else E&&E.remove()})}),e.querySelectorAll(".sound-group-preview-btn").forEach(i=>{i.addEventListener("click",l=>{const r=l.currentTarget.dataset.group;if(l.currentTarget.parentElement.querySelector(".sound-group-preset-select").value==="none"){const p=i.textContent;i.textContent="🔇 Silent",i.style.opacity="0.6",setTimeout(()=>{i.textContent=p,i.style.opacity="1"},500)}else this.soundManager.previewGroupedSound(r)})}),e.querySelectorAll(".sound-group-mute-btn").forEach(i=>{i.addEventListener("click",l=>{const r=l.currentTarget.dataset.group,g=l.currentTarget.parentElement.querySelector(".sound-group-preset-select");g.value==="none"?(g.value="default",this.soundManager.setGroupedSoundSettings(r,"default"),i.classList.remove("muted"),i.textContent="🔊",i.title="Mute"):(g.value="none",this.soundManager.setGroupedSoundSettings(r,"none"),i.classList.add("muted"),i.textContent="🔇",i.title="Unmute")})});const a=document.getElementById("reset-all-sounds");a&&a.addEventListener("click",async()=>{await this.confirmationDialog.show("Reset all sound effects to their default sounds?")&&this.resetAllSounds()});const u=document.getElementById("show-advanced-sounds");u&&u.addEventListener("click",()=>{this.toggleAdvancedSoundSettings()})}resetAllSounds(){this.soundManager.customSoundMappings={},this.soundManager.saveSoundMappings(),this.soundManager.createSounds(),this.loadSoundCustomization(),this.showNotification("All sounds reset to default")}toggleAdvancedSoundSettings(){const e=document.getElementById("sound-customization-container");if(!e)return;e.querySelector(".sound-effect-item")?this.loadSoundCustomization():this.loadAdvancedSoundCustomization()}loadAdvancedSoundCustomization(){const e=document.getElementById("sound-customization-container");if(!e)return;this.soundManager.setEnabled(!0);const n=this.soundManager.getSoundEffects(),s=this.soundManager.getAvailablePresets(),o=this.soundManager.customSoundMappings||{};let c="";for(const[a,u]of Object.entries(n)){const i=o[a]||"default",l=i==="none";c+=`
                <div class="sound-effect-item">
                    <div class="sound-effect-info">
                        <h4>${u.name}</h4>
                        <p>${u.description}</p>
                    </div>
                    <select class="sound-preset-select" data-sound="${a}">
                        <option value="default" ${i==="default"?"selected":""}>Default</option>
                        <option value="none" ${i==="none"?"selected":""}>None</option>
                        ${Object.entries(s).map(([r,g])=>r!=="default"?`<option value="${r}" ${i===r?"selected":""}>${g.name}</option>`:"").join("")}
                    </select>
                    <button class="sound-preview-btn" data-sound="${a}">
                        🔊 Preview
                    </button>
                    <button class="sound-mute-btn ${l?"muted":""}" data-sound="${a}" title="${l?"Unmute":"Mute"}">
                        ${l?"🔇":"🔊"}
                    </button>
                </div>
            `}c+=`
            <div class="sound-group-actions">
                <button class="sound-reset-all-btn" id="reset-all-sounds">
                    Reset All to Default
                </button>
                <button class="sound-advanced-btn" id="show-advanced-sounds">
                    Back to Grouped Settings
                </button>
            </div>
        `,e.innerHTML=c,this.setupIndividualSoundEventListeners(e)}setupIndividualSoundEventListeners(e){e.querySelectorAll(".sound-preset-select").forEach(o=>{o.addEventListener("change",c=>{const a=c.target.dataset.sound,u=c.target.value;this.soundManager.setCustomSound(a,u);const i=c.target.parentElement.querySelector(".sound-mute-btn");i&&(u==="none"?(i.classList.add("muted"),i.textContent="🔇",i.title="Unmute"):(i.classList.remove("muted"),i.textContent="🔊",i.title="Mute"))})}),e.querySelectorAll(".sound-preview-btn").forEach(o=>{o.addEventListener("click",c=>{const a=c.currentTarget.dataset.sound;if(c.currentTarget.parentElement.querySelector(".sound-preset-select").value==="none"){const l=o.textContent;o.textContent="🔇 Silent",o.style.opacity="0.6",setTimeout(()=>{o.textContent=l,o.style.opacity="1"},500)}else this.soundManager.play(a)})}),e.querySelectorAll(".sound-mute-btn").forEach(o=>{o.addEventListener("click",c=>{const a=c.currentTarget.dataset.sound,u=c.currentTarget.parentElement.querySelector(".sound-preset-select");u.value==="none"?(u.value="default",this.soundManager.setCustomSound(a,"default"),o.classList.remove("muted"),o.textContent="🔊",o.title="Mute"):(u.value="none",this.soundManager.setCustomSound(a,"none"),o.classList.add("muted"),o.textContent="🔇",o.title="Unmute")})});const n=document.getElementById("reset-all-sounds");n&&n.addEventListener("click",async()=>{await this.confirmationDialog.show("Reset all sound effects to their default sounds?")&&this.resetAllSounds()});const s=document.getElementById("show-advanced-sounds");s&&s.addEventListener("click",()=>{this.toggleAdvancedSoundSettings()})}selectTheme(e){this.currentTheme=e,this.applyTheme(e),this.updateThemeUI(),this.saveSettings()}applyTheme(e){let n=document.getElementById("theme-css");n||(n=document.createElement("link"),n.rel="stylesheet",n.id="theme-css",document.head.appendChild(n)),n.href=`css/themes/${e}.css`;try{Array.from(document.querySelectorAll('link[rel="stylesheet"]')).filter(a=>(a.getAttribute("href")||"").includes("/assets/wood-")||(a.href||"").includes("/assets/wood-")).forEach(a=>{a.disabled=e!=="wood"})}catch{}const s=document.getElementById("theme-css-light"),o=document.getElementById("theme-css-dark");s&&(s.media="all"),o&&(o.media="all"),document.documentElement.setAttribute("data-theme",e),document.body.className=document.body.className.replace(/light-theme|dark-theme|wood-theme/g,""),document.body.classList.add(`${e}-theme`)}updateSetting(e,n){this.settings[e]=n,this.saveSettings()}updateUI(){this.updateThemeUI(),this.updateGameSettingsUI()}updateThemeUI(){document.querySelectorAll(".theme-option").forEach(e=>{e.classList.remove("selected"),e.dataset.theme===this.currentTheme&&e.classList.add("selected")})}updateGameSettingsUI(){const e=document.getElementById("enable-hints");e&&(e.checked=this.settings.enableHints||!1);const n=document.getElementById("enable-timer");n&&(n.checked=this.settings.enableTimer||!1);const s=document.getElementById("auto-save");s&&(s.checked=this.settings.autoSave!==!1);const o=document.getElementById("show-points");o&&(o.checked=this.settings.showPoints||!1),this.loadEffectsSettings()}updateBlockPointsDisplay(){const e=this.settings.showPoints||!1;document.querySelectorAll(".block-info").forEach(s=>{e?s.classList.add("show-points"):s.classList.remove("show-points")})}cycleSpeedMode(){this.currentSpeedModeIndex=(this.currentSpeedModeIndex+1)%this.speedModeOrder.length;const e=this.speedModeOrder[this.currentSpeedModeIndex];this.updateSetting("speedMode",e),this.updateSpeedModeDisplay()}updateSpeedModeDisplay(){const e=document.getElementById("speed-mode-toggle"),n=document.getElementById("speed-mode-title"),s=document.getElementById("speed-mode-description");if(!e||!n||!s)return;const o=this.speedModeOrder[this.currentSpeedModeIndex],a={bonus:{title:"Bonus",description:"Faster = more points"},punishment:{title:"Punishment",description:"Faster = less points (scales with level)"},ignored:{title:"Ignored",description:"Speed doesn't affect score"}}[o];n.textContent=a.title,s.textContent=a.description}updateBuildInfo(){const e=()=>{if(R.isLoaded()){const n=document.getElementById("version-display"),s=document.getElementById("build-info");n&&(n.textContent=R.getDisplayVersion()),s&&(s.textContent=`Build: ${R.getBuildId()} (${R.getFormattedBuildDate()})`)}else setTimeout(e,100)};e()}loadHighScores(){const e=document.getElementById("high-scores-list"),n=document.getElementById("statistics-display");if(!e||!n){console.error("High scores elements not found");return}const s=this.storage.getHighScores(),o=this.storage.loadStatistics();console.log("Loading statistics:",o),s.length===0?e.innerHTML="<p>No high scores yet. Play a game to set your first record!</p>":(e.innerHTML=s.map((c,a)=>`
                <div class="score-item clickable-score" data-score-index="${a}">
                    <div class="rank">#${a+1}</div>
                    <div class="score-value">${c.score.toLocaleString()}</div>
                    <div class="score-details">${(c.difficulty||"normal").toUpperCase()} • Level ${c.level} • ${new Date(c.date).toLocaleDateString()}</div>
                    <div class="score-click-hint">Click to view details</div>
                </div>
            `).join(""),this.setupHighScoreClickListeners()),n.innerHTML=`
            <div class="stat-item">
                <span class="stat-label">Games Played:</span>
                <span class="stat-value">${o.gamesPlayed||0}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Score:</span>
                <span class="stat-value">${o.totalScore||0}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Best Score:</span>
                <span class="stat-value">${o.bestScore||0}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Lines:</span>
                <span class="stat-value">${o.totalLinesCleared||0}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Max Streak:</span>
                <span class="stat-value">${o.maxCombo||0}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Combos:</span>
                <span class="stat-value">${o.totalCombos||0}</span>
            </div>
        `}refreshStatistics(){console.log("Refreshing statistics display..."),this.loadHighScores()}saveSettings(){const e={...this.settings,theme:this.currentTheme};this.storage.saveSettings(e)}shareGame(){const e="https://blockdoku.523.life",n="Blockdoku - A Progressive Web App Puzzle Game";navigator.share?navigator.share({title:n,text:"Check out this awesome Blockdoku puzzle game!",url:e}).catch(o=>{console.log("Error sharing:",o),this.fallbackShare(e,n)}):this.fallbackShare(e,n)}fallbackShare(e,n){navigator.clipboard.writeText(e).then(()=>{this.showNotification("Game URL copied to clipboard!")}).catch(()=>{alert(`Share this game: ${e}`)})}shareHighScores(){const e=this.storage.getHighScores(),n=this.storage.loadStatistics();if(e.length===0){this.showNotification("No high scores to share yet!");return}let s=`🏆 Blockdoku High Scores

`;e.slice(0,5).forEach((a,u)=>{const i=(a.difficulty||"normal").toUpperCase(),l=new Date(a.date).toLocaleDateString();s+=`#${u+1} ${a.score.toLocaleString()} (${i}) - Level ${a.level} - ${l}
`}),s+=`
📊 Statistics:
`,s+=`Games Played: ${n.gamesPlayed}
`,s+=`Total Score: ${n.totalScore.toLocaleString()}
`,s+=`Best Score: ${n.bestScore.toLocaleString()}
`,s+=`Max Combo: ${n.maxCombo}
`;const o="https://blockdoku.523.life",c="My Blockdoku High Scores";navigator.share?navigator.share({title:c,text:s,url:o}).catch(a=>{console.log("Error sharing scores:",a),this.fallbackShareScores(s,o,c)}):this.fallbackShareScores(s,o,c)}fallbackShareScores(e,n,s){navigator.clipboard.writeText(`${e}

Play Blockdoku: ${n}`).then(()=>{this.showNotification("High scores copied to clipboard!")}).catch(()=>{alert(`${e}

Play Blockdoku: ${n}`)})}showNotification(e){const n=document.querySelector(".settings-notification");n&&n.remove();const s=document.createElement("div");if(s.className="settings-notification",s.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            background: var(--primary-color, #007bff);
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            font-weight: 500;
            animation: slideIn 0.3s ease;
        `,s.textContent=e,!document.querySelector("#settings-notification-styles")){const o=document.createElement("style");o.id="settings-notification-styles",o.textContent=`
                @keyframes slideIn {
                    from { transform: translateX(100%); opacity: 0; }
                    to { transform: translateX(0); opacity: 1; }
                }
            `,document.head.appendChild(o)}document.body.appendChild(s),setTimeout(()=>{s.parentNode&&s.remove()},3e3)}viewLastGame(){const e=localStorage.getItem("blockdoku_lastgame");if(!e){this.showNotification("No last game data available. Play a game first!");return}try{const n=JSON.parse(e);if(!n||!n.score)throw new Error("Invalid last game data");window.location.href="lastgame.html"}catch(n){console.error("Error checking last game data:",n),this.showNotification("Error loading last game data. Please try again.")}}fixSectionPlacement(){const e=document.getElementById("about-section"),n=document.getElementById("sounds-section"),s=document.getElementById("game-section");e&&s&&e.parentElement===s&&(e.remove(),s.insertAdjacentElement("afterend",e)),n&&s&&n.parentElement===s&&(n.remove(),s.insertAdjacentElement("afterend",n))}setupHighScoreClickListeners(){document.querySelectorAll(".clickable-score").forEach(n=>{n.addEventListener("click",s=>{const o=parseInt(n.dataset.scoreIndex);this.showHighScoreDetails(o)})})}showHighScoreDetails(e){const n=this.storage.getHighScores();if(e<0||e>=n.length){console.error("Invalid score index:",e);return}const s=n[e];try{localStorage.setItem("blockdoku_lastgame",JSON.stringify(s)),window.location.href="lastgame.html"}catch(o){console.error("Failed to save score data for display:",o),alert("Failed to load score details. Please try again.")}}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{window.settingsManager=new K}):window.settingsManager=new K;
