import"./modulepreload-polyfill-B5Qt9EMX.js";/* empty css             *//* empty css             */import{D as y,_ as b}from"./difficulty-settings-manager-BW40esTg.js";import{G as S,C as k}from"./confirmation-dialog-C_sDWQ13.js";class p{constructor(){this.storage=new S,this.difficultySettings=new y(this.storage),this.settings=this.storage.loadSettings(),this.currentDifficulty=this.settings.difficulty||"normal",this.confirmationDialog=new k,this.init()}init(){this.loadSettings(),this.setupEventListeners(),this.setupResetListeners(),this.setupCrossPageCommunication(),this.updateUI()}loadSettings(){const e=this.storage.loadSettings();this.currentDifficulty=e.difficulty||"normal";const i=this.difficultySettings.getSettingsForDifficulty(this.currentDifficulty);this.settings={...e,...i},this.loadComboDisplaySettings(),this.loadGameModesSettings(),this.loadBasicSettings(),this.loadAnimationSettings(),this.loadAdditionalSettings(),this.loadUtilityBarSettings()}loadComboDisplaySettings(){const e=this.settings.comboDisplayMode||"cumulative",i=document.getElementById("combo-streak"),t=document.getElementById("combo-cumulative");i&&t&&(e==="streak"?i.checked=!0:t.checked=!0)}loadGameModesSettings(){const e=document.getElementById("enable-petrification");e&&(e.checked=this.settings.enablePetrification===!0);const i=document.getElementById("enable-dead-pixels"),t=document.getElementById("dead-pixels-intensity"),n=document.getElementById("dead-pixels-intensity-value"),s=document.getElementById("dead-pixels-intensity-container");if(i&&(i.checked=this.settings.enableDeadPixels===!0,s&&(s.style.display=this.settings.enableDeadPixels?"block":"none")),t&&n){const h=this.settings.deadPixelsIntensity||0;t.value=h,n.textContent=h}const a=document.getElementById("enable-magic-blocks");a&&(a.checked=this.settings.enableMagicBlocks===!0);const d=document.getElementById("auto-rotate-blocks");d&&(d.checked=this.settings.autoRotateBlocks===!0);const o=document.getElementById("enable-wild-shapes");o&&(o.checked=this.settings.enableWildShapes===!0);const c=this.settings.speedMode||"ignored",l=document.getElementById("speed-mode-bonus"),u=document.getElementById("speed-mode-punishment"),r=document.getElementById("speed-mode-ignored");l&&u&&r&&(c==="punishment"?u.checked=!0:c==="ignored"?r.checked=!0:l.checked=!0);const f=this.settings.speedDisplayMode||"timer",m=document.getElementById("speed-display-timer"),g=document.getElementById("speed-display-points");m&&g&&(f==="points"?g.checked=!0:m.checked=!0)}loadBasicSettings(){const e=document.getElementById("sound-enabled");e&&(e.checked=this.settings.soundEnabled===!0);const i=document.getElementById("animations-enabled");i&&(i.checked=this.settings.animationsEnabled!==!1);const t=document.getElementById("piece-timeout-enabled");t&&(t.checked=this.settings.pieceTimeoutEnabled===!0)}loadAnimationSettings(){["block-hover-effects","block-selection-glow","block-entrance-animations","block-placement-animations","line-clear-animations","score-animations","combo-animations","particle-effects"].forEach(n=>{const s=document.getElementById(n);s&&(s.checked=this.settings[n]!==!1)});const i=this.settings.animationSpeed||"normal",t=document.getElementById(`animation-speed-${i}`);t&&(t.checked=!0)}loadAdditionalSettings(){[{id:"haptic-enabled",key:"hapticEnabled"},{id:"auto-save",key:"autoSave"},{id:"show-points",key:"showPoints"},{id:"show-placement-points",key:"showPlacementPoints"},{id:"enable-prize-recognition",key:"enablePrizeRecognition"},{id:"success-mode-enabled",key:"successModeEnabled"}].forEach(({id:i,key:t})=>{const n=document.getElementById(i);n&&(n.checked=this.settings[t]===!0)})}loadUtilityBarSettings(){[{id:"enable-hints",key:"enableHints"},{id:"enable-timer",key:"enableTimer"},{id:"show-personal-bests",key:"showPersonalBests"},{id:"show-speed-timer",key:"showSpeedTimer"}].forEach(({id:a,key:d})=>{const o=document.getElementById(a);o&&(o.checked=this.settings[d]===!0)});const i=document.getElementById("enable-timer"),t=document.getElementById("countdown-duration"),n=document.getElementById("countdown-duration-value"),s=document.getElementById("countdown-duration-container");if(i&&s&&(s.style.display=this.settings.enableTimer?"block":"none"),t&&n){const a=this.settings.countdownDuration||3;t.value=a,n.textContent=`${a}:00`}}setupEventListeners(){this.setupDifficultyListeners(),this.setupComboDisplayListeners(),this.setupGameModesListeners(),this.setupBasicSettingsListeners(),this.setupAnimationListeners(),this.setupAdditionalSettingsListeners(),this.setupUtilityBarListeners(),this.setupResetStatisticsListener()}setupDifficultyListeners(){document.querySelectorAll(".difficulty-option").forEach(i=>{i.addEventListener("click",async t=>{t.preventDefault();const n=i.dataset.difficulty;if(n===this.currentDifficulty)return;console.log(`🎮 Game Settings: Changing difficulty to ${n.toUpperCase()}`),this.currentDifficulty=n,this.settings.difficulty=n;const s=this.difficultySettings.getSettingsForDifficulty(n);Object.assign(this.settings,s),this.storage.saveSettings(this.settings),this.updateDifficultySelection(),this.loadSettings(),this.updateUI(),window.postMessage({type:"difficultyChanged",difficulty:n},"*")})})}updateDifficultySelection(){document.querySelectorAll(".difficulty-option").forEach(i=>{const t=i.dataset.difficulty;t===this.currentDifficulty?i.classList.add("selected"):i.classList.remove("selected"),this.updateDifficultyDescription(i,t)})}updateDifficultyDescription(e,i){const t=e.querySelector("p");t&&(this.difficultyManager?this.renderDifficultyWithBubbles(t,i):b(()=>import("./difficulty-manager-C9TW9Gtz.js"),[],import.meta.url).then(n=>{const s=n.DifficultyManager;this.difficultyManager=new s,this.renderDifficultyWithBubbles(t,i)}).catch(n=>{console.warn("Could not load difficulty manager for descriptions:",n)}))}renderDifficultyWithBubbles(e,i){const t=this.difficultyManager.difficultySettings[i],n=t?t.shortDescription:"",s=this.difficultyManager.getComparisonBubbles(i,this.difficultySettings);let a=`<span class="difficulty-short-desc">${n}</span>`;s.length>0&&(a+='<div class="difficulty-bubbles">',s.forEach(d=>{const o=d.type==="enabled"?"bubble-enabled":"bubble-disabled";a+=`<span class="difficulty-bubble ${o}">${d.emoji} ${d.label}</span>`}),a+="</div>"),e.innerHTML=a}setupComboDisplayListeners(){const e=document.getElementById("combo-streak"),i=document.getElementById("combo-cumulative");e&&e.addEventListener("change",()=>{e.checked&&this.saveSetting("comboDisplayMode","streak")}),i&&i.addEventListener("change",()=>{i.checked&&this.saveSetting("comboDisplayMode","cumulative")})}setupGameModesListeners(){const e=document.getElementById("enable-petrification");e&&e.addEventListener("change",()=>{this.saveSetting("enablePetrification",e.checked)});const i=document.getElementById("enable-dead-pixels"),t=document.getElementById("dead-pixels-intensity"),n=document.getElementById("dead-pixels-intensity-container");i&&i.addEventListener("change",()=>{this.saveSetting("enableDeadPixels",i.checked),n&&(n.style.display=i.checked?"block":"none")}),t&&t.addEventListener("input",()=>{const f=parseInt(t.value);this.saveSetting("deadPixelsIntensity",f);const m=document.getElementById("dead-pixels-intensity-value");m&&(m.textContent=f)});const s=document.getElementById("enable-magic-blocks");s&&s.addEventListener("change",()=>{this.saveSetting("enableMagicBlocks",s.checked)});const a=document.getElementById("auto-rotate-blocks");a&&a.addEventListener("change",()=>{this.saveSetting("autoRotateBlocks",a.checked)});const d=document.getElementById("enable-wild-shapes");d&&d.addEventListener("change",()=>{this.saveSetting("enableWildShapes",d.checked)});const o=document.getElementById("speed-mode-bonus"),c=document.getElementById("speed-mode-punishment"),l=document.getElementById("speed-mode-ignored");o&&o.addEventListener("change",()=>{o.checked&&this.saveSetting("speedMode","bonus")}),c&&c.addEventListener("change",()=>{c.checked&&this.saveSetting("speedMode","punishment")}),l&&l.addEventListener("change",()=>{l.checked&&this.saveSetting("speedMode","ignored")});const u=document.getElementById("speed-display-timer"),r=document.getElementById("speed-display-points");u&&u.addEventListener("change",()=>{u.checked&&this.saveSetting("speedDisplayMode","timer")}),r&&r.addEventListener("change",()=>{r.checked&&this.saveSetting("speedDisplayMode","points")})}setupBasicSettingsListeners(){const e=document.getElementById("sound-enabled");e&&e.addEventListener("change",()=>{this.saveSetting("soundEnabled",e.checked)});const i=document.getElementById("animations-enabled");i&&i.addEventListener("change",()=>{this.saveSetting("animationsEnabled",i.checked)});const t=document.getElementById("piece-timeout-enabled");t&&t.addEventListener("change",()=>{this.saveSetting("pieceTimeoutEnabled",t.checked)})}setupAnimationListeners(){["block-hover-effects","block-selection-glow","block-entrance-animations","block-placement-animations","line-clear-animations","score-animations","combo-animations","particle-effects"].forEach(t=>{const n=document.getElementById(t);n&&n.addEventListener("change",()=>{this.saveSetting(t,n.checked)})}),document.querySelectorAll('input[name="animation-speed"]').forEach(t=>{t.addEventListener("change",()=>{t.checked&&this.saveSetting("animationSpeed",t.value)})})}setupAdditionalSettingsListeners(){[{id:"haptic-enabled",key:"hapticEnabled"},{id:"auto-save",key:"autoSave"},{id:"show-points",key:"showPoints"},{id:"show-placement-points",key:"showPlacementPoints"},{id:"enable-prize-recognition",key:"enablePrizeRecognition"},{id:"success-mode-enabled",key:"successModeEnabled"}].forEach(({id:i,key:t})=>{const n=document.getElementById(i);n&&n.addEventListener("change",()=>{this.saveSetting(t,n.checked),i==="show-points"&&this.updateBlockPointsDisplay()})})}setupUtilityBarListeners(){[{id:"enable-hints",key:"enableHints"},{id:"enable-timer",key:"enableTimer"},{id:"show-personal-bests",key:"showPersonalBests"},{id:"show-speed-timer",key:"showSpeedTimer"}].forEach(({id:t,key:n})=>{const s=document.getElementById(t);s&&s.addEventListener("change",async()=>{if(t==="enable-timer"){const a=this.settings[n]===!0,d=s.checked;if(a!==d&&this.isGameInProgress()){const c=d?"enabling":"disabling";if(!await this.confirmationDialog.show(`⚠️ Countdown Timer Change

${c==="enabling"?"Enabling":"Disabling"} the countdown timer mid-game will reset your current score to 0.

This ensures fair scoring since the countdown timer affects the game's difficulty and scoring system.

Do you want to continue?`)){s.checked=a;return}this.saveSetting(n,s.checked),this.resetCurrentGameScore()}else if(this.saveSetting(n,s.checked),window.opener&&window.opener.game){const c=window.opener.game;c.timerSystem&&(s.checked?(c.timerSystem.initialize(),c.timerSystem.start()):c.timerSystem.disable()),c.updateTimerDisplay&&c.updateTimerDisplay()}const o=document.getElementById("countdown-duration-container");o&&(o.style.display=s.checked?"block":"none")}else this.saveSetting(n,s.checked)})});const i=document.getElementById("countdown-duration");i&&i.addEventListener("input",async()=>{const t=parseInt(i.value),n=this.settings.countdownDuration||3;if(t!==n&&this.isGameInProgress()&&this.settings.enableTimer){if(!await this.confirmationDialog.show(`⚠️ Countdown Duration Change

Changing the countdown duration mid-game will reset your current score to 0.

This ensures fair scoring since the countdown timer affects the game's difficulty and scoring system.

Do you want to continue?`)){i.value=n;return}this.saveSetting("countdownDuration",t),this.resetCurrentGameScore()}else if(this.saveSetting("countdownDuration",t),window.opener&&window.opener.game&&this.settings.enableTimer){const a=window.opener.game;a.timerSystem&&(a.timerSystem.initialize(),a.timerSystem.start()),a.updateTimerDisplay&&a.updateTimerDisplay()}const s=document.getElementById("countdown-duration-value");s&&(s.textContent=`${t}:00`)})}setupResetStatisticsListener(){const e=document.getElementById("reset-stats");e&&e.addEventListener("click",async()=>{await this.confirmationDialog.show(`⚠️ PERMANENT DATA LOSS WARNING ⚠️

This will permanently delete ALL your game data:
• All high scores for all difficulty levels
• All game statistics (games played, totals, combos)
• All personal best records
• All play time data

Your game settings and preferences will NOT be affected.

This action CANNOT be undone. Are you absolutely sure you want to continue?`)&&this.resetStatistics()})}setupCrossPageCommunication(){window.addEventListener("storage",e=>{(e.key==="blockdoku-settings"||e.key==="blockdoku_settings")&&(console.log("Settings changed in another page, reloading..."),this.settings=this.storage.loadSettings(),this.loadSettings(),this.updateUI())}),window.addEventListener("settingsChanged",e=>{console.log("Settings changed in same page, updating..."),this.settings=this.storage.loadSettings(),this.loadSettings(),this.updateUI()})}saveSetting(e,i){["enableHints","showPoints","enableTimer","enablePetrification","enableDeadPixels","showPersonalBests","showSpeedTimer","speedMode","animationsEnabled","soundEnabled","enableWildBlocks"].includes(e)?(this.difficultySettings.saveSettingOverride(this.currentDifficulty,e,i),console.log(`Difficulty-specific setting saved: ${e} = ${i} for ${this.currentDifficulty}`)):(this.settings[e]=i,this.storage.saveSettings(this.settings),console.log(`Global setting saved: ${e} = ${i}`)),this.settings[e]=i,window.dispatchEvent(new CustomEvent("settingsChanged",{detail:{key:e,value:i}})),this.updateDifficultyBubbles(),this.updateSettingStateBubbles()}updateDifficultyBubbles(){document.querySelectorAll(".difficulty-option").forEach(i=>{const t=i.dataset.difficulty;this.updateDifficultyDescription(i,t)}),this.updateIndividualSettingBubbles()}updateIndividualSettingBubbles(){document.querySelectorAll(".individual-setting-bubble").forEach(e=>{e.remove()})}getSettingKeyForBubble(e,i){return{Hints:"enableHints",Points:"showPoints",Timer:"enableTimer",Best:"showPersonalBests",Speed:"showSpeedTimer",Prizes:"enablePrizeRecognition",Timeout:"pieceTimeoutEnabled"}[e]}addBubbleToSetting(e,i){const t=e.closest(".setting-item");if(!t)return;const n=document.createElement("div");n.className=`individual-setting-bubble difficulty-bubble ${i.type==="enabled"?"bubble-enabled":"bubble-disabled"}`,n.innerHTML=`${i.emoji} ${i.label}`,n.style.marginBottom="0.5rem",n.style.alignSelf="flex-start",t.insertBefore(n,t.firstChild)}addBubbleToSection(e,i){const t=e.querySelector(".individual-setting-bubble");t&&t.remove();const n=document.createElement("div");n.className=`individual-setting-bubble difficulty-bubble ${i.type==="enabled"?"bubble-enabled":"bubble-disabled"}`,n.innerHTML=`${i.emoji} ${i.label}`,n.style.marginBottom="1rem",n.style.alignSelf="flex-start";const s=e.querySelector("h3");s&&s.insertAdjacentElement("afterend",n)}resetStatistics(){this.storage.clearStatistics(),this.storage.clearHighScores(),this.showNotification("All statistics and high scores have been permanently deleted")}showNotification(e){const i=document.createElement("div");i.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            background: var(--primary-color);
            color: white;
            padding: 1rem 2rem;
            border-radius: 8px;
            z-index: 1000;
            font-weight: 600;
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
        `,i.textContent=e,document.body.appendChild(i),setTimeout(()=>{i.parentNode&&i.parentNode.removeChild(i)},3e3)}updateUI(){this.loadSettings(),this.updateDifficultySelection(),setTimeout(()=>{this.updateIndividualSettingBubbles(),this.updateSettingStateBubbles()},100)}updateSettingStateBubbles(){const e=document.querySelectorAll(".setting-bubble[data-setting]"),i=["hints","timer","personalBest","speedTimer","showPoints","sound","animations","petrification","deadPixels","speedMode","magicBlocks","autoRotate","wildShapes"];e.forEach(t=>{const n=t.dataset.setting;let s=!1;if(n==="speedMode"){const o=this.settings.speedMode||"ignored",c={bonus:"🏃 Bonus",punishment:"⚡ Punishment",ignored:"🚶 Ignored"};t.textContent=c[o]||"🚶 mode",t.classList.remove("state-red","state-green","state-orange"),o==="ignored"?t.classList.add("state-red"):o==="punishment"?t.classList.add("state-orange"):t.classList.add("state-green"),t.classList.add("difficulty-specific"),t.classList.remove("global-setting");return}if(n==="animationSpeed"){const o=this.settings.animationSpeed||"normal",c={slow:"🐢 Slow",normal:"🎬 Normal",fast:"🚀 Fast"};t.textContent=c[o]||"🎬 speed",t.classList.remove("state-red","state-green","state-orange"),o==="normal"?t.classList.add("state-red"):o==="fast"?t.classList.add("state-orange"):t.classList.add("state-green"),t.classList.add("global-setting"),t.classList.remove("difficulty-specific");return}const d={hints:"enable-hints",timer:"enable-timer",personalBest:"show-personal-bests",speedTimer:"show-speed-timer",sound:"sound-enabled",animations:"animations-enabled",haptic:"haptic-enabled",autoSave:"auto-save",showPoints:"show-points",placementPoints:"show-placement-points",prizeRecognition:"enable-prize-recognition",successMode:"success-mode-enabled",petrification:"enable-petrification",deadPixels:"enable-dead-pixels",magicBlocks:"enable-magic-blocks",autoRotate:"auto-rotate-blocks",wildShapes:"enable-wild-shapes",blockHover:"block-hover-effects",selectionGlow:"block-selection-glow",blockEntrance:"block-entrance-animations",blockPlacement:"block-placement-animations",lineClear:"line-clear-animations",scoreAnim:"score-animations",combo:"combo-animations",particles:"particle-effects"}[n];if(d){const o=document.getElementById(d);o&&(s=o.checked)}t.classList.remove("state-red","state-green"),t.classList.add(s?"state-green":"state-red"),i.includes(n)?(t.classList.add("difficulty-specific"),t.classList.remove("global-setting")):(t.classList.add("global-setting"),t.classList.remove("difficulty-specific"))})}updateBlockPointsDisplay(){const e=this.settings.showPoints||!1;document.querySelectorAll(".block-info").forEach(t=>{e?t.classList.add("show-points"):t.classList.remove("show-points")})}updateCurrentDifficultyText(){const e=document.getElementById("current-difficulty-text");if(e){const i=this.currentDifficulty.charAt(0).toUpperCase()+this.currentDifficulty.slice(1);e.textContent=`Reset ${i}`}}setupResetListeners(){const e=document.getElementById("reset-current-difficulty");e&&e.addEventListener("click",()=>{const o=this.currentDifficulty.charAt(0).toUpperCase()+this.currentDifficulty.slice(1);this.confirmationDialog.show(`Reset ${o} settings to defaults?`,"This will reset all settings for the current difficulty level to their default values. Your customizations will be lost.",()=>{this.difficultySettings.resetToDefaults(this.currentDifficulty),this.loadSettings(),this.updateUI(),this.showNotification(`Settings reset to defaults for ${o} difficulty`)})});const i=document.getElementById("reset-all-difficulties");i&&i.addEventListener("click",()=>{this.confirmationDialog.show("Reset ALL difficulty settings to defaults?","This will reset all settings for ALL difficulty levels to their default values. All your customizations will be lost.",()=>{this.difficultySettings.resetAllToDefaults(),this.loadSettings(),this.updateUI(),this.showNotification("All difficulty settings reset to defaults")})});const t=document.getElementById("toggle-difficulty-defaults"),n=document.getElementById("difficulty-defaults-table"),s=document.getElementById("toggle-text"),a=document.getElementById("toggle-arrow"),d=document.getElementById("view-difficulty-defaults-link");if(t&&n&&s&&a){const o=()=>{n.style.display!=="none"?(n.style.display="none",s.textContent="📋 Show Defaults by Difficulty",a.style.transform="rotate(0deg)"):(n.style.display="block",s.textContent="📋 Hide Defaults by Difficulty",a.style.transform="rotate(180deg)",this.populateDifficultyDefaultsTable(),setTimeout(()=>{n.scrollIntoView({behavior:"smooth",block:"center"})},100))};t.addEventListener("click",o),d&&d.addEventListener("click",c=>{c.preventDefault(),n.style.display==="none"?o():n.scrollIntoView({behavior:"smooth",block:"center"})})}}populateDifficultyDefaultsTable(){const e=document.getElementById("defaults-table-body");if(!e)return;e.innerHTML="";const i=[{key:"enableHints",name:"Enable Hints",description:"Show placement suggestions"},{key:"showPoints",name:"Show Block Points",description:"Display point values on blocks"},{key:"enableTimer",name:"Enable Timer",description:"Add time pressure"},{key:"enablePetrification",name:"Enable Petrification",description:"Blocks petrify over time"},{key:"enableDeadPixels",name:"Enable Dead Pixels",description:"Add visual interference"},{key:"showPersonalBests",name:"Show Personal Bests",description:"Display progress in utility bar"},{key:"showSpeedTimer",name:"Show Speed Timer",description:"Track placement speed"},{key:"speedMode",name:"Speed Tracking Mode",description:"How speed affects scoring"},{key:"enablePrizeRecognition",name:"Enable Prize Recognition",description:"Recognize and celebrate achievements"},{key:"pieceTimeoutEnabled",name:"Enable Piece Timeout",description:"Auto-end game when pieces timeout"},{key:"animationsEnabled",name:"Animations",description:"Visual effects and transitions"},{key:"soundEnabled",name:"Sound Effects",description:"Audio feedback"}],t=["easy","normal","hard","expert"];i.forEach(n=>{const s=document.createElement("tr");s.style.borderBottom="1px solid var(--border-color)";const a=document.createElement("td");a.style.padding="0.75rem",a.style.border="1px solid var(--border-color)",a.innerHTML=`
                <div style="font-weight: 600; color: var(--text-color);">${n.name}</div>
                <div style="font-size: 0.8rem; color: var(--text-muted); margin-top: 0.25rem;">${n.description}</div>
            `,s.appendChild(a),t.forEach(d=>{const o=document.createElement("td");o.style.padding="0.75rem",o.style.border="1px solid var(--border-color)",o.style.textAlign="center";const c=this.difficultySettings.difficultyDefaults[d][n.key];let l,u;if(n.key==="speedMode"){const r={bonus:"var(--success-color, #28a745)",punishment:"var(--warning-color, #ff6b35)",ignored:"var(--muted-color, #6c757d)"};l=c.toUpperCase(),u=r[c]||"var(--muted-color, #6c757d)"}else{const r=c===!0;l=r?"ON":"OFF",u=r?"var(--success-color, #28a745)":"var(--muted-color, #6c757d)"}o.innerHTML=`
                    <div style="display: inline-block; padding: 0.25rem 0.75rem; border-radius: 4px; font-weight: 600; font-size: 0.8rem; 
                                background: ${u}; 
                                color: white;">
                        ${l}
                    </div>
                `,s.appendChild(o)}),e.appendChild(s)})}setupCrossPageCommunication(){window.addEventListener("storage",e=>{(e.key==="blockdoku-settings"||e.key==="blockdoku_settings")&&(this.loadSettings(),this.updateUI(),this.updateCurrentDifficultyText())}),window.addEventListener("focus",()=>{this.loadSettings(),this.updateUI(),this.updateCurrentDifficultyText()})}isGameInProgress(){var e,i;if(window.opener&&window.opener.game){const t=window.opener.game;return t.score>0||((i=(e=t.blockManager)==null?void 0:e.currentBlocks)==null?void 0:i.length)>0}return!1}resetCurrentGameScore(){if(window.opener&&window.opener.game){const e=window.opener.game;e.loadSettings&&e.loadSettings(),e.score=0,e.level=1,e.firstPiecePlaced=!1,e.scoringSystem&&e.scoringSystem.reset(),e.timerSystem&&(e.timerSystem.reset(),e.timerSystem.initialize(),e.timerSystem.isActive?console.log("⏱️ Countdown timer will start on next piece placement"):console.log("⏱️ Countdown timer disabled")),e.updateUI&&e.updateUI(),e.updateTimerDisplay&&e.updateTimerDisplay(),e.updateUtilityBarLayout&&e.updateUtilityBarLayout()}}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{window.gameSettingsManager=new p}):window.gameSettingsManager=new p;
