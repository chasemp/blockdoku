import"./modulepreload-polyfill-B5Qt9EMX.js";/* empty css             */import{D as G,_ as L}from"./difficulty-settings-manager-BP-zScMF.js";import{G as $}from"./game-storage-Umaiwskq.js";import{C as D,P as R}from"./confirmation-dialog-BCUkn7Jw.js";import{DifficultyManager as O}from"./difficulty-manager-C7Ef8CN3.js";import{S as N}from"./sound-manager-DEf2ZdWT.js";import{L as q}from"./level-manager-BX9v6P63.js";class H{constructor(){this.blockShapes=this.defineBlockShapes(),this.currentBlocks=[],this.selectedBlock=null,this.selectedBlockPosition=null,this.magicAccumulator=0,this.wildAccumulator=0,this.overlapRotationToggle=!1}defineBlockShapes(){return{single:{name:"Single",shape:[[1]],color:"#007bff",points:1},line2:{name:"Line 2",shape:[[1,1]],color:"#28a745",points:2},line3:{name:"Line 3",shape:[[1,1,1]],color:"#28a745",points:3},l2x2:{name:"L 2x2",shape:[[1,0],[1,1]],color:"#dc3545",points:3},l3x2:{name:"L 3x2",shape:[[1,0],[1,0],[1,1]],color:"#dc3545",points:4},t3x2:{name:"T 3x2",shape:[[1,1,1],[0,1,0]],color:"#ffc107",points:4},square2x2:{name:"Square 2x2",shape:[[1,1],[1,1]],color:"#6f42c1",points:4},z3x2:{name:"Z 3x2",shape:[[1,1,0],[0,1,1]],color:"#fd7e14",points:4},wildSingle:{name:"Wild Single",shape:[[1]],color:"#ff6b6b",points:3,isMagic:!0,magicType:"lineClear",description:"Clears any line it completes"},wildLine2:{name:"Wild Line 2",shape:[[1,1]],color:"#ff6b6b",points:5,isMagic:!0,magicType:"lineClear",description:"Clears any line it completes"},wildL:{name:"Wild L",shape:[[1,0],[1,1]],color:"#ff6b6b",points:6,isMagic:!0,magicType:"lineClear",description:"Clears any line it completes"},bombSingle:{name:"Bomb Single",shape:[[1]],color:"#ff4444",points:8,isMagic:!0,magicType:"bomb",description:"Explodes to clear 3x3 area around it"},bombLine2:{name:"Bomb Line",shape:[[1,1]],color:"#ff4444",points:12,isMagic:!0,magicType:"bomb",description:"Explodes to clear 3x3 area around each cell"},lightningSingle:{name:"Lightning Single",shape:[[1]],color:"#ffeb3b",points:15,isMagic:!0,magicType:"lightning",description:"Clears entire row and column"},ghostSingle:{name:"Ghost Single",shape:[[1]],color:"#9c27b0",points:6,isMagic:!0,magicType:"ghost",description:"Can overlap existing pieces (once per game)"},pentominoF:{name:"F-Pentomino",shape:[[1,1,0],[0,1,0],[0,1,1]],color:"#ff6b6b",points:5,isWild:!0},pentominoP:{name:"P-Pentomino",shape:[[1,1],[1,1],[1,0]],color:"#4ecdc4",points:5,isWild:!0},pentominoY:{name:"Y-Pentomino",shape:[[0,1,0,0],[1,1,1,1]],color:"#45b7d1",points:5,isWild:!0},crossSmall:{name:"Small Cross",shape:[[0,1,0],[1,1,1],[0,1,0]],color:"#96ceb4",points:5,isWild:!0},crossLarge:{name:"Large Cross",shape:[[0,0,1,0,0],[0,0,1,0,0],[1,1,1,1,1],[0,0,1,0,0],[0,0,1,0,0]],color:"#feca57",points:9,isWild:!0},hollowSquare:{name:"Hollow Square",shape:[[1,1,1],[1,0,1],[1,1,1]],color:"#ff9ff3",points:8,isWild:!0},hollowRect:{name:"Hollow Rectangle",shape:[[1,1,1,1],[1,0,0,1],[1,1,1,1]],color:"#54a0ff",points:10,isWild:!0},zigzagSmall:{name:"Small Zigzag",shape:[[1,0,0],[1,1,0],[0,1,1]],color:"#5f27cd",points:5,isWild:!0},zigzagLarge:{name:"Large Zigzag",shape:[[1,0,0,0],[1,1,0,0],[0,1,1,0],[0,0,1,1]],color:"#00d2d3",points:7,isWild:!0},diagonal:{name:"Diagonal Line",shape:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],color:"#ff7675",points:4,isWild:!0},spiral:{name:"Spiral",shape:[[1,1,1],[0,0,1],[1,1,1]],color:"#fd79a8",points:7,isWild:!0},pentominoI:{name:"I-Pentomino",shape:[[1],[1],[1],[1],[1]],color:"#e17055",points:5,isWild:!0},pentominoL:{name:"L-Pentomino",shape:[[1,0],[1,0],[1,0],[1,1]],color:"#a29bfe",points:5,isWild:!0},pentominoN:{name:"N-Pentomino",shape:[[0,1],[1,1],[1,0],[1,0]],color:"#fd63c7",points:5,isWild:!0},pentominoT:{name:"T-Pentomino",shape:[[1,1,1],[0,1,0],[0,1,0]],color:"#6c5ce7",points:5,isWild:!0},pentominoU:{name:"U-Pentomino",shape:[[1,0,1],[1,1,1]],color:"#fd79a8",points:5,isWild:!0},pentominoV:{name:"V-Pentomino",shape:[[1,0,0],[1,0,0],[1,1,1]],color:"#fdcb6e",points:5,isWild:!0},pentominoW:{name:"W-Pentomino",shape:[[1,0,0],[1,1,0],[0,1,1]],color:"#e84393",points:5,isWild:!0},pentominoX:{name:"X-Pentomino",shape:[[0,1,0],[1,1,1],[0,1,0]],color:"#00b894",points:5,isWild:!0},pentominoZ:{name:"Z-Pentomino",shape:[[1,1,0],[0,1,0],[0,1,1]],color:"#0984e3",points:5,isWild:!0},hexominoBar:{name:"Hexomino Bar",shape:[[1,1,1,1,1,1]],color:"#2d3436",points:6,isWild:!0},hexominoSnake:{name:"Hexomino Snake",shape:[[1,1,0,0],[0,1,1,0],[0,0,1,1]],color:"#636e72",points:6,isWild:!0},hexominoArch:{name:"Hexomino Arch",shape:[[1,0,0,1],[1,1,1,1]],color:"#74b9ff",points:6,isWild:!0},hexominoStairs:{name:"Hexomino Stairs",shape:[[1,0,0],[1,1,0],[0,1,1],[0,0,1]],color:"#55a3ff",points:6,isWild:!0},asymmetricClaw:{name:"Asymmetric Claw",shape:[[1,0,1],[1,1,0],[1,0,0]],color:"#ff7675",points:5,isWild:!0},asymmetricWing:{name:"Asymmetric Wing",shape:[[0,0,1,1],[1,1,1,0]],color:"#fd79a8",points:5,isWild:!0},asymmetricTail:{name:"Asymmetric Tail",shape:[[1,1,1,0],[0,0,1,1],[0,0,0,1]],color:"#fdcb6e",points:6,isWild:!0},hollowL:{name:"Hollow L",shape:[[1,0,0],[1,0,0],[1,1,1]],color:"#00cec9",points:5,isWild:!0},hollowT:{name:"Hollow T",shape:[[1,1,1],[0,1,0]],color:"#6c5ce7",points:4,isWild:!0},frameCorner:{name:"Frame Corner",shape:[[1,1,1,1],[1,0,0,0],[1,0,0,0],[1,1,1,1]],color:"#a29bfe",points:10,isWild:!0},checkerboard:{name:"Checkerboard",shape:[[1,0,1],[0,1,0],[1,0,1]],color:"#2d3436",points:5,isWild:!0},butterfly:{name:"Butterfly",shape:[[1,0,1],[1,1,1],[1,0,1]],color:"#fd79a8",points:7,isWild:!0},hourglass:{name:"Hourglass",shape:[[1,1,1],[0,1,0],[1,1,1]],color:"#fdcb6e",points:7,isWild:!0},arrow:{name:"Arrow",shape:[[0,0,1,0,0],[0,1,1,1,0],[1,1,1,1,1],[0,0,1,0,0],[0,0,1,0,0]],color:"#00b894",points:11,isWild:!0},diamond:{name:"Diamond",shape:[[0,1,0],[1,0,1],[0,1,0]],color:"#e17055",points:4,isWild:!0},lightning:{name:"Lightning Bolt",shape:[[0,1,0],[1,1,0],[0,1,1],[0,0,1]],color:"#fdcb6e",points:6,isWild:!0},maze:{name:"Maze Pattern",shape:[[1,1,0,1],[0,1,0,1],[0,1,1,1]],color:"#636e72",points:7,isWild:!0},crown:{name:"Crown",shape:[[1,0,1,0,1],[1,1,1,1,1]],color:"#feca57",points:8,isWild:!0}}}generateRandomBlocks(e=3,t="all",i=null,s=!1,o=!1,n=1,a=1){const l=Object.keys(this.blockShapes);let r=l.filter(m=>this.blockShapes[m].isMagic),c=l.filter(m=>this.blockShapes[m].isWild),h=l.filter(m=>!this.blockShapes[m].isMagic&&!this.blockShapes[m].isWild);const d=(m,g)=>m.filter(C=>{const E=this.blockShapes[C].shape,T=Math.max(E.length,E[0].length);return T>=g[0]&&T<=g[1]});if(i){const m=i.getAllowedShapes(),g=i.getBlockSizeRange();m!=="all"&&(h=h.filter(C=>m.includes(C)),c=c.filter(C=>m.includes(C))),h=d(h,g),c=d(c,g),r=d(r,g)}else t==="large"?(h=h.filter(m=>{const g=this.blockShapes[m].shape;return Math.max(g.length,g[0].length)>=3}),c=c.filter(m=>{const g=this.blockShapes[m].shape;return Math.max(g.length,g[0].length)>=3})):t==="small"?(h=h.filter(m=>{const g=this.blockShapes[m].shape;return Math.max(g.length,g[0].length)<=3}),c=c.filter(m=>{const g=this.blockShapes[m].shape;return Math.max(g.length,g[0].length)<=3})):t==="complex"&&(h=h.filter(m=>m.includes("L")||m.includes("T")||m.includes("Z")||m.includes("U")||m.includes("Cross")||m.includes("Plus")));h.length===0&&(h=l.filter(m=>!this.blockShapes[m].isMagic&&!this.blockShapes[m].isWild)),o&&c.length===0&&(c=l.filter(m=>this.blockShapes[m].isWild)),s&&r.length===0&&(r=l.filter(m=>this.blockShapes[m].isMagic));const f=s?Math.max(0,Math.min(1,n/10)):0;let p;o?(a<5,p=Math.max(0,Math.min(1,a/10))):p=0;const u=f*e,v=p*e;let y=Math.floor(u+this.magicAccumulator),S=Math.floor(v+this.wildAccumulator);this.magicAccumulator=u+this.magicAccumulator-y,this.wildAccumulator=v+this.wildAccumulator-S,o&&a<5&&(S=Math.min(1,S)),(!s||r.length===0)&&(y=0),(!o||c.length===0)&&(S=0);let P=y+S;if(P>e){let m=P-e;if(this.overlapRotationToggle){const g=Math.min(m,y);if(y-=g,m-=g,m>0){const C=Math.min(m,S);S-=C,m-=C}}else{const g=Math.min(m,S);if(S-=g,m-=g,m>0){const C=Math.min(m,y);y-=C,m-=C}}this.overlapRotationToggle=!this.overlapRotationToggle}y=Math.max(0,Math.min(e,y)),S=Math.max(0,Math.min(e-y,S));const w=[],B=m=>m[Math.floor(Math.random()*m.length)];for(let m=0;m<y;m++)r.length>0&&w.push(B(r));for(let m=0;m<S;m++)c.length>0&&w.push(B(c));let M=[...h];const z=e-w.length;for(let m=0;m<z;m++){M.length===0&&(M=[...h]);const g=Math.floor(Math.random()*M.length),C=M[g];w.push(C),M.splice(g,1)}for(let m=w.length-1;m>0;m--){const g=Math.floor(Math.random()*(m+1));[w[m],w[g]]=[w[g],w[m]]}return this.currentBlocks=w.map((m,g)=>({...this.blockShapes[m],id:`block_${g}_${Date.now()}`,rotation:0})),this.currentBlocks}rotateBlock(e){return e?{...e,shape:this.rotateMatrix(e.shape),rotation:(e.rotation+90)%360}:null}rotateMatrix(e){const t=e.length,i=e[0].length,s=[];for(let o=0;o<i;o++){s[o]=[];for(let n=0;n<t;n++)s[o][n]=e[t-1-n][o]}return s}canPlaceBlock(e,t,i,s){if(!e||!s||!Array.isArray(s)||s.length===0)return console.warn("canPlaceBlock: Invalid inputs",{block:e,board:s}),!1;const o=e.shape;if(!o||!Array.isArray(o)||o.length===0)return console.warn("canPlaceBlock: Invalid block shape",{block:e,shape:o}),!1;const n=s.length;if(t<0||i<0||t+o.length>n||i+o[0].length>n)return!1;for(let a=0;a<o.length;a++)for(let l=0;l<o[a].length;l++)if(o[a][l]===1&&(t+a>=n||i+l>=n||!s[t+a]||s[t+a][i+l]===1))return!1;return!0}isWithinBounds(e,t,i,s){if(!e||!s||!Array.isArray(s)||s.length===0)return console.warn("isWithinBounds: Invalid inputs",{block:e,board:s}),!1;const o=e.shape;if(!o||!Array.isArray(o)||o.length===0)return console.warn("isWithinBounds: Invalid block shape",{block:e,shape:o}),!1;const n=s.length;if(t<0||i<0||t+o.length>n||i+o[0].length>n)return!1;for(let a=0;a<o.length;a++)for(let l=0;l<o[a].length;l++)if(o[a][l]===1&&(t+a>=n||i+l>=n||t+a<0||i+l<0))return!1;return!0}placeBlock(e,t,i,s){const o=e.shape,n=s.map(a=>[...a]);for(let a=0;a<o.length;a++)for(let l=0;l<o[a].length;l++)o[a][l]===1&&(n[t+a][i+l]=1);return n}removeBlock(e){this.currentBlocks=this.currentBlocks.filter(t=>t.id!==e)}getBlockById(e){return this.currentBlocks.find(t=>t.id===e)}clearSelection(){this.selectedBlock=null,this.selectedBlockPosition=null}}class F{constructor(e,t,i=null){this.container=document.getElementById(e),this.blockManager=t,this.game=i,this.petrificationManager=(i==null?void 0:i.petrificationManager)||null,this.selectedBlock=null,this.blockElements=new Map,this._placeabilityTimeout=null,this.lastTapTime=null,this._petrificationUpdateInterval=null,this.mouseStart=null,this.mouseStartTime=null,this.mouseStartBlockId=null,this.pieceTimeouts=new Map,this.timeoutCheckInterval=null,this.WARNING_TIME=15e3,this.TIMEOUT_TIME=3e4,this.onPieceTimeout=null,this.timeoutPaused=!1,this.pieceTimeoutEnabled=!1,this.rotationEnabled=!1,this.animationSettings={blockHoverEffects:!0,blockSelectionGlow:!0,blockEntranceAnimations:!0,particleEffects:!0,animationSpeed:"normal"},this.loadAnimationSettings(),this.init()}init(){this.render(),this.setupEventListeners(),this.setupAnimationControls()}loadAnimationSettings(){if(this.game&&this.game.settings){const e=this.game.settings;this.animationSettings={blockHoverEffects:e.blockHoverEffects!==!1,blockSelectionGlow:e.blockSelectionGlow!==!1,blockEntranceAnimations:e.blockEntranceAnimations!==!1,particleEffects:e.particleEffects!==!1,animationSpeed:e.animationSpeed||"normal"}}}setupAnimationControls(){const e=this.getSpeedMultiplier();document.documentElement.style.setProperty("--animation-speed-multiplier",e);const t=document.body;t.classList.toggle("no-hover-effects",!this.animationSettings.blockHoverEffects),t.classList.toggle("no-selection-glow",!this.animationSettings.blockSelectionGlow),t.classList.toggle("no-entrance-animations",!this.animationSettings.blockEntranceAnimations),t.classList.toggle("no-particle-effects",!this.animationSettings.particleEffects)}getSpeedMultiplier(){switch(this.animationSettings.animationSpeed){case"slow":return"1.5";case"fast":return"0.5";default:return"1.0"}}render(){var s,o;if(!this.container)return;const e=((o=(s=this.game)==null?void 0:s.storage)==null?void 0:o.loadSettings())||{},t=e.enableBlockRotation===!0,i=t&&e.showRotateButton===!0;this.rotationEnabled=t,this.container.innerHTML=`
            <div class="block-palette">
                <h3>Available Blocks</h3>
                <div class="blocks-container" id="blocks-container">
                    <!-- Blocks will be rendered here -->
                </div>
            </div>
            <button id="rotate-selected" class="rotate-selected-btn ${i?"":"hidden"}" title="Rotate selected block">
                <span>↻</span>
            </button>
        `}updateRotationEnabled(e){this.rotationEnabled=e,e||this.updateRotateButtonVisibility(!1)}updateRotateButtonVisibility(e){const t=document.getElementById("rotate-selected");t&&(e&&this.rotationEnabled?t.classList.remove("hidden"):t.classList.add("hidden"))}updateBlocks(e,t=0){console.log("🎨 BlockPalette.updateBlocks called with blocks:",(e==null?void 0:e.length)||0,"blocks"),console.log("Block details:",e);const i=document.getElementById("blocks-container");if(console.log("blocks-container found:",!!i),!i)if(t<5){console.warn(`blocks-container not found! BlockPalette may not be rendered yet. Retrying in 50ms... (attempt ${t+1}/5)`),setTimeout(()=>{this.updateBlocks(e,t+1)},50);return}else{console.error("blocks-container not found after 5 retries! BlockPalette may not be properly initialized.");return}i.innerHTML="",this.blockElements.clear(),e.forEach((s,o)=>{const n=this.createBlockElement(s);this.animationSettings.blockEntranceAnimations&&(n.classList.add("entering"),setTimeout(()=>{n.classList.remove("entering")},o*100+50)),i.appendChild(n),this.blockElements.set(s.id,n)}),this.petrificationManager&&this.petrificationManager.isEnabled()?this.startPetrificationUpdates():this.stopPetrificationUpdates(),this.resetPieceTimeouts(e),console.log("✅ BlockPalette.updateBlocks completed. Rendered",(e==null?void 0:e.length)||0,"blocks")}createBlockElement(e){const t=document.createElement("div");t.className="block-item",t.dataset.blockId=e.id,e.isMagic?(t.classList.add("magic-block"),t.title=`🔮 MAGIC BLOCK: ${e.name} (${e.points} pts) - ${e.description}`):t.title=`Click to select, double-click to rotate: ${e.name} (${e.points} pts)`;const i=document.createElement("div");i.className="block-info";const s=document.createElement("div");s.className="block-shape";const o=30,n=document.createElement("div");n.className="block-preview",n.style.width=`${e.shape[0].length*o}px`,n.style.height=`${e.shape.length*o}px`;const a=document.createElement("canvas");a.width=e.shape[0].length*o,a.height=e.shape.length*o;const l=a.getContext("2d");if(e.isMagic){const c=l.createLinearGradient(0,0,a.width,a.height);c.addColorStop(0,"#ff6b6b"),c.addColorStop(.5,"#ff8e8e"),c.addColorStop(1,"#ff6b6b"),l.fillStyle=c,l.strokeStyle="#cc0000",l.lineWidth=3}else l.fillStyle=e.color,l.strokeStyle=this.darkenColor(e.color),l.lineWidth=2;for(let c=0;c<e.shape.length;c++)for(let h=0;h<e.shape[c].length;h++)if(e.shape[c][h]===1){const d=h*o,f=c*o;if(l.fillRect(d,f,o,o),l.strokeRect(d,f,o,o),e.isMagic&&(l.fillStyle="rgba(255, 255, 255, 0.8)",l.fillRect(d+o/2-2,f+4,4,2),l.fillRect(d+o-6,f+o/2-1,2,2),l.fillRect(d+4,f+o-6,2,2),e.isMagic)){const p=l.createLinearGradient(0,0,a.width,a.height);p.addColorStop(0,"#ff6b6b"),p.addColorStop(.5,"#ff8e8e"),p.addColorStop(1,"#ff6b6b"),l.fillStyle=p}}n.appendChild(a),s.appendChild(n),i.appendChild(s);const r=document.createElement("div");return r.className="block-points",r.textContent=e.points,i.appendChild(r),t.appendChild(i),t}setupEventListeners(){document.addEventListener("click",e=>{if(e.target.closest(".block-item")){const i=e.target.closest(".block-item").dataset.blockId;this.selectBlock(i)}e.target.closest("#rotate-selected")&&(e.preventDefault(),this.selectedBlock&&this.rotationEnabled&&this.rotateBlock(this.selectedBlock.id))}),document.addEventListener("dblclick",e=>{if(e.target.closest(".block-item")){e.preventDefault();const i=e.target.closest(".block-item").dataset.blockId;this.rotationEnabled&&this.rotateBlock(i)}}),document.addEventListener("mousedown",e=>{if(e.target.closest(".block-item")){const t=e.target.closest(".block-item"),i=t.dataset.blockId;this.mouseStart={clientX:e.clientX,clientY:e.clientY},this.mouseStartTime=Date.now(),this.mouseStartBlockId=i,t.style.transform="scale(0.95)",t.style.transition="transform 0.1s ease"}}),document.addEventListener("mousemove",e=>{if(this.mouseStart&&this.mouseStartBlockId){if(!this.blockManager.getBlockById(this.mouseStartBlockId)){this.resetMouseDragState();return}const i=Math.abs(e.clientX-this.mouseStart.clientX),s=Math.abs(e.clientY-this.mouseStart.clientY),o=Date.now()-this.mouseStartTime;if((i>5||s>5||o>100)&&(e.preventDefault(),!this.isDragging)){this.isDragging=!0,this.startDragFromPalette({clientX:e.clientX,clientY:e.clientY});const n=document.querySelector(`[data-block-id="${this.mouseStartBlockId}"]`);n&&n.classList.add("dragging")}}}),document.addEventListener("mouseup",e=>{if(this.mouseStart){const t=this.blockManager.getBlockById(this.mouseStartBlockId),i=Date.now()-this.mouseStartTime,s=Math.abs(e.clientX-this.mouseStart.clientX),o=Math.abs(e.clientY-this.mouseStart.clientY);this.isDragging?this.endDragFromPalette():t&&i<200&&s<5&&o<5&&this.selectBlock(this.mouseStartBlockId),this.resetMouseDragState()}}),document.addEventListener("touchstart",e=>{if(e.target.closest(".block-item")){const t=e.target.closest(".block-item"),i=t.dataset.blockId;this.touchStart=e.touches[0],this.touchStartTime=Date.now(),this.touchStartBlockId=i,t.style.transform="scale(0.95)",t.style.transition="transform 0.1s ease"}},{passive:!0}),document.addEventListener("touchmove",e=>{if(this.touchStart&&this.touchStartBlockId){if(!this.blockManager.getBlockById(this.touchStartBlockId)){this.resetDragState();return}const i=e.touches[0],s=Math.abs(i.clientX-this.touchStart.clientX),o=Math.abs(i.clientY-this.touchStart.clientY),n=Date.now()-this.touchStartTime;if((s>5||o>5||n>100)&&(e.preventDefault(),!this.isDragging)){this.isDragging=!0,this.startDragFromPalette(i);const a=document.querySelector(`[data-block-id="${this.touchStartBlockId}"]`);a&&a.classList.add("dragging")}}},{passive:!1}),document.addEventListener("touchend",e=>{if(this.touchStart){const t=this.blockManager.getBlockById(this.touchStartBlockId),i=e.changedTouches[0],s=Date.now()-this.touchStartTime,o=Math.abs(i.clientX-this.touchStart.clientX),n=Math.abs(i.clientY-this.touchStart.clientY);this.isDragging?this.endDragFromPalette():t&&o<5&&n<5&&s<200&&(this.lastTapTime&&Date.now()-this.lastTapTime<300?(this.rotationEnabled&&(e.preventDefault(),this.rotateBlock(this.touchStartBlockId)),this.lastTapTime=null):(this.selectBlock(this.touchStartBlockId),this.lastTapTime=Date.now())),this.resetDragState()}},{passive:!1}),document.addEventListener("touchcancel",e=>{this.touchStart&&(this.resetDragState(),this.lastTapTime=null)},{passive:!0})}resetDragState(){if(this.touchStartBlockId){const e=document.querySelector(`[data-block-id="${this.touchStartBlockId}"]`);e&&(e.classList.remove("dragging"),e.style.transform="",e.style.transition="")}this.touchStart=null,this.touchStartTime=null,this.touchStartBlockId=null,this.isDragging=!1}resetMouseDragState(){if(this.mouseStartBlockId){const e=document.querySelector(`[data-block-id="${this.mouseStartBlockId}"]`);e&&(e.classList.remove("dragging"),e.style.transform="",e.style.transition="")}this.mouseStart=null,this.mouseStartTime=null,this.mouseStartBlockId=null,this.isDragging=!1}startDragFromPalette(e){const t=this.touchStartBlockId||this.mouseStartBlockId,i=this.blockManager.getBlockById(t);if(!i){this.resetDragState(),this.resetMouseDragState();return}this.selectBlock(t);const s=new CustomEvent("blockDragStart",{detail:{block:i,input:e}});document.dispatchEvent(s)}endDragFromPalette(){const e=new CustomEvent("blockDragEnd",{detail:{block:this.selectedBlock}});document.dispatchEvent(e)}selectBlock(e){if(this.clearSelection(),this.selectedBlock=this.blockManager.getBlockById(e),this.selectedBlock){const t=this.blockElements.get(e);t&&(t.classList.add("selected"),this.addSelectionEffects(t))}this.updateRotateButton(),this.dispatchSelectionEvent()}addSelectionEffects(e){this.game&&this.game.soundManager&&this.game.soundManager.playBlockSelect(),this.animationSettings.particleEffects&&this.createSelectionParticles(e),this.game&&this.game.hapticFeedback&&this.game.hapticFeedback.light()}createSelectionParticles(e){if(!this.animationSettings.particleEffects)return;const t=e.getBoundingClientRect(),i=t.left+t.width/2,s=t.top+t.height/2;for(let o=0;o<3;o++){const n=document.createElement("div");n.className="selection-particle",n.style.cssText=`
                position: fixed;
                left: ${i}px;
                top: ${s}px;
                width: 4px;
                height: 4px;
                background: var(--primary-color);
                border-radius: 50%;
                pointer-events: none;
                z-index: 1000;
                animation: particle-burst ${.6*this.getSpeedMultiplier()}s ease-out forwards;
                animation-delay: ${o*.05}s;
                transform-origin: center;
            `;const a=360/3*o;n.style.setProperty("--particle-angle",`${a}deg`),document.body.appendChild(n),setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n)},800)}}selectBlockById(e){this.selectBlock(e)}rotateBlock(e){if(!this.rotationEnabled)return;const t=this.blockManager.getBlockById(e);if(!t)return;const i=this.blockManager.rotateBlock(t);if(i){const s=this.blockManager.currentBlocks.findIndex(o=>o.id===e);s!==-1&&(this.blockManager.currentBlocks[s]=i,this.updateBlocks(this.blockManager.currentBlocks),this.selectedBlock&&this.selectedBlock.id===e&&(this.selectedBlock=i,this.dispatchSelectionEvent()),this.game&&this.game.effectsManager&&this.game.effectsManager.onBlockRotate())}}clearSelection(){this.blockElements.forEach(e=>{e.classList.remove("selected")}),this.selectedBlock=null,this.updateRotateButton()}dispatchSelectionEvent(){const e=new CustomEvent("blockSelected",{detail:{block:this.selectedBlock}});document.dispatchEvent(e)}darkenColor(e){const t=e.replace("#",""),i=parseInt(t.substr(0,2),16),s=parseInt(t.substr(2,2),16),o=parseInt(t.substr(4,2),16),n=Math.max(0,i-30),a=Math.max(0,s-30),l=Math.max(0,o-30);return`rgb(${n}, ${a}, ${l})`}updateRotateButton(){const e=document.getElementById("rotate-selected");e&&(this.selectedBlock?(e.disabled=!1,e.classList.remove("disabled")):(e.disabled=!0,e.classList.add("disabled")))}getSelectedBlock(){return this.selectedBlock}setPlaceability(e,t={}){const{highlightLast:i=!1,durationMs:s=1250}=t;this._placeabilityTimeout&&(clearTimeout(this._placeabilityTimeout),this._placeabilityTimeout=null);let o=[];if(Object.keys(e||{}).forEach(n=>{e[n]&&o.push(n)}),this.blockElements.forEach((n,a)=>{const l=!!e[a];n.classList.toggle("unplaceable",!l),n.classList.toggle("placeable",l),n.classList.remove("last-playable")}),i&&o.length===1){const n=o[0],a=this.blockElements.get(n);a&&a.classList.add("last-playable")}s>0&&(this._placeabilityTimeout=setTimeout(()=>{this.clearPlaceability()},s))}showPreGameOverIndicator(e=1250){if(!this.container)return;const t=this.container.querySelector(".block-palette");t&&t.classList.add("pre-game-over"),this.blockElements.forEach(i=>{i.classList.add("unplaceable"),i.classList.remove("last-playable")}),this._placeabilityTimeout&&clearTimeout(this._placeabilityTimeout),e>0&&(this._placeabilityTimeout=setTimeout(()=>{this.clearPlaceability()},e))}clearPlaceability(){const e=this.container?this.container.querySelector(".block-palette"):null;e&&e.classList.remove("pre-game-over"),this.blockElements.forEach(t=>{t.classList.remove("unplaceable"),t.classList.remove("placeable"),t.classList.remove("last-playable")}),this._placeabilityTimeout&&(clearTimeout(this._placeabilityTimeout),this._placeabilityTimeout=null)}startPetrificationUpdates(){this.stopPetrificationUpdates(),this._petrificationUpdateInterval=setInterval(()=>{this.updatePetrificationVisuals()},100)}stopPetrificationUpdates(){this._petrificationUpdateInterval&&(clearInterval(this._petrificationUpdateInterval),this._petrificationUpdateInterval=null),this.blockElements.forEach(e=>{e.classList.remove("petrified","warning-7s","warning-3s")})}updatePetrificationVisuals(){!this.petrificationManager||!this.petrificationManager.isEnabled()||this.blockElements.forEach((e,t)=>{const i=this.petrificationManager.getBlockState(t);e.classList.remove("petrified","warning-7s","warning-3s"),i.petrified?e.classList.add("petrified"):i.warning==="3s"?e.classList.add("warning-3s"):i.warning==="7s"&&e.classList.add("warning-7s")})}resetPieceTimeouts(e){this.pieceTimeouts.clear();const t=Date.now();e.forEach(i=>{this.pieceTimeouts.set(i.id,{startTime:t,warningShown:!1,timedOut:!1})}),!this.timeoutCheckInterval&&this.pieceTimeoutEnabled&&this.startTimeoutChecking()}resetPieceTimeout(e){if(this.pieceTimeouts.has(e)){this.pieceTimeouts.delete(e);const t=this.blockElements.get(e);t&&t.classList.remove("piece-struggling","piece-timed-out")}}startTimeoutChecking(){this.timeoutCheckInterval&&clearInterval(this.timeoutCheckInterval),this.timeoutCheckInterval=setInterval(()=>{this.checkPieceTimeouts()},500)}stopTimeoutChecking(){this.timeoutCheckInterval&&(clearInterval(this.timeoutCheckInterval),this.timeoutCheckInterval=null),this.blockElements.forEach(e=>{e.classList.remove("piece-struggling","piece-timed-out")}),this.pieceTimeouts.clear()}pauseTimeoutChecking(){this.timeoutPaused=!0;const e=Date.now();this.pieceTimeouts.forEach(t=>{t.pauseTime||(t.pauseTime=e)})}resumeTimeoutChecking(){this.timeoutPaused=!1;const e=Date.now();this.pieceTimeouts.forEach(t=>{if(t.pauseTime){const i=e-t.pauseTime;t.startTime+=i,delete t.pauseTime}})}checkPieceTimeouts(){if(this.timeoutPaused||!this.pieceTimeoutEnabled)return;const e=Date.now();this.pieceTimeouts.forEach((t,i)=>{const s=e-t.startTime,o=this.blockElements.get(i);o&&(s>=this.TIMEOUT_TIME&&!t.timedOut?(t.timedOut=!0,o.classList.remove("piece-struggling"),o.classList.add("piece-timed-out"),this.showPieceTimeoutNotification(),this.onPieceTimeout&&this.onPieceTimeout(i)):s>=this.WARNING_TIME&&!t.warningShown&&(t.warningShown=!0,o.classList.add("piece-struggling")))})}showPieceTimeoutNotification(){const e=document.getElementById("blocks-container");if(!e)return;const t=e.getBoundingClientRect(),i=t.left+t.width/2,s=t.top+t.height/2,o=document.createElement("div");o.className="floating-piece-timeout",o.textContent="Piece Lodged in Place!",o.style.position="fixed",o.style.left=`${i}px`,o.style.top=`${s}px`,document.body.appendChild(o),setTimeout(()=>{o.parentElement&&o.parentElement.removeChild(o)},3e3)}setPieceTimeoutCallback(e){this.onPieceTimeout=e}areAllPiecesTimedOut(){if(this.pieceTimeouts.size===0)return!1;let e=!0;return this.pieceTimeouts.forEach(t=>{t.timedOut||(e=!1)}),e}setPieceTimeoutEnabled(e){this.pieceTimeoutEnabled=e,e?this.pieceTimeouts.size>0&&this.startTimeoutChecking():this.stopTimeoutChecking()}}class W{constructor(){this.currentMultiplier=1,this.maxMultiplier=1,this.consecutiveClears=0,this.maxConsecutiveClears=0,this.totalMultiplierBonus=0,this.multiplierHistory=[],this.isEnabled=!0,this.config={maxMultiplier:10,resetOnNonClear:!0,resetOnGameOver:!0,visualFeedback:!0,soundFeedback:!0,particleEffects:!0}}setEnabled(e){this.isEnabled=e,e||this.reset()}processLineClear(e,t=1){if(!this.isEnabled)return{multiplier:1,bonusPoints:0,chainBroken:!1,chainContinued:!1};if(e.totalClears>0){this.consecutiveClears++,this.updateMultiplier();const o=e.scoreGained/t*(this.currentMultiplier-1),n=Math.floor(o*t);return this.totalMultiplierBonus+=n,this.multiplierHistory.push({multiplier:this.currentMultiplier,consecutiveClears:this.consecutiveClears,bonusPoints:n,timestamp:Date.now()}),{multiplier:this.currentMultiplier,bonusPoints:n,chainBroken:!1,chainContinued:this.consecutiveClears>1,consecutiveClears:this.consecutiveClears}}else{const s=this.config.resetOnNonClear&&this.consecutiveClears>0;return s&&this.reset(),{multiplier:1,bonusPoints:0,chainBroken:s,chainContinued:!1,consecutiveClears:this.consecutiveClears}}}updateMultiplier(){this.consecutiveClears>=2?this.currentMultiplier=Math.min(this.consecutiveClears,this.config.maxMultiplier):this.currentMultiplier=1,this.maxMultiplier=Math.max(this.maxMultiplier,this.currentMultiplier),this.maxConsecutiveClears=Math.max(this.maxConsecutiveClears,this.consecutiveClears)}reset(){this.currentMultiplier=1,this.consecutiveClears=0}resetAll(){this.currentMultiplier=1,this.maxMultiplier=1,this.consecutiveClears=0,this.maxConsecutiveClears=0,this.totalMultiplierBonus=0,this.multiplierHistory=[]}getStatus(){return{currentMultiplier:this.currentMultiplier,maxMultiplier:this.maxMultiplier,consecutiveClears:this.consecutiveClears,maxConsecutiveClears:this.maxConsecutiveClears,totalMultiplierBonus:this.totalMultiplierBonus,isEnabled:this.isEnabled,nextMultiplier:this.consecutiveClears>=1?Math.min(this.consecutiveClears+1,this.config.maxMultiplier):2}}getStatistics(){return{maxMultiplier:this.maxMultiplier,maxConsecutiveClears:this.maxConsecutiveClears,totalMultiplierBonus:this.totalMultiplierBonus,totalChainEvents:this.multiplierHistory.length,averageMultiplier:this.multiplierHistory.length>0?this.multiplierHistory.reduce((e,t)=>e+t.multiplier,0)/this.multiplierHistory.length:0}}updateConfig(e){this.config={...this.config,...e}}isAtMaxMultiplier(){return this.currentMultiplier>=this.config.maxMultiplier}getProgress(){return this.config.maxMultiplier<=1?0:Math.min((this.currentMultiplier-1)/(this.config.maxMultiplier-1),1)}getVisualFeedback(){return this.config.visualFeedback?{showMultiplier:this.currentMultiplier>1,multiplier:this.currentMultiplier,progress:this.getProgress(),isAtMax:this.isAtMaxMultiplier(),consecutiveClears:this.consecutiveClears,nextMultiplier:Math.min(this.consecutiveClears+2,this.config.maxMultiplier)}:null}}class j{constructor(){this.patterns=this.initializePatterns(),this.isEnabled=!0,this.detectionHistory=[],this.config={minPatternSize:3,maxPatternSize:9,visualFeedback:!0,soundFeedback:!0,particleEffects:!0}}initializePatterns(){return{cross:{name:"Cross",description:"Plus-shaped pattern",basePoints:50,multiplier:1.5,detect:this.detectCrossPattern.bind(this),minSize:3},lShape:{name:"L-Shape",description:"L-shaped pattern",basePoints:40,multiplier:1.3,detect:this.detectLShapePattern.bind(this),minSize:3},diamond:{name:"Diamond",description:"Diamond-shaped pattern",basePoints:60,multiplier:1.6,detect:this.detectDiamondPattern.bind(this),minSize:3},spiral:{name:"Spiral",description:"Spiral pattern",basePoints:80,multiplier:2,detect:this.detectSpiralPattern.bind(this),minSize:4},checkerboard:{name:"Checkerboard",description:"Alternating pattern",basePoints:70,multiplier:1.8,detect:this.detectCheckerboardPattern.bind(this),minSize:4}}}detectPatterns(e){if(!this.isEnabled)return[];const t=[];for(const[i,s]of Object.entries(this.patterns)){const o=s.detect(e);o.length>0&&t.push({type:i,name:s.name,description:s.description,basePoints:s.basePoints,multiplier:s.multiplier,positions:o,count:o.length})}return t.length>0&&this.detectionHistory.push({timestamp:Date.now(),patterns:t,totalPatterns:t.reduce((i,s)=>i+s.count,0)}),t}detectCrossPattern(e){const t=[],i=e.length,s=e[0].length;for(let o=1;o<i-1;o++)for(let n=1;n<s-1;n++)this.isCrossPattern(e,o,n)&&t.push({center:{row:o,col:n},positions:this.getCrossPositions(o,n),size:3});return t}isCrossPattern(e,t,i){if(e[t][i]!==1)return!1;const o=e[t][i-1],n=e[t][i+1],a=e[t-1][i],l=e[t+1][i];return o===1&&n===1&&a===1&&l===1}getCrossPositions(e,t){return[{row:e,col:t},{row:e,col:t-1},{row:e,col:t+1},{row:e-1,col:t},{row:e+1,col:t}]}detectLShapePattern(e){const t=[],i=e.length,s=e[0].length;for(let o=0;o<i-1;o++)for(let n=0;n<s-1;n++){const a=this.findLShapePattern(e,o,n);a&&t.push(a)}return t}findLShapePattern(e,t,i){const s=[[{row:t,col:i},{row:t,col:i+1},{row:t+1,col:i}],[{row:t,col:i},{row:t,col:i+1},{row:t+1,col:i+1}],[{row:t,col:i},{row:t+1,col:i},{row:t+1,col:i+1}],[{row:t,col:i+1},{row:t+1,col:i},{row:t+1,col:i+1}]];for(const o of s)if(this.isValidPattern(e,o))return{positions:o,size:o.length};return null}detectDiamondPattern(e){const t=[],i=e.length,s=e[0].length;for(let o=1;o<i-1;o++)for(let n=1;n<s-1;n++){const a=this.findDiamondPattern(e,o,n);a&&t.push(a)}return t}findDiamondPattern(e,t,i){const s=[{row:t,col:i},{row:t-1,col:i},{row:t+1,col:i},{row:t,col:i-1},{row:t,col:i+1}];return this.isValidPattern(e,s)?{center:{row:t,col:i},positions:s,size:s.length}:null}detectSpiralPattern(e){const t=[],i=e.length,s=e[0].length;for(let o=1;o<i-2;o++)for(let n=1;n<s-2;n++){const a=this.findSpiralPattern(e,o,n);a&&t.push(a)}return t}findSpiralPattern(e,t,i){const s=[{row:t,col:i},{row:t,col:i+1},{row:t,col:i+2},{row:t+1,col:i+2},{row:t+2,col:i+2},{row:t+2,col:i+1},{row:t+2,col:i},{row:t+1,col:i}];return this.isValidPattern(e,s)?{center:{row:t+1,col:i+1},positions:s,size:s.length}:null}detectCheckerboardPattern(e){const t=[],i=e.length,s=e[0].length;for(let o=0;o<i-1;o++)for(let n=0;n<s-1;n++){const a=this.findCheckerboardPattern(e,o,n);a&&t.push(a)}return t}findCheckerboardPattern(e,t,i){const s=[{row:t,col:i},{row:t,col:i+1},{row:t+1,col:i},{row:t+1,col:i+1}];return this.isValidPattern(e,s)?{positions:s,size:s.length}:null}isValidPattern(e,t){return t.every(i=>i.row>=0&&i.row<e.length&&i.col>=0&&i.col<e[0].length&&e[i.row][i.col]===1)}calculatePatternBonus(e,t=1){let i=0;for(const s of e){const o=s.basePoints*s.multiplier*s.count;i+=Math.floor(o*t)}return i}getStatistics(){const e={totalDetections:this.detectionHistory.length,totalPatterns:0,patternCounts:{},totalBonusPoints:0};for(const t of this.detectionHistory){e.totalPatterns+=t.totalPatterns;for(const i of t.patterns)e.patternCounts[i.type]||(e.patternCounts[i.type]=0),e.patternCounts[i.type]+=i.count,e.totalBonusPoints+=i.basePoints*i.multiplier*i.count}return e}setEnabled(e){this.isEnabled=e}reset(){this.detectionHistory=[]}getVisualFeedback(){return this.config.visualFeedback?{enabled:this.isEnabled,patterns:this.patterns,statistics:this.getStatistics()}:null}}class U{constructor(e=null,t=null,i=null){this.score=0,this.level=1,this.linesCleared=0,this.petrificationManager=e,this.difficultyManager=t,this.game=i,this.combo=0,this.maxCombo=0,this.totalCombos=0,this.maxTotalCombos=0,this.streakCount=0,this.maxStreakCount=0,this.totalStreakBonus=0,this.placementTimes=[],this.speedBonuses=[],this.totalSpeedBonus=0,this.fastestPlacement=null,this.averagePlacementSpeed=0,this.rowsClearedCount=0,this.columnsClearedCount=0,this.squaresClearedCount=0,this.comboActivations=0,this.pointsBreakdown={linePoints:0,squarePoints:0,comboBonusPoints:0,placementPoints:0,streakBonusPoints:0,emptyGridBonusPoints:0},this.lastEmptyGridBonusLevel=0,this.emptyGridBonusThreshold=5,this.multiplierChainManager=new W,this.patternDetectionManager=new j,this.basePoints={single:.5,line:15,square:20,combo:5},this.speedConfig={mode:"bonus",thresholds:this.generateSpeedThresholds(),maxBonus:5,streakMultiplier:1.2},this.levelProgression={easy:{baseRange:150,stepIncrease:.05,roundingMode:"round"},normal:{baseRange:100,stepIncrease:.05,roundingMode:"round"},hard:{baseRange:80,stepIncrease:.05,roundingMode:"round"},expert:{baseRange:60,stepIncrease:.05,roundingMode:"round"}}}setPetrificationManager(e){this.petrificationManager=e}setDifficultyManager(e){this.difficultyManager=e}getCurrentDifficulty(){return this.difficultyManager?this.difficultyManager.getCurrentDifficulty():"normal"}generateSpeedThresholds(){let e=1e4;return this.game&&this.game.storage&&(e=(this.game.storage.loadSettings().speedTimerDuration||10)*1e3),[{maxTime:Math.round(e*.1),bonus:2,label:"Lightning Fast"},{maxTime:Math.round(e*.3),bonus:1,label:"Very Fast"},{maxTime:Math.round(e*.5),bonus:.5,label:"Fast"},{maxTime:Math.round(e*.7),bonus:.25,label:"Quick"},{maxTime:e,bonus:0,label:"Normal"}]}checkForCompletedLines(e){const t={rows:[],columns:[],squares:[]};for(let i=0;i<e.length;i++)this.isRowComplete(e,i)&&(!this.petrificationManager||this.petrificationManager.canClearRow(e,i))&&t.rows.push(i);for(let i=0;i<e[0].length;i++)this.isColumnComplete(e,i)&&(!this.petrificationManager||this.petrificationManager.canClearColumn(e,i))&&t.columns.push(i);for(let i=0;i<3;i++)for(let s=0;s<3;s++)this.isSquareComplete(e,i,s)&&(!this.petrificationManager||this.petrificationManager.canClearSquare(e,i,s))&&t.squares.push({row:i,col:s});return t}checkAndClearLines(e,t=1){const i=this.checkForCompletedLines(e);return this.applyClears(e,i,t)}calculateScoreForClears(e,t=1){const i=e.rows.length,s=e.columns.length,o=e.squares.length,n=i+s+o;if(n===0)return{scoreGained:0,isComboEvent:!1,clearTypes:[],totalClears:0,breakdown:{linePoints:0,squarePoints:0,comboBonus:0}};const a=(i+s)*this.basePoints.line,l=o*this.basePoints.square;let r=a+l;const c=[];i>0&&c.push("row"),s>0&&c.push("column"),o>0&&c.push("square");const h=c.length>=2||n>=2;let d=0;h&&(d=this.calculateComboBonus(n),r+=d);const f=a+l,p=Math.floor(f*t),u=Math.floor(d*t);return r=p+u,{scoreGained:r,isComboEvent:h,clearTypes:c,totalClears:n,breakdown:{linePoints:Math.floor(a*t),squarePoints:Math.floor(l*t),comboBonus:u}}}clearLinesFromBoard(e,t){let i=e.map(o=>[...o]),s=0;return t.rows.forEach(o=>{i[o]=new Array(e[0].length).fill(0),s++}),t.columns.forEach(o=>{for(let n=0;n<e.length;n++)i[n][o]=0;s++}),t.squares.forEach(o=>{const n=o.row*3,a=o.col*3;for(let l=n;l<n+3;l++)for(let r=a;r<a+3;r++)i[l][r]=0;s++}),{board:i,clearedCount:s,clearedLines:t}}isRowComplete(e,t){return e[t].every(i=>i===1)}isColumnComplete(e,t){return e.every(i=>i[t]===1)}isSquareComplete(e,t,i){const s=t*3,o=i*3;for(let n=s;n<s+3;n++)for(let a=o;a<o+3;a++)if(e[n][a]!==1)return!1;return!0}applyClears(e,t,i=1){let s=e.map(r=>[...r]),o=0;t.rows.forEach(r=>{s[r]=new Array(e[0].length).fill(0),o++}),t.columns.forEach(r=>{for(let c=0;c<e.length;c++)s[c][r]=0;o++}),t.squares.forEach(r=>{const c=r.row*3,h=r.col*3;for(let d=c;d<c+3;d++)for(let f=h;f<h+3;f++)s[d][f]=0;o++});const n=[];t.rows.length>0&&n.push("row"),t.columns.length>0&&n.push("column"),t.squares.length>0&&n.push("square");const a=t.rows.length+t.columns.length+t.squares.length,l=n.length>=2||a>=2;return o>0?(this.rowsClearedCount+=t.rows.length,this.columnsClearedCount+=t.columns.length,this.squaresClearedCount+=t.squares.length,this.calculateScore(t,l,i),this.linesCleared+=o,l?(console.log("🎯 Combo Event Detected!",{clearTypes:n.length,totalClearsThisEvent:a,currentCombo:this.combo,currentTotalCombos:this.totalCombos}),this.combo++,this.maxCombo=Math.max(this.maxCombo,this.combo),this.streakCount++,this.maxStreakCount=Math.max(this.maxStreakCount,this.streakCount),this.totalCombos++,this.maxTotalCombos=Math.max(this.maxTotalCombos,this.totalCombos),console.log("🎯 After Combo Update:",{newCombo:this.combo,newTotalCombos:this.totalCombos,streakCount:this.streakCount}),this.comboActivations++):this.combo=0):(this.combo=0,this.streakCount=0),{board:s,clearedCount:o,scoreGained:this.getLastScoreGained(),isCombo:l,comboTypes:n,clearedLines:t}}calculateScore(e,t=!1,i=1){const s=e.rows.length,o=e.columns.length,n=e.squares.length,a=s+o+n;if(a===0)return;const l=(s+o)*this.basePoints.line,r=n*this.basePoints.square;let c=l+r,h=0,d=0;t&&(h=this.calculateComboBonus(a),c+=h,d=this.calculateStreakBonus(this.streakCount),c+=d);const f={totalClears:a,scoreGained:c,isComboEvent:t},p=this.multiplierChainManager.processLineClear(f,i);let u=0;p.bonusPoints>0&&(u=p.bonusPoints,c+=u);const v=l+r,y=Math.floor(v*i),S=Math.floor(h*i),P=Math.floor(d*i);c=y+S+P+u,this.pointsBreakdown.linePoints+=Math.floor(l*i),this.pointsBreakdown.squarePoints+=Math.floor(r*i),this.pointsBreakdown.comboBonusPoints+=S,this.pointsBreakdown.streakBonusPoints+=P,this.score+=c,this.lastScoreGained=c,this.lastMultiplierResult=p,this.updateLevelFromScore()}addPlacementPoints(e,t=1){const i=Math.max(0,e|0);if(i===0)return;const s={totalClears:0,scoreGained:0,isComboEvent:!1},o=this.multiplierChainManager.processLineClear(s,t),n=Math.floor(i*t);this.score+=n,this.lastScoreGained=n,this.pointsBreakdown.placementPoints+=n,this.lastMultiplierResult=o,this.updateLevelFromScore()}recordPlacementTime(){const e=Date.now();if(this.speedConfig.mode!=="ignored"&&(this.placementTimes.push(e),this.placementTimes.length>=2)){const t=e-this.placementTimes[this.placementTimes.length-2],i=this.calculateSpeedBonus(t);i>0&&(this.speedBonuses.push({time:t,bonus:i,timestamp:e}),this.totalSpeedBonus+=i,this.speedConfig.mode==="punishment"?(this.score-=i,this.lastScoreGained-=i):this.speedConfig.mode==="bonus"&&(this.score+=i,this.lastScoreGained+=i),(!this.fastestPlacement||t<this.fastestPlacement)&&(this.fastestPlacement=t),this.updateAveragePlacementSpeed())}}calculateSpeedBonus(e){if(this.speedConfig.thresholds=this.generateSpeedThresholds(),this.speedConfig.mode==="ignored"||e<=0)return 0;const t=this.speedConfig.thresholds[this.speedConfig.thresholds.length-1].maxTime;if(this.speedConfig.mode==="bonus"){for(const i of this.speedConfig.thresholds)if(e<=i.maxTime){let s=i.bonus;return this.getRecentFastPlacements()>=2&&(s=Math.floor(s*this.speedConfig.streakMultiplier)),Math.min(s,this.speedConfig.maxBonus)}return 0}else if(this.speedConfig.mode==="punishment"){if(e>t){const s=(e-t)/1e3;let o=Math.floor(s);const n=1+(this.level-1)*.03;o=Math.floor(o*n);const a=t/1e3,l=Math.floor(a);return-Math.min(o,l)}return 0}return 0}getRecentFastPlacements(){if(this.speedBonuses.length===0)return 0;const e=Math.min(5,this.speedBonuses.length);return this.speedBonuses.slice(-e).filter(i=>i.bonus>0).length}updateAveragePlacementSpeed(){if(this.placementTimes.length<2){this.averagePlacementSpeed=0;return}let e=0;for(let t=1;t<this.placementTimes.length;t++)e+=this.placementTimes[t]-this.placementTimes[t-1];this.averagePlacementSpeed=e/(this.placementTimes.length-1)}getSpeedStats(){return{totalSpeedBonus:this.totalSpeedBonus,fastestPlacement:this.fastestPlacement,averagePlacementSpeed:this.averagePlacementSpeed,speedBonuses:this.speedBonuses,recentFastPlacements:this.getRecentFastPlacements(),totalPlacements:this.placementTimes.length}}setSpeedMode(e){["bonus","punishment","ignored"].includes(e)?this.speedConfig.mode=e:(console.warn(`Invalid speed mode: ${e}. Using 'bonus' as default.`),this.speedConfig.mode="bonus")}getSpeedMode(){return this.speedConfig.mode}setSpeedBonusEnabled(e){this.speedConfig.mode=e?"bonus":"ignored"}isSpeedBonusEnabled(){return this.speedConfig.mode!=="ignored"}setSpeedPunishmentMode(e){this.speedConfig.mode=e?"punishment":"bonus"}isSpeedPunishmentMode(){return this.speedConfig.mode==="punishment"}resetStreak(){this.combo=0,this.streakCount=0}getLastScoreGained(){return this.lastScoreGained||0}getScore(){return this.score}getLevel(){return this.level}getCombo(){return this.combo}getMaxCombo(){return this.maxCombo}getTotalCombos(){return this.totalCombos}getMaxTotalCombos(){return this.maxTotalCombos}getComboTotal(){return this.comboActivations}getLinesCleared(){return this.linesCleared}reset(){this.score=0,this.level=1,this.linesCleared=0,this.combo=0,this.maxCombo=0,this.totalCombos=0,this.maxTotalCombos=0,this.streakCount=0,this.maxStreakCount=0,this.totalStreakBonus=0,this.placementTimes=[],this.speedBonuses=[],this.totalSpeedBonus=0,this.fastestPlacement=null,this.averagePlacementSpeed=0,this.lastScoreGained=0,this.rowsClearedCount=0,this.columnsClearedCount=0,this.squaresClearedCount=0,this.comboActivations=0,this.pointsBreakdown={linePoints:0,squarePoints:0,comboBonusPoints:0,placementPoints:0,streakBonusPoints:0,emptyGridBonusPoints:0},this.lastEmptyGridBonusLevel=0}applyRounding(e,t){switch(t){case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);case"round":return Math.round(e);default:return e}}getLevelThreshold(e){if(e<=1)return 0;const t=this.getCurrentDifficulty(),i=this.levelProgression[t]||this.levelProgression.normal,s=i.baseRange,o=i.stepIncrease,n=i.roundingMode;let a=s+1,l=s;for(let r=2;r<e;r++)l=this.applyRounding(l*(1+o),n),a+=l;return a}updateLevelFromScore(){let e=1;const t=200;for(let i=2;i<=t;i++){const s=this.getLevelThreshold(i);if(this.score>=s){e=i;continue}break}e>this.level&&(this.level=e)}countEmptySquares(e){if(!e||!Array.isArray(e)||e.length===0)return 0;let t=0;for(let i=0;i<e.length;i++)for(let s=0;s<e[i].length;s++)e[i][s]===0&&t++;return t}shouldGiveEmptyGridBonus(){return this.level%this.emptyGridBonusThreshold===0&&this.level>this.lastEmptyGridBonusLevel}calculateEmptyGridBonus(e){return this.shouldGiveEmptyGridBonus()?this.countEmptySquares(e)*2:0}applyEmptyGridBonus(e){if(!this.shouldGiveEmptyGridBonus())return 0;const t=this.calculateEmptyGridBonus(e);return t>0&&(this.score+=t,this.lastScoreGained+=t,this.pointsBreakdown.emptyGridBonusPoints+=t,this.lastEmptyGridBonusLevel=this.level),t}calculateComboBonus(e){if(e<2)return 0;let t=0;for(let i=2;i<=e;i++)i===2?t+=10:i===3||i===4?t+=15:i===5?t+=50:t+=100;return t}calculateStreakBonus(e){return e<2?0:e<=10?e*10:100+(e-10)*100}getMultiplierChainStatus(){return this.multiplierChainManager.getStatus()}getMultiplierChainStatistics(){return this.multiplierChainManager.getStatistics()}getLastMultiplierResult(){return this.lastMultiplierResult||null}setMultiplierChainEnabled(e){this.multiplierChainManager.setEnabled(e)}isMultiplierChainEnabled(){return this.multiplierChainManager.isEnabled}resetMultiplierChain(){this.multiplierChainManager.reset()}getPatternDetectionStatus(){return this.patternDetectionManager.getVisualFeedback()}getPatternDetectionStatistics(){return this.patternDetectionManager.getStatistics()}setPatternDetectionEnabled(e){this.patternDetectionManager.setEnabled(e)}isPatternDetectionEnabled(){return this.patternDetectionManager.isEnabled}resetPatternDetection(){this.patternDetectionManager.reset()}detectPatterns(e){return this.patternDetectionManager.detectPatterns(e)}resetAll(){this.score=0,this.level=1,this.linesCleared=0,this.combo=0,this.maxCombo=0,this.totalCombos=0,this.maxTotalCombos=0,this.streakCount=0,this.maxStreakCount=0,this.totalStreakBonus=0,this.rowsClearedCount=0,this.columnsClearedCount=0,this.squaresClearedCount=0,this.comboActivations=0,this.placementTimes=[],this.speedBonuses=[],this.totalSpeedBonus=0,this.fastestPlacement=null,this.averagePlacementSpeed=0,this.pointsBreakdown={linePoints:0,squarePoints:0,comboBonusPoints:0,placementPoints:0,streakBonusPoints:0,emptyGridBonusPoints:0},this.lastEmptyGridBonusLevel=0,this.multiplierChainManager.resetAll(),this.patternDetectionManager.reset()}getStats(){return{score:this.score,level:this.level,linesCleared:this.linesCleared,combo:this.combo,maxCombo:this.maxCombo,totalCombos:this.totalCombos,maxTotalCombos:this.maxTotalCombos,streakCount:this.streakCount,maxStreakCount:this.maxStreakCount,totalStreakBonus:this.totalStreakBonus,rowClears:this.rowsClearedCount,columnClears:this.columnsClearedCount,squareClears:this.squaresClearedCount,comboActivations:this.comboActivations,breakdownBase:{linePoints:this.pointsBreakdown.linePoints,squarePoints:this.pointsBreakdown.squarePoints,comboBonusPoints:this.pointsBreakdown.comboBonusPoints,placementPoints:this.pointsBreakdown.placementPoints,streakBonusPoints:this.pointsBreakdown.streakBonusPoints,emptyGridBonusPoints:this.pointsBreakdown.emptyGridBonusPoints},speedStats:this.getSpeedStats(),multiplierChainStats:this.getMultiplierChainStatistics(),patternDetectionStats:this.getPatternDetectionStatistics()}}}class A{constructor(){this.isOnline=navigator.onLine,this.offlineIndicator=null,this.init()}init(){this.setupEventListeners(),this.createOfflineIndicator(),this.updateOfflineStatus()}setupEventListeners(){window.addEventListener("online",()=>{console.log("PWA: Back online"),this.isOnline=!0,this.updateOfflineStatus()}),window.addEventListener("offline",()=>{console.log("PWA: Gone offline"),this.isOnline=!1,this.updateOfflineStatus()}),document.addEventListener("visibilitychange",()=>{document.hidden?this.handleAppBlur():this.handleAppFocus()})}createOfflineIndicator(){this.offlineIndicator=document.createElement("div"),this.offlineIndicator.id="offline-indicator",this.offlineIndicator.className="offline-indicator",this.offlineIndicator.innerHTML="📡 Offline Mode",this.offlineIndicator.style.cssText=`
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            background: #ff6b35;
            color: white;
            text-align: center;
            padding: 0.5rem;
            font-size: 0.9rem;
            font-weight: 500;
            z-index: 1000;
            transform: translateY(-100%);
            transition: transform 0.3s ease;
        `,document.body.appendChild(this.offlineIndicator)}updateOfflineStatus(){this.offlineIndicator&&(this.isOnline?(this.offlineIndicator.style.transform="translateY(-100%)",this.offlineIndicator.innerHTML="📡 Offline Mode"):(this.offlineIndicator.style.transform="translateY(0)",this.offlineIndicator.innerHTML="📡 Offline Mode - Game works without internet!"))}handleAppBlur(){console.log("PWA: App blurred")}handleAppFocus(){console.log("PWA: App focused")}isStandalone(){return window.matchMedia("(display-mode: standalone)").matches||window.navigator.standalone===!0}getStatus(){return{isOnline:this.isOnline,isStandalone:this.isStandalone(),supportsOffline:"serviceWorker"in navigator}}}const _=Object.freeze(Object.defineProperty({__proto__:null,OfflineManager:A},Symbol.toStringTag,{value:"Module"}));class Y{constructor(e,t){this.game=e,this.difficultyManager=t,this.hintsActive=!1,this.validPositions=[],this.hintCooldown=0,this.lastHintTime=0,this.hintDuration=5e3,this.cooldownDuration=1e4}update(e){this.hintCooldown>0&&(this.hintCooldown-=e)}isHintAvailable(){return this.difficultyManager.isHintsEnabled()&&this.game.enableHints&&this.hintCooldown<=0&&this.game.selectedBlock!==null&&this.game.blockManager.currentBlocks.length>0}toggleHints(){this.hintsActive?this.hideHints():this.showHint(),this.game.updateHintControls&&this.game.updateHintControls()}showHint(){return this.isHintAvailable()?(this.hintsActive=!0,this.lastHintTime=Date.now(),this.hintCooldown=this.cooldownDuration,this.findValidPositions(),this.game.drawBoard(),!0):!1}hideHints(){this.hintsActive=!1,this.validPositions=[],this.game.drawBoard()}findValidPositions(){if(!this.game.selectedBlock)return;this.validPositions=[];const e=this.game.selectedBlock;this.game.board;const t=this.game.boardSize;for(let i=0;i<t;i++)for(let s=0;s<t;s++)this.game.canPlaceBlock(i,s)&&this.validPositions.push({row:i,col:s});this.validPositions.sort((i,s)=>{const o=this.calculatePositionScore(i.row,i.col,e);return this.calculatePositionScore(s.row,s.col,e)-o})}calculatePositionScore(e,t,i){let s=0;const o=this.simulateBlockPlacement(e,t,i),n=this.checkForCompletedLines(o);s+=(n.rows.length+n.columns.length+n.squares.length)*100,(n.rows.length>1||n.columns.length>1||n.squares.length>1)&&(s+=200);const a=this.game.boardSize/2,l=this.game.boardSize/2,r=Math.abs(e-a)+Math.abs(t-l);return s+=(this.game.boardSize-r)*10,s}checkForCompletedLines(e){const t=[],i=[],s=[];for(let o=0;o<e.length;o++)e[o].every(n=>n===1)&&t.push(o);for(let o=0;o<e[0].length;o++)e.every(n=>n[o]===1)&&i.push(o);for(let o=0;o<3;o++)for(let n=0;n<3;n++){const a=o*3,l=n*3;let r=!0;for(let c=a;c<a+3;c++){for(let h=l;h<l+3;h++)if(e[c][h]!==1){r=!1;break}if(!r)break}r&&s.push({row:o,col:n})}return{rows:t,columns:i,squares:s}}simulateBlockPlacement(e,t,i){const s=this.game.board.map(o=>[...o]);return this.game.blockManager.canPlaceBlock(i,e,t,s)?this.game.blockManager.placeBlock(i,e,t,s):s}drawHints(e){if(!this.hintsActive||this.validPositions.length===0)return;const t=this.game.actualCellSize||this.game.cellSize;e.save(),e.globalAlpha=.8,this.validPositions.slice(0,3).forEach((s,o)=>{const n=s.col*t,a=s.row*t,l="#4CAF50",r=o===0?3:2;e.strokeStyle=l,e.lineWidth=r,e.setLineDash(o===0?[]:[5,5]),e.strokeRect(n+1,a+1,t-2,t-2),e.shadowColor=l,e.shadowBlur=8,e.strokeRect(n+1,a+1,t-2,t-2)}),e.restore()}getHintCount(){return this.validPositions.length}getBestPosition(){return this.validPositions.length>0?this.validPositions[0]:null}getHintStatus(){return{active:this.hintsActive,available:this.isHintAvailable()||this.hintsActive,cooldownRemaining:Math.max(0,this.hintCooldown),validPositions:this.validPositions.length}}forceShowHints(){this.hintsActive=!0,this.hintCooldown=0,this.findValidPositions()}reset(){this.hintsActive=!1,this.validPositions=[],this.hintCooldown=0,this.lastHintTime=0}}class V{constructor(e){this.difficultyManager=e,this.timeLimit=null,this.timeRemaining=0,this.isActive=!1,this.isPaused=!1,this.startTime=0,this.pausedTime=0,this.timeBonus=0,this.warningThreshold=30,this.criticalThreshold=10}initialize(){this.timeLimit=this.difficultyManager.getTimeLimit(),console.log("⏱️ TimerSystem.initialize() called:",{timeLimit:this.timeLimit,willBeActive:this.timeLimit&&this.timeLimit>0}),this.timeLimit&&this.timeLimit>0?(this.timeRemaining=this.timeLimit,this.isActive=!0,console.log("✅ Countdown timer initialized and ready to start")):(this.isActive=!1,this.timeLimit=null,this.timeRemaining=0,console.log("❌ Countdown timer disabled (no time limit set)"))}start(){if(!this.isActive||this.timeLimit===null){console.log("⏱️ Timer start skipped:",{isActive:this.isActive,timeLimit:this.timeLimit});return}this.startTime=Date.now(),this.isPaused=!1,this.pausedTime=0,console.log("⏳ Countdown Timer Started:",{timeLimit:this.timeLimit,startTime:new Date(this.startTime).toLocaleTimeString(),formattedTimeLimit:this.formatTime(this.timeLimit)})}pause(){!this.isActive||this.isPaused||(this.isPaused=!0,this.pausedTime=Date.now())}resume(){if(!this.isActive||!this.isPaused)return;const e=Date.now()-this.pausedTime;this.startTime+=e,this.isPaused=!1}update(){if(!this.isActive||this.isPaused||this.timeLimit===null||this.startTime===0)return!0;const e=Date.now()-this.startTime;return this.timeRemaining=Math.max(0,this.timeLimit-Math.floor(e/1e3)),this.timeRemaining<=5&&this.timeRemaining>0&&console.log("⏱️ Timer running low:",{timeRemaining:this.timeRemaining,timeLimit:this.timeLimit,elapsed:e,isActive:this.isActive,startTime:this.startTime}),this.timeRemaining>0}addTimeBonus(e){this.timeRemaining+=e,this.timeBonus+=e}getTimeRemaining(){return this.timeRemaining}getTimeBonus(){return this.timeBonus}isTimeUp(){const e=this.isActive&&this.timeLimit!==null&&this.startTime>0&&this.timeRemaining<=0;return e&&console.log("⏰ Timer is up!",{isActive:this.isActive,timeLimit:this.timeLimit,startTime:this.startTime,timeRemaining:this.timeRemaining}),e}isWarningTime(){return this.timeRemaining<=this.warningThreshold&&this.timeRemaining>this.criticalThreshold}isCriticalTime(){return this.timeRemaining<=this.criticalThreshold}getTimeStatus(){return{remaining:this.timeRemaining,limit:this.timeLimit,isActive:this.isActive,isPaused:this.isPaused,isWarning:this.isWarningTime(),isCritical:this.isCriticalTime(),bonus:this.timeBonus}}formatTime(e){const t=Math.floor(e/60),i=e%60;return`${t}:${i.toString().padStart(2,"0")}`}getFormattedTimeRemaining(){return this.formatTime(this.timeRemaining)}getFormattedTimeLimit(){return this.formatTime(this.timeLimit)}calculateTimeBonus(e){const t=e.rows.length+e.columns.length+e.squares.length;if(t===0)return 0;let i=t*5;t>1&&(i+=(t-1)*3);const s=this.difficultyManager.getComboThreshold();return t>=s&&(i+=10),i}getTimePressureEffects(){return this.isActive?this.isCriticalTime()?{type:"critical",color:"#ff0000",intensity:1,pulse:!0}:this.isWarningTime()?{type:"warning",color:"#ff8800",intensity:.7,pulse:!1}:null:null}reset(){this.timeLimit=this.difficultyManager.getTimeLimit(),this.timeRemaining=this.timeLimit||0,this.isActive=this.timeLimit!==null&&this.timeLimit>0,this.isPaused=!1,this.startTime=0,this.pausedTime=0,this.timeBonus=0,console.log("⏱️ Timer reset:",{timeLimit:this.timeLimit,timeRemaining:this.timeRemaining,isActive:this.isActive})}disable(){this.isActive=!1,this.timeLimit=null,this.timeRemaining=0,this.startTime=0,this.pausedTime=0,this.timeBonus=0}serialize(){return{timeLimit:this.timeLimit,timeRemaining:this.timeRemaining,isActive:this.isActive,isPaused:this.isPaused,startTime:this.startTime,pausedTime:this.pausedTime,timeBonus:this.timeBonus}}deserialize(e){e&&(this.timeLimit=e.timeLimit,this.timeRemaining=e.timeRemaining,this.isActive=e.isActive,this.isPaused=e.isPaused,this.startTime=e.startTime,this.pausedTime=e.pausedTime,this.timeBonus=e.timeBonus||0,console.log("⏱️ Timer state restored:",{timeLimit:this.timeLimit,timeRemaining:this.timeRemaining,isActive:this.isActive,isPaused:this.isPaused}))}}class X{constructor(e,t){this.game=e,this.difficultyManager=t,this.container=null,this.isVisible=!1,this.confirmationDialog=new D}create(){this.container=document.createElement("div"),this.container.id="difficulty-selector",this.container.className="difficulty-selector";const e=document.createElement("div");e.className="difficulty-overlay";const t=()=>this.hide();e.addEventListener("click",t),e.addEventListener("touchstart",r=>{r.preventDefault(),t()},{passive:!1});const i=document.createElement("div");i.className="difficulty-modal";const s=document.createElement("div");s.className="difficulty-header",s.innerHTML="<h2>Select Difficulty</h2>";const o=document.createElement("div");o.className="difficulty-options",this.difficultyManager.getAvailableDifficulties().forEach(r=>{const c=this.createDifficultyOption(r);o.appendChild(c)});const a=document.createElement("button");a.className="difficulty-close",a.innerHTML="×";const l=()=>this.hide();a.addEventListener("click",l),a.addEventListener("touchstart",r=>{r.preventDefault(),l()},{passive:!1}),i.appendChild(s),i.appendChild(o),i.appendChild(a),this.container.appendChild(e),this.container.appendChild(i),document.body.appendChild(this.container),this.addStyles()}createDifficultyOption(e){const t=document.createElement("div");t.className="difficulty-option",t.dataset.difficulty=e.key,e.key==="progress"&&t.classList.add("progress-mode-option"),e.key===this.difficultyManager.getCurrentDifficulty()&&t.classList.add("selected");const i=document.createElement("div");i.className="difficulty-icon",i.innerHTML=this.getDifficultyIcon(e.key);const s=document.createElement("div");s.className="difficulty-content";const o=document.createElement("h3");o.textContent=e.name;const n=document.createElement("p");n.textContent=e.shortDescription||e.description;const a=document.createElement("div");if(a.className="difficulty-features",e.key==="easy"&&e.hintsEnabled){const u=document.createElement("span");u.className="feature hint",u.textContent="💡 Hints",a.appendChild(u)}if(e.moveLimit){const u=document.createElement("span");u.className="feature moves",u.textContent="Limited Moves",a.appendChild(u)}s.appendChild(o),s.appendChild(n),s.appendChild(a),t.appendChild(i),t.appendChild(s);let l=null,r=null,c=!1;const h=()=>{r&&(clearTimeout(r),r=null),c=!1,l=null,t.classList.remove("pressing")},d=async u=>{u.preventDefault(),await this.selectDifficulty(e.key)},f=u=>{u.preventDefault(),!c&&(c=!0,l=Date.now(),t.classList.add("pressing"),r=setTimeout(()=>{c&&(d(u),h())},10))},p=u=>{c&&(u.preventDefault(),h())};return t.addEventListener("mousedown",f),t.addEventListener("mouseup",p),t.addEventListener("mouseleave",p),t.addEventListener("touchstart",f,{passive:!1}),t.addEventListener("touchend",p,{passive:!1}),t.addEventListener("touchcancel",p,{passive:!1}),t.addEventListener("click",async u=>{u.preventDefault(),!c&&(!l||Date.now()-l<200)&&await d(u)}),t}getDifficultyIcon(e){return{easy:"😊",normal:"😐",hard:"😤",expert:"🔥",progress:"📈"}[e]||"🎮"}async selectDifficulty(e){if(console.log(`🎯 DifficultySelector: selectDifficulty called with difficulty: ${e}`),e==="progress"){this.hide(),window.location.href="progress.html";return}const t=this.difficultyManager.setDifficulty(e);console.log(`🎯 DifficultySelector: difficultyManager.setDifficulty(${e}) returned: ${t}`),this.updateSelection(e),console.log(`🎯 DifficultySelector: calling game.selectDifficulty(${e})`),this.game.selectDifficulty(e),this.hide()}updateSelection(e){this.container.querySelectorAll(".difficulty-option").forEach(i=>{i.dataset.difficulty===e?i.classList.add("selected"):i.classList.remove("selected")})}show(){this.container||this.create(),this.container.style.display="flex",this.container.style.pointerEvents="auto",this.isVisible=!0,requestAnimationFrame(()=>{this.container.classList.add("show")})}hide(){this.container&&(this.container.classList.remove("show"),this.isVisible=!1,this.container.style.pointerEvents="none",setTimeout(()=>{this.container&&this.container.parentNode&&(this.container.parentNode.removeChild(this.container),this.container=null)},300))}addStyles(){const e=document.createElement("style");e.textContent=`
            .difficulty-selector {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                z-index: 1000;
                display: none;
                align-items: center;
                justify-content: center;
                opacity: 0;
                transition: opacity 0.3s ease;
                pointer-events: none;
            }
            
            .difficulty-selector.show {
                opacity: 1;
                pointer-events: auto;
            }
            
            .difficulty-overlay {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0.7);
                backdrop-filter: blur(5px);
                pointer-events: auto;
            }
            
            .difficulty-modal {
                position: relative;
                background: var(--card-bg, var(--header-bg, white));
                border: 2px solid var(--border-color, #e0e0e0);
                border-radius: 12px;
                padding: 24px;
                max-width: 500px;
                width: 90%;
                max-height: 80vh;
                overflow-y: auto;
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
                transform: scale(0.9);
                transition: transform 0.3s ease;
            }
            
            .difficulty-selector.show .difficulty-modal {
                transform: scale(1);
            }
            
            .difficulty-header {
                text-align: center;
                margin-bottom: 24px;
            }
            
            .difficulty-header h2 {
                margin: 0;
                color: var(--text-color, #333);
                font-size: 1.5rem;
            }
            
            .difficulty-options {
                display: grid;
                gap: 12px;
            }
            
            .difficulty-option {
                display: flex;
                align-items: center;
                padding: 16px;
                border: 2px solid var(--border-color, #e0e0e0);
                border-radius: 8px;
                cursor: pointer;
                transition: all 0.2s ease;
                background: var(--card-bg, var(--header-bg, white));
            }
            
            .difficulty-option:hover {
                border-color: var(--primary-color, #007bff);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0, 123, 255, 0.2);
            }
            
            .difficulty-option.selected {
                border-color: var(--primary-color, #007bff);
                background: var(--primary-color, #007bff);
                color: white !important;
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7) !important;
            }
            
            .difficulty-option.pressing {
                transform: scale(0.98);
                opacity: 0.8;
                border-color: var(--primary-color, #007bff);
                background: var(--primary-color, #007bff);
                color: white !important;
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7) !important;
            }
            
            .difficulty-option.pressing .difficulty-content h3 {
                color: white !important;
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7) !important;
            }
            
            .difficulty-option.pressing .difficulty-content p {
                color: rgba(255, 255, 255, 0.9);
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
            }
            
            .difficulty-icon {
                font-size: 2rem;
                margin-right: 16px;
                min-width: 40px;
                text-align: center;
            }
            
            .difficulty-content {
                flex: 1;
            }
            
            .difficulty-content h3 {
                margin: 0 0 8px 0;
                color: var(--text-color, #333);
                font-size: 1.1rem;
            }
            
            .difficulty-option.selected .difficulty-content h3 {
                color: white !important;
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7) !important;
            }
            
            .difficulty-content p {
                margin: 0 0 8px 0;
                color: var(--text-muted, #666);
                font-size: 0.9rem;
                line-height: 1.4;
            }
            
            .difficulty-option.selected .difficulty-content p {
                color: rgba(255, 255, 255, 0.9);
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
            }
            
            .difficulty-features {
                display: flex;
                flex-wrap: wrap;
                gap: 6px;
            }
            
            .feature {
                padding: 4px 8px;
                border-radius: 12px;
                font-size: 0.75rem;
                font-weight: 500;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }
            
            .feature.hint {
                background: #e8f5e8;
                color: #2d5a2d;
            }
            
            .feature.undo {
                background: #fff3cd;
                color: #856404;
            }
            
            .feature.timer {
                background: #f8d7da;
                color: #721c24;
            }
            
            .feature.moves {
                background: #d1ecf1;
                color: #0c5460;
            }
            
            .difficulty-close {
                position: absolute;
                top: 12px;
                right: 12px;
                background: none;
                border: none;
                font-size: 1.5rem;
                cursor: pointer;
                color: var(--text-muted, #999);
                width: 32px;
                height: 32px;
                display: flex;
                align-items: center;
                justify-content: center;
                border-radius: 50%;
                transition: all 0.2s ease;
            }
            
            .difficulty-close:hover {
                background: var(--cell-hover, #f0f0f0);
                color: var(--text-color, #333);
            }
            
            @media (max-width: 480px) {
                .difficulty-modal {
                    padding: 16px;
                    margin: 16px;
                }
                
                .difficulty-option {
                    padding: 12px;
                }
                
                .difficulty-icon {
                    font-size: 1.5rem;
                    margin-right: 12px;
                }
            }
        `,document.head.appendChild(e)}}class Q{constructor(e,t){this.canvas=e,this.ctx=t,this.particles=[],this.isEnabled=!0,this.maxParticles=200,this.animate()}setEnabled(e){this.isEnabled=e,e||(this.particles=[])}getThemeColor(e){try{const t=getComputedStyle(document.documentElement).getPropertyValue(e).trim();if(!t)throw new Error(`Theme color variable '${e}' not found`);return t}catch(t){throw console.error(`Failed to get theme color '${e}':`,t),new Error(`Theme color '${e}' is required but not available`)}}getThemeColorWithFallback(e){try{return this.getThemeColor(e)}catch{return console.warn(`CSS variable ${e} not available, using fallback color`),{"--clear-glow-color":"#00aaff","--primary-color":"#007bff","--text-color":"#333333","--bg-color":"#ffffff"}[e]||"#00aaff"}}createSparkles(e,t,i=8){if(this.isEnabled)for(let s=0;s<i;s++)this.particles.push(new K(e,t))}createConfetti(e,t,i=20){if(this.isEnabled)for(let s=0;s<i;s++)this.particles.push(new Z(e,t))}createGlowTrail(e,t,i=null){if(!this.isEnabled)return;const s=i||this.getThemeColorWithFallback("--clear-glow-color");this.particles.push(new J(e,t,s))}createScoreNumber(e,t,i,s=null){if(!this.isEnabled)return;const o=s||this.getThemeColorWithFallback("--clear-glow-color");this.particles.push(new ee(e,t,i,o))}createLevelUpEffect(e,t){this.isEnabled&&(this.createConfetti(e,t,30),this.createSparkles(e,t,15),this.particles.push(new te(e,t)))}createEmptyGridBonusEffect(e,t){if(this.isEnabled){for(let i=0;i<20;i++)this.particles.push(new se(e,t));for(let i=0;i<15;i++)this.particles.push(new oe(e,t));this.particles.push(new ne(e,t))}}createMultiplierChainEffect(e,t,i){if(this.isEnabled){for(let s=0;s<i*3;s++)this.particles.push(new ae(e,t,i));this.particles.push(new le(e,t,i))}}createPatternBonusEffect(e,t,i,s){if(this.isEnabled){for(let o=0;o<15;o++)this.particles.push(new re(e,t,i));this.particles.push(new ce(e,t,s)),this.createPatternShapeEffect(e,t,i)}}createPatternShapeEffect(e,t,i){const o={cross:()=>this.createCrossShapeEffect(e,t),lShape:()=>this.createLShapeEffect(e,t),diamond:()=>this.createDiamondShapeEffect(e,t),spiral:()=>this.createSpiralShapeEffect(e,t),checkerboard:()=>this.createCheckerboardShapeEffect(e,t)}[i];o&&o()}createCrossShapeEffect(e,t){[{x:e,y:t},{x:e-20,y:t},{x:e+20,y:t},{x:e,y:t-20},{x:e,y:t+20}].forEach(s=>{this.particles.push(new x(s.x,s.y,"#ff6b6b"))})}createLShapeEffect(e,t){[{x:e,y:t},{x:e+15,y:t},{x:e,y:t+15}].forEach(s=>{this.particles.push(new x(s.x,s.y,"#4ecdc4"))})}createDiamondShapeEffect(e,t){[{x:e,y:t-15},{x:e+15,y:t},{x:e,y:t+15},{x:e-15,y:t}].forEach(s=>{this.particles.push(new x(s.x,s.y,"#45b7d1"))})}createSpiralShapeEffect(e,t){[{x:e,y:t},{x:e+10,y:t},{x:e+20,y:t},{x:e+20,y:t+10},{x:e+20,y:t+20},{x:e+10,y:t+20},{x:e,y:t+20},{x:e,y:t+10}].forEach(s=>{this.particles.push(new x(s.x,s.y,"#f39c12"))})}createCheckerboardShapeEffect(e,t){[{x:e-10,y:t-10},{x:e+10,y:t-10},{x:e-10,y:t+10},{x:e+10,y:t+10}].forEach(s=>{this.particles.push(new x(s.x,s.y,"#9b59b6"))})}createComboEffect(e,t,i){this.isEnabled&&(this.createSparkles(e,t,i*3),this.particles.push(new ie(e,t,i)))}update(){if(this.isEnabled){for(let e=this.particles.length-1;e>=0;e--){const t=this.particles[e];t.update(),t.isDead()&&this.particles.splice(e,1)}this.particles.length>this.maxParticles&&(this.particles=this.particles.slice(-this.maxParticles))}}render(){if(this.isEnabled){this.ctx.save();for(const e of this.particles)e.render(this.ctx);this.ctx.restore()}}animate(){this.update(),this.render(),requestAnimationFrame(()=>this.animate())}clear(){this.particles=[]}}class k{constructor(e,t){this.x=e,this.y=t,this.vx=0,this.vy=0,this.life=1,this.maxLife=1,this.size=1,this.color="#ffffff",this.alpha=1}update(){this.x+=this.vx,this.y+=this.vy,this.life-=.016,this.alpha=this.life}isDead(){return this.life<=0}render(e){}}class K extends k{constructor(e,t){super(e,t),this.vx=(Math.random()-.5)*4,this.vy=(Math.random()-.5)*4,this.maxLife=.8,this.life=this.maxLife,this.size=Math.random()*3+1,this.color=`hsl(${Math.random()*60+40}, 100%, 70%)`,this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.2}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.1}render(e){e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.rotate(this.rotation),e.fillStyle=this.color,e.fillRect(-this.size/2,-this.size/2,this.size,this.size),e.restore()}}class Z extends k{constructor(e,t){super(e,t),this.vx=(Math.random()-.5)*8,this.vy=Math.random()*-6-2,this.maxLife=2,this.life=this.maxLife,this.size=Math.random()*4+2,this.colors=["#ff6b6b","#4ecdc4","#45b7d1","#96ceb4","#feca57","#ff9ff3"],this.color=this.colors[Math.floor(Math.random()*this.colors.length)],this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.3}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.3,this.vx*=.98}render(e){e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.rotate(this.rotation),e.fillStyle=this.color,e.fillRect(-this.size/2,-this.size/2,this.size,this.size),e.restore()}}class J extends k{constructor(e,t,i){super(e,t),this.vx=(Math.random()-.5)*2,this.vy=(Math.random()-.5)*2,this.maxLife=.5,this.life=this.maxLife,this.size=Math.random()*6+3,this.color=i}update(){super.update(),this.size*=.98}render(e){e.save(),e.globalAlpha=this.alpha*.6,e.fillStyle=this.color,e.shadowColor=this.color,e.shadowBlur=10,e.beginPath(),e.arc(this.x,this.y,this.size,0,Math.PI*2),e.fill(),e.restore()}}class ee extends k{constructor(e,t,i,s){super(e,t),this.vx=0,this.vy=-2,this.maxLife=1.5,this.life=this.maxLife,this.score=i,this.color=s,this.fontSize=20}update(){super.update(),this.fontSize+=.5}render(e){e.save(),e.globalAlpha=this.alpha,e.fillStyle=this.color,e.font=`bold ${this.fontSize}px Arial`,e.textAlign="center",e.shadowColor="rgba(0, 0, 0, 0.5)",e.shadowBlur=2,e.fillText(`+${this.score}`,this.x,this.y),e.restore()}}class te extends k{constructor(e,t){super(e,t),this.vx=0,this.vy=-1,this.maxLife=2,this.life=this.maxLife,this.text="LEVEL UP!",this.color="#ffd700",this.fontSize=24}update(){super.update(),this.fontSize+=.3}render(e){e.save(),e.globalAlpha=this.alpha,e.fillStyle=this.color,e.font=`bold ${this.fontSize}px Arial`,e.textAlign="center",e.shadowColor="rgba(0, 0, 0, 0.8)",e.shadowBlur=4,e.fillText(this.text,this.x,this.y),e.restore()}}class ie extends k{constructor(e,t,i){super(e,t),this.vx=0,this.vy=-1.5,this.maxLife=1.5,this.life=this.maxLife,this.text=`${i}x COMBO!`,this.color="#ff6b6b",this.fontSize=18}update(){super.update(),this.fontSize+=.2}render(e){e.save(),e.globalAlpha=this.alpha,e.fillStyle=this.color,e.font=`bold ${this.fontSize}px Arial`,e.textAlign="center",e.shadowColor="rgba(0, 0, 0, 0.8)",e.shadowBlur=3,e.fillText(this.text,this.x,this.y),e.restore()}}class se extends k{constructor(e,t){super(e,t),this.vx=(Math.random()-.5)*6,this.vy=(Math.random()-.5)*6,this.maxLife=1.2,this.life=this.maxLife,this.size=Math.random()*4+2,this.color=`hsl(${Math.random()*40+120}, 100%, 60%)`,this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.3}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.05,this.size*=.99}render(e){e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.rotate(this.rotation),e.fillStyle=this.color,e.shadowColor=this.color,e.shadowBlur=8,e.fillRect(-this.size/2,-this.size/2,this.size,this.size),e.restore()}}class oe extends k{constructor(e,t){super(e,t),this.vx=(Math.random()-.5)*10,this.vy=Math.random()*-8-3,this.maxLife=2.5,this.life=this.maxLife,this.size=Math.random()*5+3,this.colors=["#00ff88","#00cc66","#00ffaa","#66ff99","#00ff77","#33ff88"],this.color=this.colors[Math.floor(Math.random()*this.colors.length)],this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.4}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.2,this.vx*=.98}render(e){e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.rotate(this.rotation),e.fillStyle=this.color,e.shadowColor=this.color,e.shadowBlur=6,e.fillRect(-this.size/2,-this.size/2,this.size,this.size),e.restore()}}class ne extends k{constructor(e,t){super(e,t),this.vx=0,this.vy=-1.5,this.maxLife=2,this.life=this.maxLife,this.text="EMPTY GRID BONUS!",this.color="#00ff88",this.fontSize=22}update(){super.update(),this.fontSize+=.4}render(e){e.save(),e.globalAlpha=this.alpha,e.fillStyle=this.color,e.font=`bold ${this.fontSize}px Arial`,e.textAlign="center",e.shadowColor="rgba(0, 255, 136, 0.8)",e.shadowBlur=6,e.fillText(this.text,this.x,this.y),e.restore()}}class ae extends k{constructor(e,t,i){super(e,t),this.vx=(Math.random()-.5)*8,this.vy=(Math.random()-.5)*8,this.maxLife=1.5,this.life=this.maxLife,this.size=Math.random()*4+2,this.multiplier=i;const s=["#ff6b6b","#ff8e8e","#ffa8a8","#ffc2c2"];this.color=s[Math.min(i-1,s.length-1)],this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.4}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.1,this.size*=.98}render(e){e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.rotate(this.rotation),e.fillStyle=this.color,e.shadowColor=this.color,e.shadowBlur=8,e.fillRect(-this.size/2,-this.size/2,this.size,this.size),e.restore()}}class le extends k{constructor(e,t,i){super(e,t),this.vx=0,this.vy=-2,this.maxLife=2,this.life=this.maxLife,this.text=`${i}x CHAIN!`,this.color="#ff6b6b",this.fontSize=20,this.multiplier=i}update(){super.update(),this.fontSize+=.3}render(e){e.save(),e.globalAlpha=this.alpha,e.fillStyle=this.color,e.font=`bold ${this.fontSize}px Arial`,e.textAlign="center",e.shadowColor="rgba(255, 107, 107, 0.8)",e.shadowBlur=6,e.fillText(this.text,this.x,this.y),e.restore()}}class re extends k{constructor(e,t,i){super(e,t),this.vx=(Math.random()-.5)*6,this.vy=(Math.random()-.5)*6,this.maxLife=1.2,this.life=this.maxLife,this.size=Math.random()*3+2,this.patternType=i;const s={cross:"#ff6b6b",lShape:"#4ecdc4",diamond:"#45b7d1",spiral:"#f39c12",checkerboard:"#9b59b6"};this.color=s[i]||"#ff6b6b",this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.3}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.08,this.size*=.99}render(e){e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.rotate(this.rotation),e.fillStyle=this.color,e.shadowColor=this.color,e.shadowBlur=6,e.fillRect(-this.size/2,-this.size/2,this.size,this.size),e.restore()}}class ce extends k{constructor(e,t,i){super(e,t),this.vx=0,this.vy=-1.5,this.maxLife=1.8,this.life=this.maxLife,this.text=`${i.toUpperCase()} BONUS!`,this.color="#ff6b6b",this.fontSize=18}update(){super.update(),this.fontSize+=.2}render(e){e.save(),e.globalAlpha=this.alpha,e.fillStyle=this.color,e.font=`bold ${this.fontSize}px Arial`,e.textAlign="center",e.shadowColor="rgba(255, 107, 107, 0.8)",e.shadowBlur=6,e.fillText(this.text,this.x,this.y),e.restore()}}class x extends k{constructor(e,t,i){super(e,t),this.vx=0,this.vy=0,this.maxLife=2,this.life=this.maxLife,this.size=8,this.color=i,this.rotation=0,this.rotationSpeed=.1}update(){super.update(),this.rotation+=this.rotationSpeed,this.size*=.98}render(e){e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.rotate(this.rotation),e.fillStyle=this.color,e.shadowColor=this.color,e.shadowBlur=8,e.fillRect(-this.size/2,-this.size/2,this.size,this.size),e.restore()}}class he{constructor(){this.isEnabled=!0,this.isSupported=this.checkSupport(),this.userHasInteracted=!1,this.lastVibrationTime=0,this.vibrationThrottle=100,this.vibrationPatterns={light:[10],medium:[20],heavy:[50],success:[20,10,20],error:[100],blockPlace:[15],lineClear:[30,10,30],levelUp:[50,20,50],combo:[25,10,25,10,25],speedBonus:[20,5,20],buttonClick:[5],emptyGridBonus:[40,15,40,15,40]},this.setupUserInteractionListener()}checkSupport(){return"vibrate"in navigator}setupUserInteractionListener(){const e=()=>{this.userHasInteracted=!0,document.removeEventListener("click",e),document.removeEventListener("touchstart",e),document.removeEventListener("keydown",e),document.removeEventListener("pointerdown",e)};document.addEventListener("click",e,{once:!0,passive:!0}),document.addEventListener("touchstart",e,{once:!0,passive:!0}),document.addEventListener("keydown",e,{once:!0,passive:!0}),document.addEventListener("pointerdown",e,{once:!0,passive:!0}),document.visibilityState==="visible"&&document.hasFocus&&document.hasFocus()}setEnabled(e){this.isEnabled=e}enableAfterInteraction(){this.userHasInteracted=!0}vibrate(e){if(!this.isEnabled||!this.isSupported||!this.userHasInteracted)return;const t=Date.now();if(!(t-this.lastVibrationTime<this.vibrationThrottle))try{typeof e=="string"&&(e=this.vibrationPatterns[e]||[10]),navigator.vibrate&&typeof navigator.vibrate=="function"&&(navigator.vibrate(e),this.lastVibrationTime=t)}catch(i){!i.message.includes("user hasn't tapped")&&!i.message.includes("user activation")&&console.warn("Haptic feedback error:",i)}}onBlockPlace(){this.vibrate("blockPlace")}onLineClear(){this.vibrate("lineClear")}onLevelUp(){this.vibrate("levelUp")}onCombo(e){e>=1&&this.vibrate("combo")}onSpeedBonus(){this.vibrate("speedBonus")}onEmptyGridBonus(){this.vibrate("emptyGridBonus")}onError(){this.vibrate("error")}onButtonClick(){this.vibrate("buttonClick")}onSuccess(){this.vibrate("success")}onCustom(e){this.vibrate(e)}stop(){this.isSupported&&navigator.vibrate(0)}getStatus(){return{isEnabled:this.isEnabled,isSupported:this.isSupported,userHasInteracted:this.userHasInteracted,lastVibrationTime:this.lastVibrationTime,vibrationThrottle:this.vibrationThrottle}}}class de{constructor(e,t){this.canvas=e,this.ctx=t,this.particles=new Q(e,t),this.sound=new N,this.haptic=new he,this.settings={particles:!0,sound:!1,haptic:!0,blockPlacementAnimations:!1}}updateSettings(e){this.settings={...this.settings,...e},this.particles.setEnabled(this.settings.particles),this.sound.setEnabled(this.settings.sound),this.haptic.setEnabled(this.settings.haptic)}setVolume(e){this.sound.setVolume(e)}getThemeColor(e){try{const t=getComputedStyle(document.documentElement).getPropertyValue(e).trim();if(!t)throw new Error(`Theme color variable '${e}' not found`);return t}catch(t){throw console.error(`Failed to get theme color '${e}':`,t),new Error(`Theme color '${e}' is required but not available`)}}getThemeColorWithFallback(e){try{return this.getThemeColor(e)}catch{return console.warn(`CSS variable ${e} not available, using fallback color`),{"--clear-glow-color":"#00aaff","--primary-color":"#007bff","--text-color":"#333333","--bg-color":"#ffffff"}[e]||"#00aaff"}}onBlockPlace(e,t){this.settings.blockPlacementAnimations&&this.settings.particles&&this.particles.createSparkles(e,t,6),this.settings.sound&&this.sound.play("blockPlace"),this.haptic.onBlockPlace()}onLineClear(e,t,i){const s=i.rows.length+i.columns.length+i.squares.length;this.particles.createConfetti(e,t,s*5),this.settings.sound&&this.sound.play("lineClear"),this.haptic.onLineClear()}onLevelUp(e,t){this.particles.createLevelUpEffect(e,t),this.settings.sound&&this.sound.play("levelUp"),this.haptic.onLevelUp()}onCombo(e,t,i){this.particles.createComboEffect(e,t,i),this.settings.sound&&this.sound.play("combo"),this.haptic.onCombo(i)}onScoreGain(e,t,i){const s=this.getThemeColorWithFallback("--clear-glow-color");this.particles.createScoreNumber(e,t,i,s),this.settings.sound&&this.sound.play("scoreGain")}onSpeedBonus(e,t,i){this.particles.createSpeedBonusEffect(e,t,i),this.settings.sound&&this.sound.play("speedBonus"),this.haptic.onSpeedBonus()}onError(){this.settings.sound&&this.sound.play("error"),this.haptic.onError()}onButtonClick(){this.settings.sound&&this.sound.play("buttonClick"),this.haptic.enableAfterInteraction(),setTimeout(()=>{this.haptic.onButtonClick()},10)}onBlockRotate(){this.settings.sound&&this.sound.play("blockRotate")}onBlockMove(e,t,i=null){const s=i||this.getThemeColorWithFallback("--clear-glow-color");this.particles.createGlowTrail(e,t,s)}update(){this.particles.update()}render(){this.particles.render()}clear(){this.particles.clear()}resume(){this.sound.resume()}stop(){this.particles.clear(),this.sound.stop(),this.haptic.stop()}}class me{constructor(){this.enabled=!1,this.gridCellTimestamps={},this.blockTimestamps={},this.GRID_CELL_PETRIFY_TIME=1e4,this.BLOCK_PETRIFY_TIME=3e4,this.WARNING_7S_TIME=7e3,this.WARNING_3S_TIME=3e3,this.stats={gridCellsPetrified:0,blocksPetrified:0,gridCellsThawed:0,blocksThawed:0,totalPetrificationTime:0}}setEnabled(e){const t=this.enabled;this.enabled=e,t&&!e&&this.resetAll()}isEnabled(){return this.enabled}resetAll(){this.gridCellTimestamps={},this.blockTimestamps={}}trackGridCell(e,t){if(!this.enabled)return;const i=`${e},${t}`;this.gridCellTimestamps[i]={timestamp:Date.now(),warned7s:!1,warned3s:!1,petrified:!1}}untrackGridCell(e,t){const i=`${e},${t}`;delete this.gridCellTimestamps[i]}trackBlock(e){this.enabled&&(this.blockTimestamps[e]={timestamp:Date.now(),warned7s:!1,warned3s:!1,petrified:!1})}untrackBlock(e){delete this.blockTimestamps[e]}updateBoardTracking(e){if(this.enabled)for(let t=0;t<e.length;t++)for(let i=0;i<e[t].length;i++){const s=`${t},${i}`;e[t][i]===1?this.gridCellTimestamps[s]||this.trackGridCell(t,i):this.gridCellTimestamps[s]&&this.untrackGridCell(t,i)}}updateBlockTracking(e){if(!this.enabled)return;const t=new Set(e.map(i=>i.id));e.forEach(i=>{this.blockTimestamps[i.id]||this.trackBlock(i.id)}),Object.keys(this.blockTimestamps).forEach(i=>{t.has(i)||this.untrackBlock(i)})}getGridCellState(e,t){if(!this.enabled)return{petrified:!1,warning:null,timeRemaining:1/0};const i=`${e},${t}`,s=this.gridCellTimestamps[i];if(!s)return{petrified:!1,warning:null,timeRemaining:1/0};const o=Date.now()-s.timestamp,n=this.GRID_CELL_PETRIFY_TIME-o;return o>=this.GRID_CELL_PETRIFY_TIME?(s.petrified||(s.petrified=!0,this.stats.gridCellsPetrified++),{petrified:!0,warning:null,timeRemaining:0}):n<=this.WARNING_3S_TIME?{petrified:!1,warning:"3s",timeRemaining:n}:n<=this.WARNING_7S_TIME?{petrified:!1,warning:"7s",timeRemaining:n}:{petrified:!1,warning:null,timeRemaining:n}}getBlockState(e){if(!this.enabled)return{petrified:!1,warning:null,timeRemaining:1/0};const t=this.blockTimestamps[e];if(!t)return{petrified:!1,warning:null,timeRemaining:1/0};const i=Date.now()-t.timestamp,s=this.BLOCK_PETRIFY_TIME-i;return i>=this.BLOCK_PETRIFY_TIME?(t.petrified||(t.petrified=!0,this.stats.blocksPetrified++),{petrified:!0,warning:null,timeRemaining:0}):s<=this.WARNING_3S_TIME?{petrified:!1,warning:"3s",timeRemaining:s}:s<=this.WARNING_7S_TIME?{petrified:!1,warning:"7s",timeRemaining:s}:{petrified:!1,warning:null,timeRemaining:s}}isGridCellPetrified(e,t){return this.getGridCellState(e,t).petrified}isBlockPetrified(e){return this.getBlockState(e).petrified}canClearRow(e,t){if(!this.enabled)return!0;for(let i=0;i<e[t].length;i++)if(e[t][i]===1&&this.isGridCellPetrified(t,i))return!1;return!0}canClearColumn(e,t){if(!this.enabled)return!0;for(let i=0;i<e.length;i++)if(e[i][t]===1&&this.isGridCellPetrified(i,t))return!1;return!0}canClearSquare(e,t,i){if(!this.enabled)return!0;const s=t*3,o=i*3;for(let n=s;n<s+3;n++)for(let a=o;a<o+3;a++)if(e[n][a]===1&&this.isGridCellPetrified(n,a))return!1;return!0}thawAll(){this.enabled&&(Object.keys(this.gridCellTimestamps).forEach(e=>{const t=this.gridCellTimestamps[e];t.petrified&&this.stats.gridCellsThawed++,t.petrified=!1,t.timestamp=Date.now(),t.warned7s=!1,t.warned3s=!1}),Object.keys(this.blockTimestamps).forEach(e=>{const t=this.blockTimestamps[e];t.petrified&&this.stats.blocksThawed++,t.petrified=!1,t.timestamp=Date.now(),t.warned7s=!1,t.warned3s=!1}))}getPetrifiedGridCells(){const e=[];return Object.keys(this.gridCellTimestamps).forEach(t=>{const[i,s]=t.split(",").map(Number);this.isGridCellPetrified(i,s)&&e.push({row:i,col:s})}),e}getPetrifiedBlocks(){return Object.keys(this.blockTimestamps).filter(e=>this.isBlockPetrified(e))}getStats(){return{...this.stats,currentPetrifiedCells:this.getPetrifiedGridCells().length,currentPetrifiedBlocks:this.getPetrifiedBlocks().length}}resetStats(){this.stats={gridCellsPetrified:0,blocksPetrified:0,gridCellsThawed:0,blocksThawed:0,totalPetrificationTime:0}}serialize(){return{enabled:this.enabled,gridCellTimestamps:this.gridCellTimestamps,blockTimestamps:this.blockTimestamps,stats:this.stats}}deserialize(e){e&&(this.enabled=e.enabled||!1,this.gridCellTimestamps=e.gridCellTimestamps||{},this.blockTimestamps=e.blockTimestamps||{},this.stats=e.stats||{gridCellsPetrified:0,blocksPetrified:0,gridCellsThawed:0,blocksThawed:0,totalPetrificationTime:0})}}class ue{constructor(){this.enabled=!1,this.intensity=0,this.deadPixels=new Set,this.stats={deadPixelsGenerated:0,gamesPlayedWithDeadPixels:0}}setEnabled(e){const t=this.enabled;this.enabled=e,t&&!e&&this.clearDeadPixels()}isEnabled(){return this.enabled}setIntensity(e){this.intensity=Math.max(0,Math.min(5,e))}getIntensity(){return this.intensity}generateDeadPixels(e){if(!this.enabled||this.intensity===0){this.deadPixels.clear();return}this.deadPixels.clear();const t=this.intensity*3,i=Math.floor(Math.random()*(this.intensity+1)),s=t+i,o=e*e,n=[];for(let l=0;l<e;l++)for(let r=0;r<e;r++)n.push({row:l,col:r});for(let l=n.length-1;l>0;l--){const r=Math.floor(Math.random()*(l+1));[n[l],n[r]]=[n[r],n[l]]}const a=Math.min(s,o);for(let l=0;l<a;l++){const{row:r,col:c}=n[l],h=`${r},${c}`;this.deadPixels.add(h)}this.stats.deadPixelsGenerated+=a,a>0&&this.stats.gamesPlayedWithDeadPixels++}clearDeadPixels(){this.deadPixels.clear()}isDeadPixel(e,t){if(!this.enabled)return!1;const i=`${e},${t}`;return this.deadPixels.has(i)}getDeadPixels(){const e=[];return this.deadPixels.forEach(t=>{const[i,s]=t.split(",").map(Number);e.push({row:i,col:s})}),e}canPlaceBlockWithDeadPixels(e,t,i,s){if(!this.enabled)return!0;for(let o=0;o<e.shape.length;o++)for(let n=0;n<e.shape[o].length;n++)if(e.shape[o][n]===1){const a=t+o,l=i+n;if(this.isDeadPixel(a,l))return!1}return!0}getStats(){return{...this.stats,currentDeadPixels:this.deadPixels.size}}resetStats(){this.stats={deadPixelsGenerated:0,gamesPlayedWithDeadPixels:0}}serialize(){return{enabled:this.enabled,intensity:this.intensity,deadPixels:Array.from(this.deadPixels),stats:this.stats}}deserialize(e){e&&(this.enabled=e.enabled||!1,this.intensity=e.intensity||0,this.deadPixels=new Set(e.deadPixels||[]),this.stats=e.stats||{deadPixelsGenerated:0,gamesPlayedWithDeadPixels:0})}}class fe{constructor(e,t){this.game=e,this.levelManager=t,this.currentDifficulty="normal",this.selectedLevel=1,this.initializeUI()}initializeUI(){this.createLevelSelectionModal(),this.createLevelCompletionModal(),this.createProgressDisplay()}createLevelSelectionModal(){const e=document.createElement("div");e.id="progress-mode-modal",e.className="modal",e.style.display="none",e.innerHTML=`
            <div class="modal-content progress-mode-content">
                <div class="modal-header">
                    <h2>Progress Mode</h2>
                    <span class="close" id="close-progress-modal">&times;</span>
                </div>
                
                <div class="progress-mode-body">
                    <div class="difficulty-selector">
                        <h3>Select Difficulty</h3>
                        <div class="difficulty-options">
                            <button class="difficulty-option" data-difficulty="easy">Easy</button>
                            <button class="difficulty-option" data-difficulty="normal">Normal</button>
                            <button class="difficulty-option" data-difficulty="hard">Hard</button>
                            <button class="difficulty-option" data-difficulty="expert">Expert</button>
                        </div>
                    </div>
                    
                    <div class="level-grid">
                        <h3>Select Level</h3>
                        <div class="levels-container" id="levels-container">
                            <!-- Levels will be populated dynamically -->
                        </div>
                    </div>
                    
                    <div class="level-info" id="level-info">
                        <h4 id="level-name">Select a level</h4>
                        <p id="level-description">Choose a level to see details</p>
                        <div class="level-objectives">
                            <h5>Objectives:</h5>
                            <ul id="level-objectives-list"></ul>
                        </div>
                        <div class="level-rewards">
                            <h5>Rewards:</h5>
                            <ul id="level-rewards-list"></ul>
                        </div>
                    </div>
                    
                    <div class="progress-stats">
                        <h4>Progress Statistics</h4>
                        <div class="stats-grid">
                            <div class="stat-item">
                                <span class="stat-label">Completed:</span>
                                <span class="stat-value" id="completed-count">0/30</span>
                            </div>
                            <div class="stat-item">
                                <span class="stat-label">Achievements:</span>
                                <span class="stat-value" id="achievements-count">0</span>
                            </div>
                            <div class="stat-item">
                                <span class="stat-label">Rewards:</span>
                                <span class="stat-value" id="rewards-count">0</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="modal-actions">
                        <button id="start-level-btn" class="btn btn-primary" disabled>Start Level</button>
                        <button id="cancel-progress-btn" class="btn btn-secondary">Cancel</button>
                    </div>
                </div>
            </div>
        `,document.body.appendChild(e),this.setupLevelSelectionEvents()}createLevelCompletionModal(){const e=document.createElement("div");e.id="level-completion-modal",e.className="modal",e.style.display="none",e.innerHTML=`
            <div class="modal-content level-completion-content">
                <div class="modal-header">
                    <h2>Level Complete!</h2>
                </div>
                
                <div class="completion-body">
                    <div class="completion-stats">
                        <div class="stat-row">
                            <span class="stat-label">Score:</span>
                            <span class="stat-value" id="completion-score">0</span>
                        </div>
                        <div class="stat-row">
                            <span class="stat-label">Moves Used:</span>
                            <span class="stat-value" id="completion-moves">0</span>
                        </div>
                        <div class="stat-row">
                            <span class="stat-label">Time:</span>
                            <span class="stat-value" id="completion-time">0s</span>
                        </div>
                        <div class="stat-row">
                            <span class="stat-label">Combos:</span>
                            <span class="stat-value" id="completion-combos">0</span>
                        </div>
                    </div>
                    
                    <div class="achievements-earned" id="achievements-earned">
                        <h4>Achievements Earned:</h4>
                        <ul id="achievements-list"></ul>
                    </div>
                    
                    <div class="rewards-earned" id="rewards-earned">
                        <h4>Rewards Unlocked:</h4>
                        <ul id="rewards-list"></ul>
                    </div>
                    
                    <div class="next-level-info" id="next-level-info">
                        <h4>Next Level:</h4>
                        <p id="next-level-description"></p>
                    </div>
                </div>
                
                <div class="modal-actions">
                    <button id="next-level-btn" class="btn btn-primary">Next Level</button>
                    <button id="level-select-btn" class="btn btn-secondary">Level Select</button>
                    <button id="close-completion-btn" class="btn btn-secondary">Close</button>
                </div>
            </div>
        `,document.body.appendChild(e),this.setupLevelCompletionEvents()}createProgressDisplay(){const e=document.createElement("div");e.id="progress-mode-display",e.className="progress-mode-display",e.style.display="none",e.innerHTML=`
            <div class="progress-info">
                <div class="level-info">
                    <span class="level-label">Level:</span>
                    <span class="level-value" id="current-level-display">1</span>
                </div>
                <div class="objectives-info">
                    <div class="objective-item">
                        <span class="objective-label">Score:</span>
                        <span class="objective-value" id="score-progress">0/100</span>
                    </div>
                    <div class="objective-item">
                        <span class="objective-label">Moves:</span>
                        <span class="objective-value" id="moves-progress">0/40</span>
                    </div>
                    <div class="objective-item">
                        <span class="objective-label">Combos:</span>
                        <span class="objective-value" id="combos-progress">0/3</span>
                    </div>
                </div>
            </div>
        `;const t=document.querySelector(".utility-bar")||document.querySelector(".game-ui");t?t.appendChild(e):document.body.appendChild(e)}setupLevelSelectionEvents(){const e=document.getElementById("progress-mode-modal"),t=document.getElementById("close-progress-modal"),i=document.getElementById("cancel-progress-btn"),s=document.getElementById("start-level-btn");t.addEventListener("click",()=>this.hideLevelSelection()),i.addEventListener("click",()=>this.hideLevelSelection()),document.querySelectorAll(".difficulty-option").forEach(n=>{n.addEventListener("click",a=>{this.selectDifficulty(a.target.dataset.difficulty)})}),s.addEventListener("click",()=>{this.startSelectedLevel()}),e.addEventListener("click",n=>{n.target===e&&this.hideLevelSelection()})}setupLevelCompletionEvents(){const e=document.getElementById("level-completion-modal"),t=document.getElementById("next-level-btn"),i=document.getElementById("level-select-btn"),s=document.getElementById("close-completion-btn");t.addEventListener("click",()=>{this.startNextLevel()}),i.addEventListener("click",()=>{this.hideLevelCompletion(),this.showLevelSelection()}),s.addEventListener("click",()=>{this.hideLevelCompletion()}),e.addEventListener("click",o=>{o.target===e&&this.hideLevelCompletion()})}showLevelSelection(){const e=document.getElementById("progress-mode-modal");e.style.display="block",this.updateLevelGrid(),this.updateProgressStats()}hideLevelSelection(){const e=document.getElementById("progress-mode-modal");e.style.display="none"}showLevelCompletion(e){const t=document.getElementById("level-completion-modal");t.style.display="block",this.updateCompletionDisplay(e)}hideLevelCompletion(){const e=document.getElementById("level-completion-modal");e.style.display="none"}selectDifficulty(e){this.currentDifficulty=e,document.querySelectorAll(".difficulty-option").forEach(t=>{t.classList.remove("active")}),document.querySelector(`[data-difficulty="${e}"]`).classList.add("active"),this.updateLevelGrid()}selectLevel(e){this.selectedLevel=e,this.updateLevelInfo(),this.updateStartButton()}updateLevelGrid(){const e=document.getElementById("levels-container");e.innerHTML="";for(let t=1;t<=30;t++){this.levelManager.getLevelDefinition(t,this.currentDifficulty);const i=this.levelManager.canAccessLevel(t),s=this.levelManager.completedLevels.has(t),o=document.createElement("div");o.className=`level-item ${i?"accessible":"locked"} ${s?"completed":""}`,o.dataset.level=t,o.innerHTML=`
                <div class="level-number">${t}</div>
                <div class="level-status">
                    ${s?"✓":i?"○":"🔒"}
                </div>
            `,i&&o.addEventListener("click",()=>this.selectLevel(t)),e.appendChild(o)}}updateLevelInfo(){const e=this.levelManager.getLevelDefinition(this.selectedLevel,this.currentDifficulty);document.getElementById("level-name").textContent=e.name,document.getElementById("level-description").textContent=e.description;const t=document.getElementById("level-objectives-list");t.innerHTML=`
            <li>Score: ${e.objectives.scoreTarget} points</li>
            <li>Max moves: ${e.objectives.maxMoves}</li>
            ${e.objectives.timeLimit?`<li>Time limit: ${Math.floor(e.objectives.timeLimit/60)}:${(e.objectives.timeLimit%60).toString().padStart(2,"0")}</li>`:""}
            ${e.objectives.comboRequirement>0?`<li>Combos: ${e.objectives.comboRequirement}</li>`:""}
        `;const i=document.getElementById("level-rewards-list");i.innerHTML=`
            <li>Primary: ${e.rewards.primary}</li>
            <li>Secondary: ${e.rewards.secondary}</li>
        `}updateStartButton(){const e=document.getElementById("start-level-btn"),t=this.levelManager.canAccessLevel(this.selectedLevel);e.disabled=!t,e.textContent=t?"Start Level":"Locked"}updateProgressStats(){const e=this.levelManager.getProgressStats();document.getElementById("completed-count").textContent=`${e.completedLevels}/${e.totalLevels}`,document.getElementById("achievements-count").textContent=e.achievements,document.getElementById("rewards-count").textContent=e.unlockedRewards}updateCompletionDisplay(e){document.getElementById("completion-score").textContent=e.score,document.getElementById("completion-moves").textContent=e.movesUsed,document.getElementById("completion-time").textContent=`${Math.floor(e.timeUsed/60)}:${(e.timeUsed%60).toString().padStart(2,"0")}`,document.getElementById("completion-combos").textContent=e.combos;const t=document.getElementById("achievements-list");t.innerHTML="",e.achievements&&e.achievements.length>0?e.achievements.forEach(o=>{const n=document.createElement("li");n.textContent=o.type,t.appendChild(n)}):t.innerHTML="<li>No new achievements</li>";const i=document.getElementById("rewards-list");i.innerHTML="",e.rewards&&e.rewards.length>0?e.rewards.forEach(o=>{const n=document.createElement("li");n.textContent=o,i.appendChild(n)}):i.innerHTML="<li>No new rewards</li>";const s=this.selectedLevel+1;if(s<=30){const o=this.levelManager.getLevelDefinition(s,this.currentDifficulty);document.getElementById("next-level-description").textContent=o.description}else document.getElementById("next-level-info").style.display="none"}startSelectedLevel(){this.hideLevelSelection(),this.showProgressDisplay(),this.game.startProgressModeLevel(this.selectedLevel,this.currentDifficulty)}startNextLevel(){const e=this.selectedLevel+1;e<=30?(this.selectedLevel=e,this.hideLevelCompletion(),this.showProgressDisplay(),this.game.startProgressModeLevel(e,this.currentDifficulty)):this.hideLevelCompletion()}showProgressDisplay(){const e=document.getElementById("progress-mode-display");e.style.display="block",this.updateProgressDisplay()}hideProgressDisplay(){const e=document.getElementById("progress-mode-display");e.style.display="none"}updateProgressDisplay(){var t;const e=this.levelManager.getLevelDefinition(this.selectedLevel,this.currentDifficulty);document.getElementById("current-level-display").textContent=this.selectedLevel,document.getElementById("score-progress").textContent=`${this.game.score}/${e.objectives.scoreTarget}`,document.getElementById("moves-progress").textContent=`${this.game.moveCount}/${e.objectives.maxMoves}`,document.getElementById("combos-progress").textContent=`${((t=this.game.scoringSystem)==null?void 0:t.totalCombos)||0}/${e.objectives.comboRequirement}`}onLevelCompleted(e){this.hideProgressDisplay(),this.showLevelCompletion(e)}}class pe{constructor(){var e;console.log("BlockdokuGame constructor called"),this.canvas=document.getElementById("game-board"),this.ctx=this.canvas.getContext("2d"),this.boardSize=9,this.cellSize=0,console.log("About to initialize board...");try{this.board=this.initializeBoard(),console.log("Board initialized in constructor:",this.board?"SUCCESS":"FAILED","Length:",(e=this.board)==null?void 0:e.length),console.log("Board contents:",this.board)}catch(t){console.error("ERROR during board initialization:",t),this.board=null}this.score=0,this.level=1,this.currentTheme="light",this.previousScore=0,this.previousLevel=1,this.previousCombo=0,this.previousTotalCombos=0,this.pendingClears=null,this.notificationQueue=[],this.currentNotification=null,this.notificationTimeout=null,this.lastNotifiedMultiplier=0,this.difficulty="normal",this.enableHints=!1,this.enableTimer=!1,this.moveLimit=null,this.timeLimit=null,this.blockManager=new H,this.petrificationManager=new me,this.deadPixelsManager=new ue,this.blockPalette=new F("block-palette",this.blockManager,this),this.storage=new $,this.difficultySettings=new G(this.storage),this.difficultyManager=new O(this),this.scoringSystem=new U(this.petrificationManager,this.difficultyManager,this),this.pwaInstallManager=new R,this.offlineManager=new A,this.hintSystem=new Y(this,this.difficultyManager),this.timerSystem=new V(this.difficultyManager),this.difficultySelector=new X(this,this.difficultyManager),this.effectsManager=new de(this.canvas,this.ctx),this.confirmationDialog=new D,this.preGameOverPending=!1,this.levelManager=new q(this,this.storage),this.progressModeUI=new fe(this,this.levelManager),this.gameMode="classic",this.currentProgressLevel=null,this.selectedBlock=null,this.previewPosition=null,this.isGameOver=!1,this.isInitialized=!1,this.comboModeActive="cumulative",this.comboModesUsed=new Set,this.speedTimerStartTime=null,this.speedTimerInterval=null,this.speedDisplayMode="timer",this.firstPiecePlaced=!1,this.isDragging=!1,this.dragStartPosition=null,this.dragCurrentPosition=null,this.dragBlockElement=null;try{console.log("About to load settings..."),this.loadSettings(),console.log("Settings loaded, setting isInitialized..."),this.isInitialized=!0,console.log("About to call init()..."),this.init(),console.log("Init completed, setting up resize handler..."),this.setupResizeHandler(),console.log("Constructor completed successfully")}catch(t){console.error("ERROR in constructor after board init:",t)}window.addEventListener("focus",()=>{this.loadSettings(),this.updateDifficultyButton(),this.renderPersonalBests(),this.isGameOver||setTimeout(()=>{this.loadGameState(),this.draw()},10)}),window.addEventListener("storage",t=>{(t.key==="blockdoku-settings"||t.key==="blockdoku_settings")&&(this.loadSettings(),this.updateDifficultyButton(),this.updateHintControls(),this.renderPersonalBests(),this.isGameOver||setTimeout(()=>{this.loadGameState(),this.draw()},10))})}resizeCanvas(){const e=this.canvas.parentElement;if(!e)return;const t=e.getBoundingClientRect(),i=Math.min(t.width,t.height);this.cellSize=Math.floor(i/this.boardSize),this.cellSize*this.boardSize,this.canvas.width=i,this.canvas.height=i,this.canvas.style.width=i+"px",this.canvas.style.height=i+"px",this.actualCellSize=i/this.boardSize,this.gridCellSize=this.cellSize,this.mouseCellSize=this.actualCellSize,this.ctx.imageSmoothingEnabled=!1,this.ctx.lineCap="square",this.ctx.lineJoin="miter"}initializeBoard(){console.log("initializeBoard called, boardSize:",this.boardSize);const e=[];for(let t=0;t<this.boardSize;t++){e[t]=[];for(let i=0;i<this.boardSize;i++)e[t][i]=0}return console.log("initializeBoard created board with length:",e.length),e}setupResizeHandler(){window.addEventListener("resize",()=>{this.resizeCanvas(),requestAnimationFrame(()=>{this.drawBoard(),this.blockPalette&&this.currentBlocks&&this.currentBlocks.length>0&&this.blockPalette.updateBlocks(this.currentBlocks)})})}init(){var e;console.log("Game init() called"),console.log("Board state at start of init():",this.board?"VALID":"UNDEFINED","Length:",(e=this.board)==null?void 0:e.length),this.setupEventListeners(),this.registerServiceWorker(),this.handleProgressModeURL(),this.blockPalette&&this.blockPalette.render(),this.loadGameState(),setTimeout(()=>{!this.blockManager.currentBlocks||this.blockManager.currentBlocks.length===0?(console.log("Generating initial blocks after DOM is ready"),this.generateNewBlocks()):console.log("Blocks already loaded from saved state:",this.blockManager.currentBlocks.length)},50),setTimeout(()=>{(!this.blockManager.currentBlocks||this.blockManager.currentBlocks.length===0)&&(console.log("Fallback: Generating blocks after 200ms delay"),this.generateNewBlocks())},200),this.timerSystem.initialize(),setTimeout(()=>{this.resizeCanvas(),requestAnimationFrame(()=>{this.drawBoard(),this.updateUI(),this.renderPersonalBests()})},100),this.isInitialized=!0,this.startGameLoop(),console.log("About to initialize PWA managers..."),this.initializePWAManagers().then(()=>{console.log("PWA managers initialization completed")}).catch(t=>{console.error("PWA managers initialization failed:",t)}),this.updateDifficultyButton(),this.renderPersonalBests(),this.updateUtilityBarState(),this.blockPalette.setPieceTimeoutCallback(t=>{this.handlePieceTimeout(t)})}async registerServiceWorker(){if("serviceWorker"in navigator)try{if(window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1"){console.log("PWA: Skipping Service Worker registration in development mode");return}const t=await navigator.serviceWorker.register("./sw.js");console.log("PWA: Service Worker registered successfully",t),t.addEventListener("updatefound",()=>{console.log("PWA: Service Worker update found")})}catch(e){console.log("PWA: Service Worker registration failed (this is normal in development mode)",e.message)}}async initializePWAManagers(){try{console.log("Initializing PWA managers...");const e=await L(()=>import("./confirmation-dialog-BCUkn7Jw.js").then(i=>i.i),[],import.meta.url),t=await L(()=>Promise.resolve().then(()=>_),void 0,import.meta.url);this.pwaInstallManager=new e.PWAInstallManager,this.offlineManager=new t.OfflineManager,console.log("PWA managers initialized successfully"),console.log("PWAInstallManager:",this.pwaInstallManager),console.log("OfflineManager:",this.offlineManager)}catch(e){console.error("Error initializing PWA managers:",e),this.pwaInstallManager=null,this.offlineManager=null}}startGameLoop(){const e=()=>{this.update(),this.draw(),requestAnimationFrame(e)};e()}update(){this.isGameOver||(this.effectsManager.update(),this.hintSystem&&this.hintSystem.update(16),this.timerSystem&&(!this.timerSystem.update(16)&&this.timerSystem.isTimeUp()&&this.isInitialized&&(console.log("⏰ Timer expired, triggering game over"),this.handleTimeUp()),this.updateTimerDisplay()),this.isInitialized&&this.blockManager&&this.blockManager.currentBlocks&&this.blockManager.currentBlocks.length>0&&this.updatePlaceabilityIndicators())}draw(){this.meltAnimationInProgress||(this.drawBoard(),this.effectsManager.render())}setupEventListeners(){console.log("Setting up event listeners..."),this.canvas.addEventListener("click",r=>this.handleCanvasClick(r)),this.canvas.addEventListener("mousemove",r=>this.handleCanvasMouseMove(r)),this.canvas.addEventListener("mouseleave",()=>this.handleCanvasMouseLeave()),this.canvas.addEventListener("touchstart",r=>this.handleTouchStart(r),{passive:!1}),this.canvas.addEventListener("touchmove",r=>this.handleTouchMove(r),{passive:!1}),this.canvas.addEventListener("touchend",r=>this.handleTouchEnd(r),{passive:!1}),this.canvas.addEventListener("touchcancel",r=>this.handleTouchCancel(r),{passive:!1}),document.addEventListener("touchmove",r=>this.handleGlobalTouchMove(r),{passive:!1}),document.addEventListener("touchend",r=>this.handleGlobalTouchEnd(r),{passive:!1}),document.addEventListener("touchcancel",r=>this.handleGlobalTouchCancel(r),{passive:!1});const e=document.getElementById("settings-toggle");if(e){const r=()=>{this.effectsManager.onButtonClick(),console.log("Settings button clicked - navigating to settings page"),this.isGameOver||(console.log("Saving game state before navigating to settings"),this.saveGameState()),window.location.href="settings.html"};e.addEventListener("click",r),e.addEventListener("touchstart",c=>{c.preventDefault(),r()},{passive:!1})}else console.error("Settings toggle button not found!");const t=document.getElementById("game-settings-toggle");if(t){const r=()=>{this.effectsManager.onButtonClick(),console.log("Game Settings button clicked - navigating to game settings page"),window.location.href="gamesettings.html"};t.addEventListener("click",r),t.addEventListener("touchstart",c=>{c.preventDefault(),r()},{passive:!1})}else console.error("Game Settings toggle button not found!");const i=document.getElementById("new-game");if(i){const r=()=>{this.effectsManager.onButtonClick(),this.newGame()};i.addEventListener("click",r),i.addEventListener("touchstart",c=>{c.preventDefault(),r()},{passive:!1})}else console.error("New game button not found!");const s=document.getElementById("difficulty-btn");if(s){const r=()=>{this.effectsManager.onButtonClick(),this.difficultySelector.show();const c=document.querySelectorAll("#difficulty-selector");c.length>1&&c.forEach((h,d)=>{d>0&&h.parentNode&&h.parentNode.removeChild(h)})};s.addEventListener("click",r),s.addEventListener("touchstart",c=>{c.preventDefault(),r()},{passive:!1})}else console.error("Difficulty button not found!");const o=document.getElementById("hint-btn");if(console.log("Looking for hint button:",o),o){console.log("Hint button found, setting up event listeners");const r=()=>{if(console.log("Hint button clicked!"),console.log("Current difficulty:",this.difficultyManager.getCurrentDifficulty()),console.log("Hints enabled:",this.difficultyManager.isHintsEnabled()),!this.difficultyManager.isHintsEnabled()){console.warn("Hints not enabled for current difficulty");return}this.effectsManager.onButtonClick(),this.hintSystem.toggleHints()};o.addEventListener("click",r),o.addEventListener("touchstart",c=>{c.preventDefault(),r()},{passive:!1})}else console.error("Hint button not found!");const n=document.getElementById("close-high-scores");n&&n.addEventListener("click",()=>this.hideHighScores());const a=document.getElementById("close-difficulty");a&&a.addEventListener("click",()=>this.hideDifficultyModal());const l=document.getElementById("close-settings");l&&l.addEventListener("click",()=>this.hideSettingsModal()),document.querySelectorAll(".difficulty-option").forEach(r=>{r.addEventListener("click",async c=>{await this.selectDifficulty(c.currentTarget.dataset.difficulty)})}),document.getElementById("enable-hints").addEventListener("change",r=>this.toggleSetting("hints",r.target.checked)),document.getElementById("enable-timer").addEventListener("change",r=>this.toggleSetting("timer",r.target.checked)),document.querySelectorAll(".theme-option").forEach(r=>{r.addEventListener("click",c=>this.selectTheme(c.currentTarget.dataset.theme))}),document.addEventListener("blockSelected",r=>this.handleBlockSelected(r)),document.addEventListener("blockDragStart",r=>this.handleBlockDragStart(r)),window.addEventListener("message",async r=>{r.data.type==="difficultyChanged"&&await this.selectDifficulty(r.data.difficulty)}),window.addEventListener("storage",r=>{(r.key==="blockdoku-settings"||r.key==="blockdoku_settings")&&(this.loadSettings(),this.updateHintControls())}),window.addEventListener("beforeunload",()=>{console.log("beforeunload event triggered, autoSave:",this.autoSave,"isGameOver:",this.isGameOver),this.autoSave&&!this.isGameOver&&this.saveGameState()}),document.addEventListener("visibilitychange",()=>{console.log("visibilitychange event triggered, hidden:",document.hidden,"autoSave:",this.autoSave,"isGameOver:",this.isGameOver),document.hidden&&this.autoSave&&!this.isGameOver&&this.saveGameState()})}getBlockCenterOffset(e){const t=e.length,i=e[0].length;let s=0,o=0,n=0;for(let a=0;a<t;a++)for(let l=0;l<i;l++)e[a][l]===1&&(s+=a,o+=l,n++);return n===0?{row:0,col:0}:(s=Math.round(s/n),o=Math.round(o/n),{row:s,col:o})}getBlockDragOffset(e){return{row:0,col:0}}getBlockPlacementOffset(e){return this.getBlockCenterOffset(e)}handleCanvasClick(e){if(this.isGameOver||!this.selectedBlock)return;const t=this.canvas.getBoundingClientRect(),i=e.clientX-t.left,s=e.clientY-t.top,o=Math.floor(i/this.mouseCellSize),n=Math.floor(s/this.mouseCellSize),a=this.getBlockCenterOffset(this.selectedBlock.shape),l=n-a.row,r=o-a.col;this.canPlaceBlock(l,r)&&this.placeBlock(l,r)}handleCanvasMouseMove(e){if(!this.selectedBlock)return;const t=this.canvas.getBoundingClientRect(),i=e.clientX-t.left,s=e.clientY-t.top,o=Math.floor(i/this.mouseCellSize),n=Math.floor(s/this.mouseCellSize),a=this.getBlockCenterOffset(this.selectedBlock.shape),l=n-a.row,r=o-a.col;this.previewPosition={row:l,col:r},this.drawBoard()}handleCanvasMouseLeave(){this.previewPosition=null,this.drawBoard()}handleTouchStart(e){if(e.preventDefault(),this.isGameOver||!this.selectedBlock)return;const t=e.touches[0],i=this.canvas.getBoundingClientRect(),s=t.clientX-i.left,o=t.clientY-i.top;this.isDragging=!0,this.dragStartPosition={x:s,y:o},this.dragCurrentPosition={x:s,y:o},this.createDragElement();const n=Math.floor(s/this.mouseCellSize),a=Math.floor(o/this.mouseCellSize),l=this.getBlockPlacementOffset(this.selectedBlock.shape),r=a-l.row,c=n-l.col;this.previewPosition={row:r,col:c},this.drawBoard()}handleTouchMove(e){if(this.isGameOver||!this.isDragging||!this.selectedBlock)return;e.preventDefault();const t=e.touches[0],i=this.canvas.getBoundingClientRect(),s=t.clientX-i.left,o=t.clientY-i.top;this.dragCurrentPosition={x:t.clientX,y:t.clientY},this.updateDragElement(t.clientX,t.clientY);const n=Math.floor(s/this.mouseCellSize),a=Math.floor(o/this.mouseCellSize),l=this.getBlockPlacementOffset(this.selectedBlock.shape),r=a-l.row,c=n-l.col;this.previewPosition={row:r,col:c},this.drawBoard()}handleTouchEnd(e){if(e.preventDefault(),this.isGameOver||!this.isDragging||!this.selectedBlock)return;const t=e.changedTouches[0],i=this.canvas.getBoundingClientRect(),s=t.clientX-i.left,o=t.clientY-i.top,n=Math.floor(s/this.mouseCellSize),a=Math.floor(o/this.mouseCellSize),l=this.getBlockPlacementOffset(this.selectedBlock.shape),r=a-l.row,c=n-l.col;this.canPlaceBlock(r,c)?this.placeBlock(r,c):this.effectsManager.onError(),this.cleanupDrag()}handleTouchCancel(e){e.cancelable&&e.preventDefault(),this.cleanupDrag()}handleGlobalTouchMove(e){if(this.isGameOver||!this.isDragging||!this.selectedBlock)return;e.preventDefault();const t=e.touches[0];this.dragCurrentPosition={x:t.clientX,y:t.clientY},this.updateDragElement(t.clientX,t.clientY);const i=this.canvas.getBoundingClientRect(),s=t.clientX-i.left,a=t.clientY-i.top-2.5*this.mouseCellSize,l=Math.floor(s/this.mouseCellSize),r=Math.floor(a/this.mouseCellSize),c=this.getBlockPlacementOffset(this.selectedBlock.shape),h=r-c.row,d=l-c.col,f=d*this.mouseCellSize,p=h*this.mouseCellSize;f>=0&&f<=i.width&&p>=0&&p<=i.height?(this.previewPosition={row:h,col:d},this.drawBoard()):(this.previewPosition=null,this.drawBoard())}handleGlobalTouchEnd(e){if(this.isGameOver||!this.isDragging||!this.selectedBlock)return;e.preventDefault();const t=e.changedTouches[0],i=this.canvas.getBoundingClientRect(),s=t.clientX-i.left,a=t.clientY-i.top-2.5*this.mouseCellSize,l=Math.floor(s/this.mouseCellSize),r=Math.floor(a/this.mouseCellSize),c=this.getBlockPlacementOffset(this.selectedBlock.shape),h=r-c.row,d=l-c.col,f=d*this.mouseCellSize,p=h*this.mouseCellSize;f>=0&&f<=i.width&&p>=0&&p<=i.height&&(this.canPlaceBlock(h,d)?this.placeBlock(h,d):this.effectsManager.onError()),this.cleanupDrag()}handleGlobalTouchCancel(e){e.cancelable&&e.preventDefault(),this.cleanupDrag()}createDragElement(){this.dragBlockElement&&this.dragBlockElement.remove(),this.dragBlockElement=null}updateDragElement(e,t){}drawBlockOnCanvas(e,t,i){const s=i/Math.max(t.shape.length,t.shape[0].length);e.fillStyle=t.color,e.strokeStyle=this.darkenColor(t.color),e.lineWidth=1;for(let o=0;o<t.shape.length;o++)for(let n=0;n<t.shape[o].length;n++)if(t.shape[o][n]===1){const a=n*s,l=o*s;e.fillRect(a,l,s,s),e.strokeRect(a,l,s,s)}}darkenColor(e){const t=e.replace("#",""),i=Math.max(0,parseInt(t.substr(0,2),16)-30),s=Math.max(0,parseInt(t.substr(2,2),16)-30),o=Math.max(0,parseInt(t.substr(4,2),16)-30);return`#${i.toString(16).padStart(2,"0")}${s.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}`}getThemeColor(e){try{const t=getComputedStyle(document.documentElement).getPropertyValue(e).trim();if(!t)throw new Error(`Theme color variable '${e}' not found`);return t}catch{throw new Error(`Theme color '${e}' is required but not available`)}}getClearGlowColor(){try{return this.getThemeColor("--clear-glow-color")}catch{return{light:"#00ff00",dark:"#ff4444",wood:"#00aaff"}[this.currentTheme]||"#00ff00"}}verifyThemeLoaded(){getComputedStyle(document.documentElement).getPropertyValue("--clear-glow-color").trim()?console.log(`✅ Theme CSS ready for ${this.currentTheme}`):(console.log(`Theme CSS still loading for ${this.currentTheme}, fallback colors active`),setTimeout(()=>{getComputedStyle(document.documentElement).getPropertyValue("--clear-glow-color").trim()?console.log(`✅ Theme CSS fully loaded for ${this.currentTheme}`):console.warn(`⚠️ Theme CSS failed to load properly for ${this.currentTheme}`)},100))}cleanupDrag(){this.isDragging=!1,this.dragStartPosition=null,this.dragCurrentPosition=null,this.previewPosition=null,this.dragBlockElement&&(this.dragBlockElement.remove(),this.dragBlockElement=null),this.drawBoard()}handleBlockSelected(e){this.selectedBlock=e.detail.block,this.previewPosition=null,this.drawBoard()}handleBlockDragStart(e){const{block:t,input:i}=e.detail;this.selectedBlock=t,this.isDragging=!0,this.dragStartPosition={x:i.clientX,y:i.clientY},this.dragCurrentPosition={x:i.clientX,y:i.clientY},this.createDragElement();const s=this.canvas.getBoundingClientRect(),o=i.clientX-s.left,n=i.clientY-s.top,a=Math.floor(o/this.mouseCellSize),l=Math.floor(n/this.mouseCellSize),r=this.getBlockPlacementOffset(t.shape),c=l-r.row,h=a-r.col;this.previewPosition={row:c,col:h},this.drawBoard()}canPlaceBlock(e,t){return this.selectedBlock?(this.board||(console.error("canPlaceBlock: Board is undefined! Reinitializing..."),this.board=this.initializeBoard(),this.updatePlaceabilityIndicators()),this.selectedBlock.isMagic&&this.selectedBlock.magicType==="ghost"?this.blockManager.isWithinBounds(this.selectedBlock,e,t,this.board):this.blockManager.canPlaceBlock(this.selectedBlock,e,t,this.board)?this.deadPixelsManager&&this.deadPixelsManager.isEnabled()?this.deadPixelsManager.canPlaceBlockWithDeadPixels(this.selectedBlock,e,t,this.board):!0:!1):!1}generateNewBlocks(){var s,o;const e=((s=this.settings)==null?void 0:s.magicBlocksFrequency)||1,t=((o=this.settings)==null?void 0:o.wildShapesFrequency)||1,i=this.blockManager.generateRandomBlocks(3,"all",this.difficultyManager,this.enableMagicBlocks,this.enableWildShapes,e,t);this.blockPalette.updateBlocks(i),this.updatePlaceabilityIndicators(),this.autoSelectNextBlock()}autoSelectNextBlock(){if(this.blockManager.currentBlocks.length>0){const e=this.blockManager.currentBlocks[0];this.selectedBlock=e,this.blockPalette.selectBlockById(e.id)}else this.selectedBlock=null}toggleCell(e,t){this.board[e][t]=this.board[e][t]===0?1:0}drawBoard(){if(this.cellSize===0||this.canvas.width===0)return;const e=this.ctx,t=this.actualCellSize||this.cellSize;e.clearRect(0,0,this.canvas.width,this.canvas.height),e.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--board-bg"),e.fillRect(0,0,this.canvas.width,this.canvas.height),e.strokeStyle=getComputedStyle(document.documentElement).getPropertyValue("--grid-line"),e.lineWidth=1;const i=this.canvas.width,s=this.canvas.height;for(let o=0;o<=this.boardSize;o++){const n=Math.round(o*t);e.beginPath(),e.moveTo(n,0),e.lineTo(n,s),e.stroke()}for(let o=0;o<=this.boardSize;o++){const n=Math.round(o*t);e.beginPath(),e.moveTo(0,n),e.lineTo(i,n),e.stroke()}e.lineWidth=2;for(let o=0;o<=3;o++){const n=Math.round(o*3*t),a=Math.round(o*3*t);e.beginPath(),e.moveTo(n,0),e.lineTo(n,s),e.stroke(),e.beginPath(),e.moveTo(0,a),e.lineTo(i,a),e.stroke()}if(!this.board||!Array.isArray(this.board)){if(console.error("EMERGENCY: drawBoard - Board is not initialized properly, reinitializing..."),this.board=this.initializeBoard(),!this.board){console.error("FATAL: Could not initialize board in drawBoard");return}this.updatePlaceabilityIndicators()}if(this.deadPixelsManager&&this.deadPixelsManager.isEnabled()){const o=this.deadPixelsManager.getDeadPixels(),n=getComputedStyle(document.documentElement).getPropertyValue("--board-bg").trim();o.forEach(({row:a,col:l})=>{const r=Math.round(l*t)+1,c=Math.round(a*t)+1,h=Math.round(t)-2;e.fillStyle=n,e.fillRect(r,c,h,h),e.save(),e.strokeStyle="rgba(128, 128, 128, 0.3)",e.lineWidth=1,e.beginPath(),e.moveTo(r,c),e.lineTo(r+h,c+h),e.moveTo(r+h,c),e.lineTo(r,c+h),e.stroke(),e.restore()})}e.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--block-color");for(let o=0;o<this.boardSize;o++){if(!this.board[o]||!Array.isArray(this.board[o])){console.warn(`drawBoard: Board row ${o} is not initialized properly`);continue}for(let n=0;n<this.boardSize;n++){const a=this.deadPixelsManager&&this.deadPixelsManager.isDeadPixel(o,n);if(this.board[o][n]===1&&!a){const l=Math.round(n*t)+1,r=Math.round(o*t)+1,c=Math.round(t)-2,h=this.petrificationManager.getGridCellState(o,n);if(h.petrified)e.fillStyle="#404040";else if(h.warning==="3s"){const d=Math.sin(Date.now()/150)*.5+.5;e.fillStyle=`rgba(255, 100, 100, ${.5+d*.5})`}else if(h.warning==="7s"){const d=Math.sin(Date.now()/1e3)*.3+.7;e.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--block-color"),e.globalAlpha=d}else e.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--block-color"),e.globalAlpha=1;if(e.fillRect(l,r,c,c),e.globalAlpha=1,e.strokeStyle=h.petrified?"#202020":getComputedStyle(document.documentElement).getPropertyValue("--block-border"),e.lineWidth=h.petrified?2:1,e.strokeRect(l,r,c,c),h.petrified){e.save(),e.strokeStyle="rgba(150, 200, 255, 0.3)",e.lineWidth=1;for(let d=0;d<3;d++)e.beginPath(),e.moveTo(l+d*(c/3),r),e.lineTo(l,r+d*(c/3)),e.stroke(),e.beginPath(),e.moveTo(l+c,r+d*(c/3)),e.lineTo(l+d*(c/3),r+c),e.stroke();e.restore()}}}}if(this.selectedBlock&&this.previewPosition&&(this.drawPreviewBlock(),this.difficulty==="easy"||this.difficulty==="normal")){const o=this.previewPosition.row,n=this.previewPosition.col;if(this.canPlaceBlock(o,n)){const a=this.blockManager.placeBlock(this.selectedBlock,o,n,this.board),l=this.scoringSystem.checkForCompletedLines(a);(l.rows.length||l.columns.length||l.squares.length)&&this.drawClearingBlockGlow(l,{subtle:!0})}}this.difficultyManager.isHintsEnabled()&&this.hintSystem.drawHints(e),this.pendingClears&&this.drawClearingBlockGlow(this.pendingClears),this.drawClearNotification()}toggleTheme(){const e=["light","dark","wood"],i=(e.indexOf(this.currentTheme)+1)%e.length;this.applyTheme(e[i]),this.drawBoard()}selectTheme(e){this.applyTheme(e)}drawPreviewBlock(){if(!this.selectedBlock||!this.previewPosition)return;const e=this.ctx,t=this.actualCellSize||this.cellSize,i=this.selectedBlock.shape,s=this.previewPosition.row,o=this.previewPosition.col,n=this.canPlaceBlock(s,o);e.fillStyle=n?this.selectedBlock.color+"80":"#ff000080",e.strokeStyle=n?this.selectedBlock.color:"#ff0000",e.lineWidth=2;for(let a=0;a<i.length;a++)for(let l=0;l<i[a].length;l++)if(i[a][l]===1){const r=o+l,c=s+a;if(r>=0&&r<this.boardSize&&c>=0&&c<this.boardSize){const h=Math.round(r*t)+1,d=Math.round(c*t)+1,f=Math.round(t)-2;e.fillRect(h,d,f,f),e.strokeRect(h,d,f,f)}}}checkLineClears(){if(this.pendingClears&&this.pendingClearsTimestamp&&Date.now()-this.pendingClearsTimestamp>5e3&&(console.warn("Pending clears stuck for too long, resetting..."),this.pendingClears=null,this.pendingClearResult=null,this.pendingClearsTimestamp=null),this.pendingClears&&console.log("Line clear animation in progress - checking for additional clears immediately"),!this.board||!Array.isArray(this.board)){console.error("Invalid board state in checkLineClears, reinitializing..."),this.board=this.initializeBoard();return}const e=this.scoringSystem.checkForCompletedLines(this.board);if(console.log("Line clear check result:",{rows:e.rows.length,columns:e.columns.length,squares:e.squares.length,hasPendingClears:!!this.pendingClears,hasQueuedClears:!!this.queuedClears}),e.rows.length>0||e.columns.length>0||e.squares.length>0){if(console.log("Lines detected for clearing:",e),this.pendingClears){console.log("Queuing additional line clears for after current animation completes"),this.queuedClears=e;return}this.updateScoreForClears(e),this.updateUI(),this.showImmediateClearFeedback(e),this.startLineClearAnimation(e)}else console.log("No lines detected for clearing"),this.checkingAdditionalClears||(this.scoringSystem.resetStreak(),this.scoringSystem.resetMultiplierChain(),console.log("Reset multiplier chain due to no clears")),this.updateUI()}updateScoreForClears(e){console.log("updateScoreForClears called with:",e);const t=this.difficultyManager.getScoreMultiplier(),i=this.scoringSystem.applyClears(this.board,e,t);console.log("Score calculation result:",i),this.board=i.board,this.score=this.scoringSystem.getScore(),this.scoringSystem.score=this.score,this.scoringSystem.updateLevelFromScore(),this.level=this.scoringSystem.getLevel();const s=e.rows.length+e.columns.length+e.squares.length;s>0&&(this.scoringSystem.rowsClearedCount+=e.rows.length,this.scoringSystem.columnsClearedCount+=e.columns.length,this.scoringSystem.squaresClearedCount+=e.squares.length,this.scoringSystem.linesCleared+=s),this.pendingClearResult={clearedLines:e,scoreGained:i.scoreGained,isCombo:i.isCombo,combo:this.scoringSystem.getCombo()},this.lastScoreInfo={scoreGained:i.scoreGained,isComboEvent:i.isCombo,clearTypes:i.comboTypes||[],totalClears:s,breakdown:{linePoints:0,squarePoints:0,comboBonus:0}},this.showPointBreakdown(this.lastScoreInfo,e),console.log("Score updated immediately. New score:",this.score,"New level:",this.level)}startLineClearAnimation(e){console.log("Starting line clear animation for:",e),this.pendingClearsTimestamp=Date.now();const t=[];e.rows.length>0&&t.push({type:"rows",lines:e.rows}),e.columns.length>0&&t.push({type:"columns",lines:e.columns}),e.squares.length>0&&t.push({type:"squares",lines:e.squares}),t.length>1?this.startCascadeClearAnimation(t,e):(this.highlightClearingBlocks(e),this.clearTimeoutId=setTimeout(()=>{console.log("Timeout reached, calling completeLineClear"),this.completeLineClear(e)},750),this.safetyTimeoutId=setTimeout(()=>{this.pendingClears&&(console.warn("Safety timeout reached - forcing line clear completion"),this.forceCompleteLineClear(e))},2e3))}startCascadeClearAnimation(e,t){console.log("🌊 Starting cascade animation for:",e);let i=0;const s=300,o=()=>{if(i>=e.length){console.log("🌊 Cascade complete, finishing clear"),this.completeLineClear(t);return}const n=e[i];console.log(`🌊 Cascade step ${i+1}/${e.length}: ${n.type}`);const a={rows:n.type==="rows"?n.lines:[],columns:n.type==="columns"?n.lines:[],squares:n.type==="squares"?n.lines:[]};this.highlightClearingBlocks(a,!0),this.addCascadeParticleEffects(a,i),i++,setTimeout(o,s)};o(),this.safetyTimeoutId=setTimeout(()=>{this.pendingClears&&(console.warn("🌊 Cascade safety timeout reached - forcing completion"),this.forceCompleteLineClear(t))},3e3)}addCascadeParticleEffects(e,t){if(!this.effectsManager)return;const i=["#FFD700","#FF6B6B","#4ECDC4","#45B7D1","#96CEB4"],s=i[t%i.length];e.rows.forEach(o=>{const n=o*(this.canvas.height/9)+this.canvas.height/18;for(let a=0;a<3;a++){const l=(a+1)*(this.canvas.width/4);this.effectsManager.addParticle(l,n,s,"cascade")}}),e.columns.forEach(o=>{const n=o*(this.canvas.width/9)+this.canvas.width/18;for(let a=0;a<3;a++){const l=(a+1)*(this.canvas.height/4);this.effectsManager.addParticle(n,l,s,"cascade")}}),e.squares.forEach(o=>{const n=o.col*3*(this.canvas.width/9)+this.canvas.width/6,a=o.row*3*(this.canvas.height/9)+this.canvas.height/6;this.effectsManager.addParticle(n,a,s,"cascade")})}showImmediateClearFeedback(e){this.pendingClears=e,this.pendingClearsTimestamp=Date.now(),this.ctx.save();const t=this.getClearGlowColor();this.ctx.fillStyle=t,this.ctx.globalAlpha=.2,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,this.ctx.restore(),this.canvas.style.border=`1px solid ${t}`,this.canvas.style.boxShadow=`0 0 5px ${t}`,setTimeout(()=>{this.canvas.style.border="",this.canvas.style.boxShadow=""},300);const i=e.rows.length+e.columns.length+e.squares.length;let s="";i===1?e.rows.length>0?s="ROW!":e.columns.length>0?s="COLUMN!":e.squares.length>0&&(s="SQUARE!"):i>1&&(s=`${i} CLEARS!`),s&&(this.clearNotification={message:s,startTime:Date.now(),duration:400}),this.drawBoard()}drawClearingBlockGlow(e,t={}){const{subtle:i=!1}=t;this.ctx.save();const s=this.actualCellSize||this.cellSize,o=this.getClearGlowColor();this.ctx.shadowColor=o,this.ctx.shadowBlur=i?2:4,this.ctx.strokeStyle=o,this.ctx.lineWidth=i?.5:1,this.ctx.globalAlpha=i?.2:.4,e.rows.forEach(n=>{for(let a=0;a<this.boardSize;a++)if(this.board[n][a]===1){const l=a*s,r=n*s,c=i?3:2;this.ctx.strokeRect(l+c,r+c,s-c*2,s-c*2)}}),e.columns.forEach(n=>{for(let a=0;a<this.boardSize;a++)if(this.board[a][n]===1){const l=n*s,r=a*s,c=i?3:2;this.ctx.strokeRect(l+c,r+c,s-c*2,s-c*2)}}),e.squares.forEach(n=>{const a=n.row*3,l=n.col*3;for(let r=0;r<3;r++)for(let c=0;c<3;c++){const h=a+r,d=l+c;if(this.board[h][d]===1){const f=d*s,p=h*s,u=i?3:2;this.ctx.strokeRect(f+u,p+u,s-u*2,s-u*2)}}}),this.ctx.shadowBlur=0,this.ctx.strokeStyle="#ffffff",this.ctx.lineWidth=i?.5:.75,this.ctx.globalAlpha=i?.25:.5,e.rows.forEach(n=>{for(let a=0;a<this.boardSize;a++)if(this.board[n][a]===1){const l=a*s,r=n*s,c=i?5:4;this.ctx.strokeRect(l+c,r+c,s-c*2,s-c*2)}}),e.columns.forEach(n=>{for(let a=0;a<this.boardSize;a++)if(this.board[a][n]===1){const l=n*s,r=a*s,c=i?5:4;this.ctx.strokeRect(l+c,r+c,s-c*2,s-c*2)}}),e.squares.forEach(n=>{const a=n.row*3,l=n.col*3;for(let r=0;r<3;r++)for(let c=0;c<3;c++){const h=a+r,d=l+c;if(this.board[h][d]===1){const f=d*s,p=h*s,u=i?5:4;this.ctx.strokeRect(f+u,p+u,s-u*2,s-u*2)}}}),this.ctx.restore()}drawClearNotification(){if(!this.clearNotification)return;const t=Date.now()-this.clearNotification.startTime;if(t>=this.clearNotification.duration){this.clearNotification=null;return}const i=1-t/this.clearNotification.duration,s=this.canvas.width/2,o=this.canvas.height/2;this.ctx.save(),this.ctx.globalAlpha=i,this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillRect(s-80,o-20,160,40);const n=this.getClearGlowColor();this.ctx.strokeStyle=n,this.ctx.lineWidth=3,this.ctx.strokeRect(s-80,o-20,160,40),this.ctx.fillStyle=n,this.ctx.font="bold 24px Arial",this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText(this.clearNotification.message,s,o),this.ctx.restore()}highlightClearingBlocks(e,t=!1){this.drawBoard();const i=this.ctx,s=this.actualCellSize||this.cellSize,o=this.getClearGlowColor();i.save(),i.globalAlpha=t?.9:.7,t&&(i.shadowColor=o,i.shadowBlur=20),e.rows.forEach(n=>{i.fillStyle=o,i.fillRect(0,n*s,this.canvas.width,s)}),e.columns.forEach(n=>{i.fillStyle=o,i.fillRect(n*s,0,s,this.canvas.height)}),e.squares.forEach(n=>{i.fillStyle=o;const a=n.col*3*s,l=n.row*3*s;i.fillRect(a,l,3*s,3*s)}),i.restore()}completeLineClear(e){var r;console.log("completeLineClear called with:",e);let t,i,s;try{if(console.log("Clearing lines from board..."),t=this.scoringSystem.clearLinesFromBoard(this.board,e),console.log("Lines cleared from board, result:",t),t&&t.board)this.board=t.board,this.pendingClears=null,this.pendingClearsTimestamp=null,this.clearTimeoutId&&(clearTimeout(this.clearTimeoutId),this.clearTimeoutId=null),this.safetyTimeoutId&&(clearTimeout(this.safetyTimeoutId),this.safetyTimeoutId=null);else{console.error("Failed to clear lines from board, keeping pending state");return}this.petrificationManager.thawAll(),this.petrificationManager.updateBoardTracking(this.board),s=this.pendingClearResult,s?i=s.combo:(console.warn("No pendingClearResult found - score was not pre-calculated!"),i=this.scoringSystem.getCombo()),this.pendingClearResult=null,console.log("Line clear completed. Score was already updated. Current score:",this.score,"Current level:",this.level)}catch(c){console.error("Error during line clear completion:",c),console.log("Attempting recovery from line clear error...");try{const h=this.scoringSystem.clearLinesFromBoard(this.board,e);h&&h.board?(this.board=h.board,this.pendingClears=null,this.pendingClearsTimestamp=null,this.pendingClearResult=null,console.log("Recovery successful, lines cleared")):console.error("Recovery failed, keeping pending state for manual intervention")}catch(h){console.error("Recovery attempt also failed:",h)}return}this.createLineClearEffect(e);const o=this.canvas.width/2,n=this.canvas.height/2;this.effectsManager.onLineClear(o,n,e);const a=s?s.scoreGained:0,l=s?s.isCombo:!1;this.createScorePopup(o,n,a,e,l,i,((r=this.storage.loadSettings())==null?void 0:r.comboDisplayMode)||"cumulative"),i>=1&&(this.createComboEffect(i,o,n+50),this.effectsManager.onCombo(o,n+50,i)),this.updateUI(),this.updatePlaceabilityIndicators(),setTimeout(()=>{if(console.log("Checking for additional line clears after completion..."),this.checkingAdditionalClears=!0,this.queuedClears){console.log("Processing queued line clears:",this.queuedClears);const c=this.queuedClears;this.queuedClears=null,this.updateScoreForClears(c),this.updateUI(),this.showImmediateClearFeedback(c),this.startLineClearAnimation(c),this.blockManager.currentBlocks.length===0&&(console.log("Generating new blocks after queued line clear processing..."),this.generateNewBlocks())}else this.checkLineClears(),this.blockManager.currentBlocks.length===0&&(console.log("Generating new blocks after line clear completion..."),this.generateNewBlocks());this.checkingAdditionalClears=!1},200)}forceCompleteLineClear(e){console.log("Force completing line clear for:",e);try{this.clearTimeoutId&&(clearTimeout(this.clearTimeoutId),this.clearTimeoutId=null),this.safetyTimeoutId&&(clearTimeout(this.safetyTimeoutId),this.safetyTimeoutId=null);const t=this.scoringSystem.clearLinesFromBoard(this.board,e);t&&t.board?(this.board=t.board,this.pendingClears=null,this.pendingClearsTimestamp=null,this.pendingClearResult=null,this.petrificationManager.thawAll(),this.petrificationManager.updateBoardTracking(this.board),this.updateUI(),this.updatePlaceabilityIndicators(),console.log("Force clear completed successfully")):(console.error("Force clear failed - using emergency reset"),this.resetStuckUIState())}catch(t){console.error("Force clear error:",t),this.resetStuckUIState()}}newGame(){this.score>0&&this.checkHighScore(),this.board=this.initializeBoard(),this.scoringSystem.reset(),this.petrificationManager.resetAll(),this.petrificationManager.resetStats(),this.deadPixelsManager&&this.deadPixelsManager.isEnabled()&&this.deadPixelsManager.generateDeadPixels(this.boardSize),this.score=0,this.level=1,this.selectedBlock=null,this.previewPosition=null,this.isGameOver=!1,this.stopSpeedTimerCountdown(),this.timerSystem.reset(),this.timerSystem.initialize(),this.firstPiecePlaced=!1,this.isInitialized=!0;const e=this.storage.loadSettings();this.comboModeActive=e.comboDisplayMode||"cumulative",this.comboModesUsed=new Set,this.blockPalette&&this.blockPalette.stopTimeoutChecking&&this.blockPalette.stopTimeoutChecking(),this.blockPalette&&this.blockPalette.resetDragState&&this.blockPalette.resetDragState();const t=document.getElementById("point-breakdown");t&&t.parentElement&&t.parentElement.removeChild(t),this.pendingClears=null,this.pendingClearResult=null,this.pendingClearsTimestamp=null,this.clearNotification=null,this.previousScore=0,this.previousLevel=1,this.previousCombo=0,this.previousTotalCombos=0,this.generateNewBlocks(),this.drawBoard(),this.updateUI(),this.storage.clearGameState()}restartWithDifficulty(e){console.log(`Restarting game with difficulty: ${e}`),this.difficulty=e,this.difficultyManager.setDifficulty(e),this.updateDifficultyButton(),this.timerSystem.initialize(),this.hintSystem.reset(),this.newGame()}updateUI(){const e=document.getElementById("score"),t=document.getElementById("level"),i=document.getElementById("combo"),s=document.getElementById("combo-label"),o=document.getElementById("speed-timer"),n=document.getElementById("speed-timer-value"),a=this.scoringSystem.getCombo(),l=this.scoringSystem.getTotalCombos(),r=this.scoringSystem.getSpeedStats(),h=this.storage.loadSettings().comboDisplayMode||"cumulative";if(this.comboModeActive=h,this.comboModesUsed.add(h),this.previousScore===0&&this.score>0?this.successModeEnabled&&this.animateFirstScore(e):this.score>this.previousScore&&this.animateScoreIncrease(e),this.level>this.previousLevel){this.animateLevelUp(t);const f=this.scoringSystem.applyEmptyGridBonus(this.board);f>0&&this.showEmptyGridBonus(f)}const d=this.previousTotalCombos||0;if(h==="cumulative"?l>d&&l>=1&&(console.log("🎯 Animating cumulative combo hit:",l),this.animateComboHit(i)):a>this.previousCombo&&a>=1&&(console.log("🎯 Animating streak combo hit:",a),this.animateComboHit(i)),e.textContent=this.score,t.textContent=this.level,s&&(s.textContent="Combo"),h==="cumulative"?i.textContent=l:i.textContent=a,this.updateMultiplierChainDisplay(),o&&n){this.storage.loadSettings();const f=this.difficultySettings.getSettingsForDifficulty(this.difficulty);if(f.showSpeedTimer===!0){if(o.style.display="flex",this.speedDisplayMode==="timer")if(this.speedTimerStartTime){const u=Date.now()-this.speedTimerStartTime,v=f.speedTimerPrecision||"seconds";if(v==="milliseconds"){const y=(u/1e3).toFixed(1);n.textContent=`${y}s`}else if(v==="high-precision"){const y=(u/1e3).toFixed(2);n.textContent=`${y}s`}else{const y=Math.floor(u/1e3);n.textContent=`${y}s`}}else n.textContent="Ready";else if(n.textContent=r.totalSpeedBonus||0,r.speedBonuses&&r.speedBonuses.length>0){const u=r.speedBonuses[r.speedBonuses.length-1];Date.now()-u.timestamp<2e3&&(o.classList.add("speed-pulse"),setTimeout(()=>{o.classList.remove("speed-pulse")},600))}}else o.style.display="none"}this.previousScore=this.score,this.previousLevel=this.level,this.previousCombo=a,this.previousTotalCombos=l,this.updateHintControls(),this.renderPersonalBests()}updateMultiplierChainDisplay(){const e=document.getElementById("multiplier"),t=document.getElementById("multiplier-display"),i=document.getElementById("multiplier-progress-bar"),s=document.getElementById("multiplier-text"),o=document.getElementById("multiplier-chain-display");if(!e||!this.scoringSystem)return;const n=this.scoringSystem.getMultiplierChainStatus(),a=this.scoringSystem.getLastMultiplierResult();if(e.textContent=`${n.currentMultiplier}x`,t&&(t.textContent=`${n.currentMultiplier}x`),i){const l=n.currentMultiplier>1?this.scoringSystem.multiplierChainManager.getProgress():0;i.style.width=`${l*100}%`}if(s&&(s.textContent=`Chain: ${n.consecutiveClears}`),o&&(n.currentMultiplier>1?o.classList.add("active"):o.classList.remove("active")),a&&a.chainContinued&&this.showMultiplierChainEffect(a),n.currentMultiplier>1&&n.currentMultiplier!==this.lastNotifiedMultiplier?(this.queueNotification("multiplier",{multiplier:n.currentMultiplier,chain:n.consecutiveClears},1e3),this.lastNotifiedMultiplier=n.currentMultiplier):n.currentMultiplier<=1&&(this.lastNotifiedMultiplier=0,this.hideCurrentNotification()),this.showPatternDetectionEffects(),this.enablePatternDetection){const l=this.scoringSystem.detectPatterns(this.board);l.length>0&&l.forEach(r=>{this.queueNotification("pattern",{pattern:r.type,name:r.name},1e3)})}}showMultiplierChainEffect(e){if(!this.effectsManager)return;const t=this.canvas.width/2,i=this.canvas.height/2;this.effectsManager.particles.createMultiplierChainEffect(t,i,e.multiplier),this.effectsManager.settings.sound&&this.effectsManager.sound.play("combo"),this.effectsManager.haptic.onCombo(e.consecutiveClears)}showPatternDetectionEffects(){if(!this.effectsManager||!this.scoringSystem||!this.enablePatternDetection)return;const e=this.scoringSystem.detectPatterns(this.board);if(e.length>0){const t=this.canvas.width/2,i=this.canvas.height/2;e.forEach(s=>{this.effectsManager.particles.createPatternBonusEffect(t,i,s.type,s.name)}),this.effectsManager.settings.sound&&this.effectsManager.sound.play("levelUp"),this.effectsManager.haptic.onLevelUp()}}renderPersonalBests(){try{const e=document.getElementById("personal-bests");if(!e)return;if(!(this.showPersonalBests===!0)){e.style.display="none";return}const s=this.storage.getBestScoresByDifficulty()[this.difficulty]||0,o=this.difficulty.charAt(0).toUpperCase()+this.difficulty.slice(1);e.innerHTML=`
                <span class="pb-label">BEST</span>
                <span class="pb-value">${s.toLocaleString()}</span>
            `,e.style.display="inline-flex"}catch(e){console.warn("renderPersonalBests failed:",e)}this.updateUtilityBarState()}showPointBreakdown(e,t){if(!e||e.scoreGained===0)return;const i=document.getElementById("point-breakdown");i&&i.parentElement&&i.parentElement.removeChild(i);const s=document.createElement("div");s.id="point-breakdown",s.className="point-breakdown";const o=e.breakdown||{},n=[];if(o.linePoints>0){const a=t.rows.length+t.columns.length;n.push(`${a} Line${a>1?"s":""}: +${o.linePoints}`)}if(o.squarePoints>0){const a=t.squares.length;n.push(`${a} Square${a>1?"s":""}: +${o.squarePoints}`)}o.comboBonus>0&&n.push(`Combo Bonus: +${o.comboBonus}`),n.length>0&&(s.innerHTML=n.join("<br>"),s.style.display="block",s.style.opacity="1",document.body.appendChild(s),s.style.transition="all 0.3s ease-out",s.style.transform="translate(-50%, -50%) scale(1.1)",s.style.color=this.getClearGlowColor(),setTimeout(()=>{s.style.opacity="0",s.style.transform="translate(-50%, -50%) scale(1)",setTimeout(()=>{s.parentElement&&s.parentElement.removeChild(s)},300)},3e3)),this.showFloatingScore(e.scoreGained,e.isComboEvent)}showFloatingScore(e,t=!1){const s=document.getElementById("score").getBoundingClientRect(),o=this.canvas.getBoundingClientRect(),n=s.left+s.width/2-o.left,a=s.top+s.height/2-o.top,l=document.createElement("div");l.className="floating-score",l.textContent=`+${e}`,l.style.position="absolute",l.style.left=`${n}px`,l.style.top=`${a}px`,l.style.color=t?"#ff6600":this.getClearGlowColor(),l.style.fontSize="2rem",l.style.fontWeight="900",l.style.textShadow=`0 0 10px ${t?"#ff6600":this.getClearGlowColor()}`,l.style.pointerEvents="none",l.style.zIndex="1000",l.style.transition="all 1.5s ease-out",this.canvas.parentElement.appendChild(l),setTimeout(()=>{l.style.transform="translateY(-60px) scale(1.2)",l.style.opacity="0"},100),setTimeout(()=>{l.parentElement&&l.parentElement.removeChild(l)},1600)}showPlacementPointsFeedback(e,t,i){const s=this.actualCellSize||this.cellSize,o=i*s+s/2,n=t*s+s/2,a=document.createElement("div");a.className="floating-placement-points",a.textContent=`+${e}`,a.style.position="absolute",a.style.left=`${o}px`,a.style.top=`${n}px`,a.style.color="#00ff88",a.style.fontSize="1.2rem",a.style.fontWeight="700",a.style.textShadow="0 0 8px #00ff88",a.style.pointerEvents="none",a.style.zIndex="1000",a.style.transition="all 1.2s ease-out",a.style.transform="translate(-50%, -50%) scale(0.8)",a.style.opacity="0",this.canvas.parentElement.appendChild(a),setTimeout(()=>{a.style.transform="translate(-50%, -50%) scale(1.1)",a.style.opacity="1"},50),setTimeout(()=>{a.style.transform="translate(-50%, -80px) scale(0.9)",a.style.opacity="0"},800),setTimeout(()=>{a.parentElement&&a.parentElement.removeChild(a)},1300)}showEmptyGridBonus(e){const t=this.canvas.width/2,i=this.canvas.height/2,s=document.createElement("div");s.className="floating-empty-grid-bonus",s.textContent=`Empty Grid Bonus: +${e}`,s.style.position="absolute",s.style.left=`${t}px`,s.style.top=`${i}px`,s.style.color="#00ff88",s.style.fontSize="1.8rem",s.style.fontWeight="900",s.style.textShadow="0 0 15px #00ff88, 0 0 30px #00ff88",s.style.pointerEvents="none",s.style.zIndex="1001",s.style.transition="all 2.5s ease-out",s.style.transform="translate(-50%, -50%) scale(0.8)",s.style.opacity="0",s.style.textAlign="center",s.style.whiteSpace="nowrap",this.canvas.parentElement.appendChild(s),setTimeout(()=>{s.style.transform="translate(-50%, -50%) scale(1.3)",s.style.opacity="1"},100),setTimeout(()=>{s.style.transform="translate(-50%, -120px) scale(1.1)",s.style.opacity="0"},1500),setTimeout(()=>{s.parentElement&&s.parentElement.removeChild(s)},2600),this.successModeEnabled&&this.effectsManager.particles.createEmptyGridBonusEffect(t,i),this.effectsManager.sound&&this.effectsManager.sound.play("emptyGridBonus"),this.effectsManager.haptic&&this.effectsManager.haptic.onEmptyGridBonus()}updateHintControls(){const e=document.getElementById("hint-controls"),t=document.getElementById("hint-btn");if(e&&t){const i=this.difficultyManager.isHintsEnabled();if(e.style.display=i?"flex":"none",i){const s=this.hintSystem.getHintStatus();t.disabled=!s.available,s.active?t.textContent="On":s.available?t.textContent="Off":t.textContent=`${Math.ceil(s.cooldownRemaining/1e3)}s`,console.log("Hint button status:",s)}}else console.error("Hint controls or button not found in updateHintControls");this.updateUtilityBarState()}updateUtilityBarState(){const e=document.getElementById("utility-bar");if(!e)return;const t=document.getElementById("timer-display"),i=document.getElementById("speed-timer"),s=document.getElementById("hint-controls"),o=document.getElementById("personal-bests");t&&t.style.display!=="none"||i&&i.style.display!=="none"||s&&s.style.display!=="none"||o&&o.style.display!=="none"?e.classList.add("has-content"):e.classList.remove("has-content"),this.updateSlotActiveState("hint-slot",s),this.updateSlotActiveState("timer-slot",t),this.updateSlotActiveState("personal-best-slot",o),this.updateSlotActiveState("speed-timer-slot",i)}updateSlotActiveState(e,t){const i=document.getElementById(e);if(!i)return;t&&t.style.display!=="none"?i.classList.add("active"):i.classList.remove("active")}updateTimerDisplay(){const e=document.getElementById("timer-display"),t=document.getElementById("timer");if(e&&t&&this.timerSystem){const i=this.difficultyManager.getTimeLimit()!==null,s=e.style.display;if((i&&s==="none"||!i&&s!=="none")&&console.log("🖥️ Timer display update:",{timerEnabled:i,timeLimit:this.difficultyManager.getTimeLimit(),willDisplay:i?"flex":"none",timerSystemActive:this.timerSystem.isActive}),e.style.display=i?"flex":"none",i){const o=this.timerSystem.getTimeRemaining(),n=this.timerSystem.formatTime(o);t.textContent=n,e.classList.remove("warning","critical"),this.timerSystem.isCriticalTime()?e.classList.contains("critical")||(e.classList.add("critical"),this.effectsManager.sound.play("timeCritical")):this.timerSystem.isWarningTime()&&(e.classList.contains("warning")||(e.classList.add("warning"),this.effectsManager.sound.play("timeWarning"))),t.style.color="",t.style.textShadow="",t.style.animation=""}}this.updateUtilityBarState()}handleTimeUp(){if(this.timeUpInProgress)return;this.animationsEnabled!==!1&&this.complexAnimationsEnabled===!0?(this.timeUpInProgress=!0,this.startMeltOutThenGameOver()):(this.effectsManager.onError(),this.gameOver())}startMeltOutThenGameOver(){if(!this.canvas||!this.ctx){this.effectsManager.onError(),this.gameOver();return}const e=this.canvas.width,t=this.canvas.height,i=document.createElement("canvas");i.width=e,i.height=t,i.getContext("2d").drawImage(this.canvas,0,0),this.meltAnimationInProgress=!0;let o=1200;this.animationSpeed==="fast"&&(o=800),this.animationSpeed==="slow"&&(o=1800);const n=Math.max(6,Math.floor(e/64)),a=Math.ceil(e/n),l=Math.floor(t*.4),r=Array.from({length:a},(f,p)=>{const u=Math.sin(p*12.9898)*43758.5453,v=u-Math.floor(u);return Math.floor((.25+.75*v)*l)}),c=Date.now(),h=f=>1-Math.pow(1-f,3),d=()=>{const f=Date.now()-c,p=Math.min(1,f/o),u=h(p);this.ctx.clearRect(0,0,e,t);for(let v=0;v<a;v++){const y=v*n,S=Math.min(n,e-y),P=Math.floor(u*r[v]),w=Math.floor(Math.sin((v+u*10)*.6)*2);this.ctx.drawImage(i,y,0,S,t,y+w,P,S,t)}this.ctx.save(),this.ctx.globalAlpha=.4*u,this.ctx.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--background-color")||"#000",this.ctx.fillRect(0,0,e,t),this.ctx.restore(),p<1?requestAnimationFrame(d):(this.meltAnimationInProgress=!1,this.effectsManager.onError(),this.gameOver())};requestAnimationFrame(d)}showTimeBonus(e){this.effectsManager.onScoreGain(e);const t=this.canvas;this.ctx;const i=t.width/2,s=t.height/2;this.effectsManager.particles.createFloatingText(i,s-50,`+${e}s`,this.getClearGlowColor(),2e3)}updateDifficultyButton(){const e=document.getElementById("difficulty-btn");if(e){const t=this.difficultyManager.getCurrentDifficulty(),i=this.difficultyManager.getDifficultyInfo();e.classList.remove("easy","normal","hard","expert"),e.classList.add(t),e.textContent=i.name,e.title=`Current difficulty: ${i.name} - ${i.description}`}}createLineClearEffect(e){const t=this.getClearGlowColor();this.ctx.fillStyle=t,this.ctx.globalAlpha=.8,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,setTimeout(()=>{this.ctx.fillStyle="#ffffff",this.ctx.globalAlpha=.6,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,setTimeout(()=>{this.drawBoard()},150)},100)}createScorePopup(e,t,i,s={rows:[],columns:[],squares:[]},o=!1,n=0,a="streak"){var v,y,S;this.ctx.save(),this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(e-60,t-20,120,40);const l=this.getClearGlowColor();this.ctx.strokeStyle=l,this.ctx.lineWidth=2,this.ctx.strokeRect(e-60,t-20,120,40);const r=(((v=s==null?void 0:s.rows)==null?void 0:v.length)||0)+(((y=s==null?void 0:s.columns)==null?void 0:y.length)||0),c=((S=s==null?void 0:s.squares)==null?void 0:S.length)||0,h=[];r>0&&h.push(`${r} line${r>1?"s":""}`),c>0&&h.push(`${c} square${c>1?"s":""}`);const d=h.length?h.join(" + "):"Placement";this.ctx.fillStyle=l,this.ctx.font="bold 22px Arial",this.ctx.textAlign="center",this.ctx.fillText(`+${i}`,e,t),this.ctx.fillStyle="#ffffff",this.ctx.font="bold 14px Arial";const f=o?a==="cumulative"?` • COMBO x${n} (total)`:` • COMBO x${n}`:"";this.ctx.fillText(`${d}${f}`,e,t+18),this.ctx.restore();let p=0;const u=()=>{if(p<60){this.ctx.save(),this.ctx.globalAlpha=1-p/60,this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(e-70,t-24-p*2,140,48),this.ctx.strokeStyle=l,this.ctx.lineWidth=2,this.ctx.strokeRect(e-70,t-24-p*2,140,48),this.ctx.fillStyle=l,this.ctx.font="bold 22px Arial",this.ctx.textAlign="center",this.ctx.fillText(`+${i}`,e,t-4-p*2),this.ctx.fillStyle="#ffffff",this.ctx.font="bold 14px Arial";const P=o?a==="cumulative"?` • COMBO x${n} (total)`:` • COMBO x${n}`:"";this.ctx.fillText(`${d}${P}`,e,t+14-p*2),this.ctx.restore(),p++,requestAnimationFrame(u)}else this.drawBoard()};setTimeout(()=>{requestAnimationFrame(u)},200)}createComboEffect(e,t,i){if(!this.successModeEnabled)return;this.ctx.save(),this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillRect(t-80,i-15,160,30),this.ctx.strokeStyle="#ff6600",this.ctx.lineWidth=2,this.ctx.strokeRect(t-80,i-15,160,30),this.ctx.fillStyle="#ff6600",this.ctx.font="bold 24px Arial",this.ctx.textAlign="center",this.ctx.fillText(`${e}x COMBO!`,t,i+5),this.ctx.restore();let s=0;const o=()=>{if(s<60){this.ctx.save();const n=1+Math.sin(s*.3)*.2;this.ctx.scale(n,n),this.ctx.globalAlpha=1-s/60,this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillRect((t-80)/n,(i-15)/n,160/n,30/n),this.ctx.strokeStyle="#ff6600",this.ctx.lineWidth=2,this.ctx.strokeRect((t-80)/n,(i-15)/n,160/n,30/n),this.ctx.fillStyle="#ff6600",this.ctx.font="bold 24px Arial",this.ctx.textAlign="center",this.ctx.fillText(`${e}x COMBO!`,t/n,(i+5)/n),this.ctx.restore(),s++,requestAnimationFrame(o)}else this.drawBoard()};setTimeout(()=>{requestAnimationFrame(o)},300)}animateFirstScore(e){e.style.transition="all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55)",e.style.transform="scale(1.6)";const t=this.getClearGlowColor();e.style.color=t,e.style.textShadow=`0 0 20px ${t}`,setTimeout(()=>{e.style.transform="scale(1.3)"},300),setTimeout(()=>{e.style.transform="scale(1.1)"},500),setTimeout(()=>{e.style.transform="scale(1)",e.style.color="",e.style.textShadow=""},800)}animateScoreIncrease(e){e.style.transition="all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55)",e.style.transform="scale(1.3)",e.style.color=this.getClearGlowColor(),e.style.textShadow=`0 0 15px ${this.getClearGlowColor()}`,setTimeout(()=>{e.style.transform="scale(1.1)"},200),setTimeout(()=>{e.style.transform="scale(1)",e.style.color="",e.style.textShadow=""},400)}animateLevelUp(e){e.style.transition="all 0.8s ease-out",e.style.transform="scale(1.4) rotate(5deg)",e.style.color="#ff6600",e.style.textShadow="0 0 15px #ff6600";const t=this.canvas.width/2,i=this.canvas.height/2;this.effectsManager.onLevelUp(t,i),this.showEncouragingLevelMessage(),setTimeout(()=>{e.style.transform="scale(1) rotate(0deg)",e.style.color="",e.style.textShadow=""},800)}showEncouragingLevelMessage(){const e=this.ctx,t=this.canvas.width/2,i=this.canvas.height/2-60,s=this.getEncouragementText();e.save(),e.fillStyle="rgba(0, 0, 0, 0.75)",e.fillRect(t-140,i-24,280,48),e.strokeStyle="#ff6600",e.lineWidth=2,e.strokeRect(t-140,i-24,280,48),e.fillStyle="#ffcc66",e.font="bold 18px Arial",e.textAlign="center",e.fillText(s,t,i+6),e.restore(),setTimeout(()=>this.drawBoard(),1200)}getEncouragementText(){var o,n;const e=this.level,t=((n=(o=this.difficultyManager)==null?void 0:o.getCurrentDifficulty)==null?void 0:n.call(o))||this.difficulty||"normal",i={easy:["Great rhythm! Keep building streaks!","Nice clears! Try planning two moves ahead.","You’re cruising—consider Normal soon!"],normal:["Clean plays! Eye the 3x3 squares.","Strong pace—chain those clears!","Feeling comfy? Hard might be fun!"],hard:["Impressive! Combos are your friend.","Great foresight—minimize leftover singles.","Dominating Hard? Expert awaits."],expert:["Elite moves! Stay calm under the clock.","Precision play—keep the board breathable.","Excellent focus—push that high score!"]},s=i[t]||i.normal;return s[(e-1)%s.length]}animateComboHit(e){e.style.transition="all 0.5s ease-out",e.style.transform="scale(1.3)",e.style.color="#ff0066",e.style.textShadow="0 0 12px #ff0066";let t=0;const i=()=>{t<3?(e.style.transform=t%2===0?"scale(1.3)":"scale(1.1)",t++,setTimeout(i,150)):(e.style.transform="scale(1)",e.style.color="",e.style.textShadow="")};setTimeout(i,200)}loadGameState(){const e=this.storage.loadGameState();if(e){console.log("Loading saved game state:",e),this.board=e.board||this.initializeBoard(),this.score=e.score||0,this.level=e.level||1,this.previousScore=this.score,this.previousLevel=this.level,this.previousCombo=0,this.previousTotalCombos=0,this.scoringSystem.score=this.score,this.scoringSystem.level=this.level,e.scoringState&&(this.scoringSystem.linesCleared=e.scoringState.linesCleared||0,this.scoringSystem.combo=e.scoringState.combo||0,this.scoringSystem.maxCombo=e.scoringState.maxCombo||0,this.scoringSystem.rowsClearedCount=e.scoringState.rowsClearedCount||0,this.scoringSystem.columnsClearedCount=e.scoringState.columnsClearedCount||0,this.scoringSystem.squaresClearedCount=e.scoringState.squaresClearedCount||0,this.scoringSystem.comboActivations=e.scoringState.comboActivations||0,this.scoringSystem.pointsBreakdown=e.scoringState.pointsBreakdown||{linePoints:0,squarePoints:0,comboBonusPoints:0}),e.currentBlocks?(this.blockManager.currentBlocks=e.currentBlocks,this.blockPalette.updateBlocks(e.currentBlocks),this.blockManager.currentBlocks.length===0&&(console.log("No blocks available after loading saved state, generating new blocks"),this.generateNewBlocks())):(console.log("No saved blocks found, generating new blocks"),this.generateNewBlocks()),e.selectedBlock&&(this.selectedBlock=e.selectedBlock),e.petrificationState&&this.petrificationManager&&this.petrificationManager.deserialize(e.petrificationState),e.deadPixelsState&&this.deadPixelsManager&&this.deadPixelsManager.deserialize(e.deadPixelsState),e.timerState&&this.timerSystem&&(this.timerSystem.deserialize(e.timerState),console.log("⏱️ Countdown timer state restored from saved game"));const t=this.score>0||this.board.some(i=>i.some(s=>s===1));this.firstPiecePlaced=t,this.updatePlaceabilityIndicators(),console.log("Game state loaded successfully")}else console.log("No saved game state found - starting fresh game"),(!this.board||!Array.isArray(this.board))&&(this.board=this.initializeBoard()),this.blockPalette?(console.log("Rendering block palette before generating blocks"),this.blockPalette.render()):console.error("BlockPalette not available!"),console.log("Fresh game - blocks will be generated by main init sequence")}saveGameState(){if(!(this.score>0||this.board&&this.board.some(i=>i.some(s=>s===1))||this.blockManager.currentBlocks&&this.blockManager.currentBlocks.length>0)){console.log("No game progress to save, skipping save");return}const t={board:this.board,score:this.score,level:this.level,currentBlocks:this.blockManager.currentBlocks,selectedBlock:this.selectedBlock,scoringState:{linesCleared:this.scoringSystem.linesCleared,combo:this.scoringSystem.combo,maxCombo:this.scoringSystem.maxCombo,rowsClearedCount:this.scoringSystem.rowsClearedCount,columnsClearedCount:this.scoringSystem.columnsClearedCount,squaresClearedCount:this.scoringSystem.squaresClearedCount,comboActivations:this.scoringSystem.comboActivations,pointsBreakdown:this.scoringSystem.pointsBreakdown},petrificationState:this.petrificationManager?this.petrificationManager.serialize():null,deadPixelsState:this.deadPixelsManager?this.deadPixelsManager.serialize():null,timerState:this.timerSystem?this.timerSystem.serialize():null};console.log("Saving game state:",t),this.storage.saveGameState(t),console.log("Game state saved successfully")}loadSettings(){if(this.storage){const e=this.storage.loadSettings();console.log("Loading theme from storage:",e.theme),this.currentTheme=e.theme||"wood",console.log("Current theme set to:",this.currentTheme),this.difficulty=e.difficulty||"normal",this.autoSave=e.autoSave!==!1;const t=this.difficultySettings.getSettingsForDifficulty(this.difficulty);this.soundEnabled=t.soundEnabled===!0,this.animationsEnabled=t.animationsEnabled!==!1,this.enableHints=t.enableHints||!1,this.enableTimer=t.enableTimer||!1,this.enablePetrification=t.enablePetrification||!1,this.enableDeadPixels=t.enableDeadPixels||!1,this.deadPixelsIntensity=t.deadPixelsIntensity||0,this.showPoints=t.showPoints||!1,this.showPersonalBests=t.showPersonalBests||!1,this.showSpeedTimer=e.showSpeedTimer!==void 0?e.showSpeedTimer:t.showSpeedTimer||!1,this.enableMagicBlocks=t.enableMagicBlocks||!1,this.enableWildShapes=t.enableWildShapes||!1,this.applyDifficultySettings(),console.log(`🎮 Difficulty level game settings applied for: ${this.difficulty.toUpperCase()}`),console.log("Applied settings:",{soundEnabled:this.soundEnabled,animationsEnabled:this.animationsEnabled,enableHints:this.enableHints,enableTimer:this.enableTimer,enablePetrification:this.enablePetrification,enableDeadPixels:this.enableDeadPixels,showPoints:this.showPoints,showPersonalBests:this.showPersonalBests,showSpeedTimer:this.showSpeedTimer}),this.showPlacementPoints=e.showPlacementPoints||!1,this.speedDisplayMode=e.speedDisplayMode||"timer",this.particlesEnabled=e.particlesEnabled!==!1,this.enablePatternDetection=e.enablePatternDetection===!0;const i=e.speedMode||"ignored";this.scoringSystem.setSpeedMode(i),this.pieceTimeoutEnabled=e.pieceTimeoutEnabled||!1,this.hapticEnabled=e.hapticEnabled!==!1,this.enablePrizeRecognition=e.enablePrizeRecognition!==!1,this.successModeEnabled=e.successModeEnabled!==!1,this.petrificationManager&&this.petrificationManager.setEnabled(this.enablePetrification),this.blockHoverEffects=e.blockHoverEffects!==!1,this.blockSelectionGlow=e.blockSelectionGlow!==!1,this.blockEntranceAnimations=e.blockEntranceAnimations!==!1,this.blockPlacementAnimations=e.blockPlacementAnimations===!0,this.particleEffects=e.particleEffects!==!1,this.animationSpeed=e.animationSpeed||"normal",this.gameMode=e.gameMode||"classic",this.settings=e;const s=localStorage.getItem("blockdoku_pending_difficulty");if(s&&(this.difficulty=s,localStorage.removeItem("blockdoku_pending_difficulty")),this.applyTheme(this.currentTheme),this.blockPalette&&this.blockPalette.setPieceTimeoutEnabled&&this.blockPalette.setPieceTimeoutEnabled(this.pieceTimeoutEnabled),document.readyState==="loading"&&document.addEventListener("DOMContentLoaded",()=>{this.applyTheme(this.currentTheme)}),this.difficultyManager&&this.difficultyManager.setDifficulty(this.difficulty),this.applyEffectsSettings(),this.deadPixelsManager){const o=this.deadPixelsManager.isEnabled(),n=this.deadPixelsManager.getIntensity();this.deadPixelsManager.setEnabled(this.enableDeadPixels),this.deadPixelsManager.setIntensity(this.deadPixelsIntensity);const a=this.deadPixelsIntensity!==n;this.enableDeadPixels&&(!o||a)&&(!(this.deadPixelsManager.getDeadPixels().length>0)||a)&&this.deadPixelsManager.generateDeadPixels(this.boardSize),!this.enableDeadPixels&&o&&this.deadPixelsManager.clearDeadPixels()}this.updateBlockPointsDisplay(),this.timerSystem&&(this.timerSystem.reset(),this.timerSystem.initialize(),console.log("⏱️ Timer system reinitialized after settings change:",{isActive:this.timerSystem.isActive,timeLimit:this.timerSystem.timeLimit})),this.updateTimerDisplay(),this.updateUtilityBarState()}}saveSettings(){const e={theme:this.currentTheme,soundEnabled:this.soundEnabled,animationsEnabled:this.animationsEnabled,difficulty:this.difficulty,autoSave:this.autoSave,enableHints:this.enableHints,enableTimer:this.enableTimer,showPoints:this.showPoints,showPlacementPoints:this.showPlacementPoints,particlesEnabled:this.particlesEnabled,hapticEnabled:this.hapticEnabled};this.storage&&this.storage.saveSettings(e)}updateBlockPointsDisplay(){const e=this.showPoints||!1;document.querySelectorAll(".block-info").forEach(i=>{e?i.classList.add("show-points"):i.classList.remove("show-points")})}applyEffectsSettings(){this.effectsManager&&this.effectsManager.updateSettings({particles:this.particlesEnabled!==!1,sound:this.soundEnabled===!0,haptic:this.hapticEnabled!==!1,blockPlacementAnimations:this.blockPlacementAnimations===!0})}applyTheme(e){console.log("App.js applying theme:",e),this.currentTheme=e;try{const s=Array.from(document.querySelectorAll('link[rel="stylesheet"]')).filter(l=>(l.getAttribute("href")||"").includes("/assets/wood-")||(l.href||"").includes("/assets/wood-")),o=Array.from(document.querySelectorAll('link[rel="stylesheet"]')).filter(l=>(l.getAttribute("href")||"").includes("/assets/light-")||(l.href||"").includes("/assets/light-")),n=Array.from(document.querySelectorAll('link[rel="stylesheet"]')).filter(l=>(l.getAttribute("href")||"").includes("/assets/dark-")||(l.href||"").includes("/assets/dark-"));[...s,...o,...n].forEach(l=>{l.disabled=!0});let a=null;e==="wood"&&s.length>0?(a=s[0],a.disabled=!1,console.log("App.js enabled built wood theme")):e==="light"&&o.length>0?(a=o[0],a.disabled=!1,console.log("App.js enabled built light theme")):e==="dark"&&n.length>0&&(a=n[0],a.disabled=!1,console.log("App.js enabled built dark theme")),a&&requestAnimationFrame(()=>{requestAnimationFrame(()=>{this.verifyThemeLoaded()})})}catch(s){console.log("Error managing built theme links:",s)}["light","dark","wood"].forEach(s=>{const o=document.getElementById(`theme-css-${s}`);o&&(o.disabled=s!==e)});let i=document.getElementById("theme-css");i||(i=document.createElement("link"),i.rel="stylesheet",i.id="theme-css",document.head.appendChild(i)),i.href=`css/themes/${e}.css`,document.documentElement.setAttribute("data-theme",e),document.body.className=document.body.className.replace(/light-theme|dark-theme|wood-theme/g,""),document.body.classList.add(`${e}-theme`),this.pendingClears&&(console.log("Clearing pending clears due to theme switch"),this.pendingClears=null,this.pendingClearsTimestamp=null),setTimeout(()=>{this.draw()},50),this.saveSettings()}checkHighScore(){const e=this.getStats();if(this.storage.saveStatistics(e),this.storage.isHighScore(e.score)){const t=this.getDetailedGameStats(e);return this.storage.saveHighScore(t),!0}return!1}getDetailedGameStats(e){var o,n;const t=this.enablePrizeRecognition!==!1,i=t?this.getPrizeForScore(e.score):null,s=t?this.getNextPrizeInfo(e.score):null;return{...e,difficultyMultiplier:((n=(o=this.difficultyManager)==null?void 0:o.getScoreMultiplier)==null?void 0:n.call(o))||1,petrificationStats:this.petrificationManager?this.petrificationManager.getStats():null,enablePetrification:this.enablePetrification,speedStats:this.scoringSystem.getSpeedStats?this.scoringSystem.getSpeedStats():null,speedMode:this.scoringSystem.speedConfig?this.scoringSystem.speedConfig.mode:"ignored",countdownEnabled:this.storage.loadSettings().enableTimer||!1,countdownDuration:this.storage.loadSettings().countdownDuration||3,timeRemaining:this.timerSystem?this.timerSystem.getTimeRemaining():null,timeLimit:this.difficultyManager?this.difficultyManager.getTimeLimit():null,piecesPlaced:this.gameEngine?this.gameEngine.moveCount:0,pointsPerPiece:this.gameEngine&&this.gameEngine.moveCount>0?e.score/this.gameEngine.moveCount:0,prizeRecognitionEnabled:t,prize:i,nextPrize:(s==null?void 0:s.nextPrize)||null,nextPrizeProgress:(s==null?void 0:s.progress)||0,nextPrizePointsNeeded:(s==null?void 0:s.pointsNeeded)||0}}getHighScores(){return this.storage.getHighScores()}getStatistics(){return this.storage.loadStatistics()}gameOver(){if(this.isGameOver)return;this.isGameOver=!0,this.stopSpeedTimerCountdown(),console.log("Game Over! Final Score:",this.score),this.blockPalette&&this.blockPalette.pauseTimeoutChecking&&this.blockPalette.pauseTimeoutChecking(),this.blockPalette&&this.blockPalette.resetDragState&&this.blockPalette.resetDragState(),this.stopGameLoop();const e=this.getStats();this.checkHighScore(),this.loadHighScores(),this.settingsManager&&this.settingsManager.refreshStatistics&&this.settingsManager.refreshStatistics(),this.showGameOverModal(e),this.saveGameState(),this.storage&&this.storage.clearGameState&&this.storage.clearGameState()}stopGameLoop(){this.gameRunning=!1,this.animationId&&(cancelAnimationFrame(this.animationId),this.animationId=null)}getPrizeForScore(e){const t=[{minScore:0,maxScore:999,emoji:"🎯",name:"First Steps",message:"Every journey begins with a single step!"},{minScore:1e3,maxScore:2499,emoji:"🌟",name:"Rising Star",message:"You're getting the hang of it!"},{minScore:2500,maxScore:4999,emoji:"🔥",name:"Hot Streak",message:"You're on fire! Keep it up!"},{minScore:5e3,maxScore:9999,emoji:"💎",name:"Diamond Player",message:"Shining bright like a diamond!"},{minScore:1e4,maxScore:19999,emoji:"🏆",name:"Champion",message:"You're a true champion!"},{minScore:2e4,maxScore:49999,emoji:"👑",name:"Royal Master",message:"Fit for a king or queen!"},{minScore:5e4,maxScore:99999,emoji:"🚀",name:"Rocket Master",message:"You're reaching for the stars!"},{minScore:1e5,maxScore:199999,emoji:"⭐",name:"Superstar",message:"You're absolutely stellar!"},{minScore:2e5,maxScore:499999,emoji:"🎪",name:"Carnival Legend",message:"The carnival has a new legend!"},{minScore:5e5,maxScore:999999,emoji:"🎭",name:"Master Performer",message:"A performance worthy of the grandest stage!"},{minScore:1e6,maxScore:1/0,emoji:"🏅",name:"Ultimate Grandmaster",message:"You've achieved the impossible!"}];for(const i of t)if(e>=i.minScore&&e<=i.maxScore)return i;return t[0]}getNextPrizeInfo(e){const t=[{minScore:0,maxScore:999,emoji:"🎯",name:"First Steps"},{minScore:1e3,maxScore:2499,emoji:"🌟",name:"Rising Star"},{minScore:2500,maxScore:4999,emoji:"🔥",name:"Hot Streak"},{minScore:5e3,maxScore:9999,emoji:"💎",name:"Diamond Player"},{minScore:1e4,maxScore:19999,emoji:"🏆",name:"Champion"},{minScore:2e4,maxScore:49999,emoji:"👑",name:"Royal Master"},{minScore:5e4,maxScore:99999,emoji:"🚀",name:"Rocket Master"},{minScore:1e5,maxScore:199999,emoji:"⭐",name:"Superstar"},{minScore:2e5,maxScore:499999,emoji:"🎪",name:"Carnival Legend"},{minScore:5e5,maxScore:999999,emoji:"🎭",name:"Master Performer"},{minScore:1e6,maxScore:1/0,emoji:"🏅",name:"Ultimate Grandmaster"}];for(let i=0;i<t.length;i++)if(e<t[i].minScore)return{nextPrize:t[i],progress:Math.min(100,(e/t[i].minScore*100).toFixed(1)),pointsNeeded:t[i].minScore-e};return null}showGameOverModal(e){var a,l;const t=this.storage.isHighScore(e.score),i=this.enablePrizeRecognition!==!1,s=i?this.getPrizeForScore(e.score):null,o=i?this.getNextPrizeInfo(e.score):null,n={score:e.score,level:e.level,linesCleared:e.linesCleared,maxCombo:e.maxCombo,totalCombos:e.totalCombos||0,maxStreakCount:e.maxStreakCount||0,difficulty:e.difficulty||this.difficulty,difficultyMultiplier:e.difficultyMultiplier||((l=(a=this.difficultyManager)==null?void 0:a.getScoreMultiplier)==null?void 0:l.call(a))||1,isHighScore:t,breakdown:e.breakdown||{linePoints:0,squarePoints:0,comboBonusPoints:0,placementPoints:0,streakBonusPoints:0},rowClears:e.rowClears||0,columnClears:e.columnClears||0,squareClears:e.squareClears||0,petrificationStats:e.petrificationStats,enablePetrification:this.enablePetrification,speedStats:this.scoringSystem.getSpeedStats?this.scoringSystem.getSpeedStats():null,speedMode:this.scoringSystem.speedConfig?this.scoringSystem.speedConfig.mode:"ignored",countdownEnabled:this.storage.loadSettings().enableTimer||!1,countdownDuration:this.storage.loadSettings().countdownDuration||3,timeRemaining:this.timerSystem?this.timerSystem.getTimeRemaining():null,timeLimit:this.difficultyManager?this.difficultyManager.getTimeLimit():null,piecesPlaced:this.gameEngine?this.gameEngine.moveCount:0,pointsPerPiece:this.gameEngine&&this.gameEngine.moveCount>0?e.score/this.gameEngine.moveCount:0,prizeRecognitionEnabled:i,prize:s,nextPrize:(o==null?void 0:o.nextPrize)||null,nextPrizeProgress:(o==null?void 0:o.progress)||0,nextPrizePointsNeeded:(o==null?void 0:o.pointsNeeded)||0,timestamp:Date.now()};try{localStorage.setItem("blockdoku_lastgame",JSON.stringify(n))}catch(r){console.error("Failed to save last game data:",r)}window.location.href="lastgame.html"}getStats(){var s,o;const e=this.scoringSystem.getStats(),t=((o=(s=this.difficultyManager)==null?void 0:s.getScoreMultiplier)==null?void 0:o.call(s))||1,i=this.petrificationManager?this.petrificationManager.getStats():null;return{score:this.score,level:this.level,linesCleared:e.linesCleared,combo:e.combo,maxCombo:e.maxCombo,totalCombos:e.totalCombos,maxStreakCount:e.maxStreakCount,rowClears:e.rowClears,columnClears:e.columnClears,squareClears:e.squareClears,comboActivations:e.comboActivations,comboModesUsed:Array.from(this.comboModesUsed||[]),breakdown:e.breakdownBase,difficulty:this.difficulty,difficultyMultiplier:t,petrificationStats:i}}showHighScores(){const e=document.getElementById("high-scores-modal"),t=document.getElementById("high-scores-list"),i=document.getElementById("statistics-display"),s=this.getHighScores();s.length===0?t.innerHTML="<p>No high scores yet. Play a game to set your first record!</p>":t.innerHTML=s.map((n,a)=>`
                <div class="score-item">
                    <span class="rank">#${a+1}</span>
                    <span class="score-value">${n.score.toLocaleString()}</span>
                    <span class="score-details">${(n.difficulty||"normal").toUpperCase()} • Level ${n.level} • ${n.linesCleared} lines • ${n.date}</span>
                </div>
            `).join("");const o=this.getStatistics();i.innerHTML=`
            <div class="stat-item">
                <span class="stat-label">Games Played:</span>
                <span class="stat-value">${o.gamesPlayed}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Score:</span>
                <span class="stat-value">${o.totalScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Best Score:</span>
                <span class="stat-value">${o.bestScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Lines:</span>
                <span class="stat-value">${o.totalLinesCleared}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Max Combo:</span>
                <span class="stat-value">${o.maxCombo}</span>
            </div>
        `,e.style.display="block"}hideHighScores(){const e=document.getElementById("high-scores-modal");e.style.display="none"}loadHighScores(){const e=document.getElementById("high-scores-list"),t=document.getElementById("statistics-display");if(!e||!t)return;const i=this.getHighScores();i.length===0?e.innerHTML="<p>No high scores yet. Play a game to set your first record!</p>":e.innerHTML=i.map((o,n)=>`
                <div class="score-item">
                    <span class="rank">#${n+1}</span>
                    <span class="score-value">${o.score.toLocaleString()}</span>
                    <span class="score-details">Level ${o.level} • ${o.linesCleared} lines • Max Streak: ${o.maxCombo||0} • Total Combos: ${o.totalCombos||0} • ${o.date}</span>
                </div>
            `).join("");const s=this.getStatistics();t.innerHTML=`
            <div class="stat-item">
                <span class="stat-label">Games Played:</span>
                <span class="stat-value">${s.gamesPlayed}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Score:</span>
                <span class="stat-value">${s.totalScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Best Score:</span>
                <span class="stat-value">${s.bestScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
				<span class="stat-label">Total Lines:</span>
				<span class="stat-value">${s.totalLinesCleared}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Max Streak:</span>
                <span class="stat-value">${s.maxCombo}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Combos:</span>
                <span class="stat-value">${s.totalCombos||0}</span>
            </div>
        `}showDifficultyModal(){const e=document.getElementById("difficulty-modal");this.updateDifficultyUI(),e.style.display="block"}hideDifficultyModal(){const e=document.getElementById("difficulty-modal");e.style.display="none"}showSettingsModal(){console.log("showSettingsModal called");const e=document.getElementById("settings-modal");if(!e){console.error("Settings modal not found!");return}console.log("Settings modal found, showing..."),this.pwaInstallManager?(this.pwaInstallManager.createInstallButton(),this.pwaInstallManager.showInstallButton()):console.log("PWA Install Manager not available"),this.updateThemeUI(),this.updateDifficultyUI(),this.loadHighScores(),this.settingsManager&&this.settingsManager.refreshStatistics&&this.settingsManager.refreshStatistics(),e.style.display="block",console.log("Settings modal should now be visible")}hideSettingsModal(){const e=document.getElementById("settings-modal");e.style.display="none"}updateDifficultyUI(){document.querySelectorAll(".difficulty-option").forEach(e=>{e.classList.remove("selected"),e.dataset.difficulty===this.difficulty&&e.classList.add("selected")}),document.getElementById("enable-hints").checked=this.enableHints,document.getElementById("enable-timer").checked=this.enableTimer}async selectDifficulty(e){if(console.log(`🎮 App.js: selectDifficulty called with difficulty: ${e}`),console.log(`🎮 App.js: current difficulty before change: ${this.difficulty}`),this.difficulty=e,console.log(`🎮 App.js: difficulty set to: ${this.difficulty}`),this.difficultyManager){const t=this.difficultyManager.setDifficulty(e);console.log(`🎮 App.js: difficultyManager.setDifficulty(${e}) returned: ${t}`)}console.log("🎮 App.js: calling saveSettings()..."),this.saveSettings(),console.log("🎮 App.js: calling loadSettings()..."),this.loadSettings(),this.applyDifficultySettings(),console.log("🎮 App.js: calling updateDifficultyUI()..."),this.updateDifficultyUI(),console.log("🎮 App.js: calling updateDifficultyButton()..."),this.updateDifficultyButton(),console.log("🎮 App.js: calling updateHintControls()..."),this.updateHintControls(),console.log("🎮 App.js: calling renderPersonalBests()..."),this.renderPersonalBests(),console.log(`🎮 App.js: selectDifficulty completed. Final difficulty: ${this.difficulty}`)}selectTheme(e){this.gameRunning&&this.saveGameState(),this.blockPalette&&this.blockPalette.clearPlaceability&&this.blockPalette.clearPlaceability(),this.currentTheme=e,this.applyTheme(e),this.updateThemeUI(),this.saveSettings(),this.gameRunning&&(this.drawBoard(),setTimeout(()=>{this.updatePlaceabilityIndicators()},100))}updateThemeUI(){document.querySelectorAll(".theme-option").forEach(e=>{e.classList.remove("selected"),e.dataset.theme===this.currentTheme&&e.classList.add("selected")})}toggleSetting(e,t){switch(e){case"hints":this.enableHints=t;break;case"timer":this.enableTimer=t;break}this.saveSettings()}applyDifficultySettings(){switch(this.difficulty){case"easy":this.enableTimer=!1,this.moveLimit=null,this.timeLimit=null,document.body.classList.remove("expert-mode");break;case"normal":this.enableTimer=!1,this.moveLimit=null,this.timeLimit=null,document.body.classList.remove("expert-mode");break;case"hard":this.enableTimer=!1,this.moveLimit=50,this.timeLimit=null,document.body.classList.remove("expert-mode");break;case"expert":this.enableTimer=!0,this.moveLimit=30,this.timeLimit=300,document.body.classList.add("expert-mode");break}}generateNewBlocks(){var a,l,r;console.log("🔄 generateNewBlocks() called"),console.log("BlockPalette available:",!!this.blockPalette),console.log("BlockManager available:",!!this.blockManager);let e=3,t="all";switch(this.difficultyManager?this.difficultyManager.getCurrentDifficulty():"normal"){case"easy":e=3,t="large";break;case"normal":e=3,t="all";break;case"hard":e=3,t="small";break;case"expert":e=3,t="complex";break}const s=((a=this.settings)==null?void 0:a.magicBlocksFrequency)||1,o=((l=this.settings)==null?void 0:l.wildShapesFrequency)||1,n=this.blockManager.generateRandomBlocks(e,t,this.difficultyManager,this.enableMagicBlocks,this.enableWildShapes,s,o);console.log("Generated new blocks:",n),console.log("BlockPalette exists:",!!this.blockPalette),this.blockPalette.updateBlocks(n),this.petrificationManager.updateBlockTracking(n),this.updatePlaceabilityIndicators(),this.updateBlockPointsDisplay(),this.autoSelectNextBlock(),this.optimizeBlockOrientations(),console.log("✅ generateNewBlocks() completed. Generated blocks:",((r=this.blockManager.currentBlocks)==null?void 0:r.length)||0),console.log("Block palette should now be updated with blocks")}placeBlock(e,t){if(!this.canPlaceBlock(e,t))return;!this.firstPiecePlaced&&this.timerSystem&&this.timerSystem.isActive&&!this.timerSystem.isPaused&&(this.timerSystem.start(),console.log("⏱️ Countdown timer started on first piece placement")),this.firstPiecePlaced=!0;const i=this.selectedBlock,s=i&&i.isMagic;this.board=this.blockManager.placeBlock(this.selectedBlock,e,t,this.board),this.petrificationManager.updateBoardTracking(this.board),s&&this.handleMagicBlockPlacement(i,e,t),this.scoringSystem.addPlacementPoints(this.scoringSystem.basePoints.single,this.difficultyManager.getScoreMultiplier());const o=this.scoringSystem.totalSpeedBonus;this.scoringSystem.recordPlacementTime();const n=this.scoringSystem.totalSpeedBonus-o;this.scoringSystem.speedConfig.mode!=="ignored"&&this.startSpeedTimerCountdown(),this.score=this.scoringSystem.getScore(),this.showPlacementPoints&&this.showPlacementPointsFeedback(this.scoringSystem.basePoints.single,e,t),this.showPlacementPoints&&this.queueNotification("placement",{points:this.scoringSystem.basePoints.single,x:t*this.cellSize+this.cellSize/2,y:e*this.cellSize+this.cellSize/2},1e3),Math.abs(n)>.01&&this.scoringSystem.speedConfig.mode!=="ignored"&&(console.log("Speed bonus gained:",n),this.showSpeedTimerFeedback(n,e,t),this.queueNotification("speed",{bonus:n,x:t*this.cellSize+this.cellSize/2,y:e*this.cellSize+this.cellSize/2},1e3));const a=this.canvas.width/2,l=this.canvas.height/2;this.effectsManager.onBlockPlace(a,l),this.blockPalette.resetPieceTimeout(this.selectedBlock.id),this.blockPalette.resetDragState&&this.blockPalette.resetDragState(),this.petrificationManager.untrackBlock(this.selectedBlock.id),this.blockManager.removeBlock(this.selectedBlock.id),this.selectedBlock=null,this.previewPosition=null,this.blockPalette.updateBlocks(this.blockManager.currentBlocks),this.drawBoard(),this.updateUI(),this.updatePlaceabilityIndicators(),this.checkLineClears(),this.autoSave&&this.saveGameState(),this.blockManager.currentBlocks.length===0&&this.generateNewBlocks(),this.isGameOver||this.checkGameOver(),this.autoSelectNextBlock(),this.optimizeBlockOrientations()}optimizeBlockOrientations(){this.difficultySettings.getSettingsForDifficulty(this.difficulty).autoRotateBlocks&&(console.log("🔄 Optimizing block orientations based on board state"),this.blockManager.currentBlocks.forEach((t,i)=>{const s=this.findOptimalOrientation(t);s&&s.rotation!==t.rotation&&(console.log(`🔄 Auto-rotating ${t.name} from ${t.rotation}° to ${s.rotation}° (${s.validPositions} valid positions)`),this.blockManager.currentBlocks[i]=s)}),this.blockPalette.updateBlocks(this.blockManager.currentBlocks))}findOptimalOrientation(e){let t=e,i=this.countValidPositions(e),s={...e};for(let o=0;o<3;o++){s=this.blockManager.rotateBlock(s);const n=this.countValidPositions(s);n>i&&(i=n,t={...s})}return{...t,validPositions:i}}countValidPositions(e){let t=0;for(let i=0;i<this.boardSize;i++)for(let s=0;s<this.boardSize;s++)this.blockManager.canPlaceBlock(e,i,s,this.board)&&t++;return t}handleMagicBlockPlacement(e,t,i){switch(console.log("🔮 Magic block placed!",e),this.showMagicBlockActivationFeedback(t,i,e),e.magicType){case"lineClear":this.handleLineClearMagic(e,t,i);break;case"bomb":this.handleBombMagic(e,t,i);break;case"lightning":this.handleLightningMagic(e,t,i);break;case"ghost":this.handleGhostMagic(e,t,i);break;default:console.warn("Unknown magic type:",e.magicType),this.handleLineClearMagic(e,t,i)}}handleLineClearMagic(e,t,i){const s=this.findLinesContainingMagicBlock(e,t,i);s.rows.length>0||s.columns.length>0||s.squares.length>0?(console.log("🔮 Line-clear magic triggered:",s),this.showMagicBlockClearExplanation(s,t,i),this.showMagicBlockEffect(t,i),setTimeout(()=>{this.forceMagicBlockClears(s)},1e3)):this.showMagicBlockStandbyMessage(t,i)}handleBombMagic(e,t,i){console.log("💣 Bomb magic triggered!",e);const s=new Set;for(let o=0;o<e.shape.length;o++)for(let n=0;n<e.shape[o].length;n++)if(e.shape[o][n]===1){const a=t+o,l=i+n;for(let r=-1;r<=1;r++)for(let c=-1;c<=1;c++){const h=a+r,d=l+c;h>=0&&h<this.boardSize&&d>=0&&d<this.boardSize&&s.add(`${h},${d}`)}}this.showBombExplosionEffect(t,i,s.size),setTimeout(()=>{this.clearBombCells(s)},1200)}handleLightningMagic(e,t,i){console.log("⚡ Lightning magic triggered!",e);const s={rows:[],columns:[],squares:[]};for(let o=0;o<e.shape.length;o++)for(let n=0;n<e.shape[o].length;n++)if(e.shape[o][n]===1){const a=t+o,l=i+n;s.rows.includes(a)||s.rows.push(a),s.columns.includes(l)||s.columns.push(l)}this.showLightningEffect(t,i,s),setTimeout(()=>{this.forceMagicBlockClears(s)},1e3)}handleGhostMagic(e,t,i){console.log("👻 Ghost magic triggered!",e),this.showGhostEffect(t,i);const s=this.scoringSystem.checkForCompletedLines(this.board);s.rows.length>0||s.columns.length>0||s.squares.length>0?setTimeout(()=>{this.forceMagicBlockClears(s)},800):this.showMagicBlockStandbyMessage(t,i)}findLinesContainingMagicBlock(e,t,i){const s={rows:[],columns:[],squares:[]};for(let o=0;o<e.shape.length;o++)for(let n=0;n<e.shape[o].length;n++)if(e.shape[o][n]===1){const a=t+o,l=i+n;this.board[a].every(h=>h===1)&&(s.rows.includes(a)||s.rows.push(a)),this.board.every(h=>h[l]===1)&&(s.columns.includes(l)||s.columns.push(l));const r=Math.floor(a/3),c=Math.floor(l/3);if(this.isSquareComplete(r,c)){const h=`${r}-${c}`;s.squares.some(d=>`${d.row}-${d.col}`===h)||s.squares.push({row:r,col:c})}}return s}isSquareComplete(e,t){const i=e*3,s=t*3;for(let o=i;o<i+3;o++)for(let n=s;n<s+3;n++)if(this.board[o][n]!==1)return!1;return!0}showMagicBlockEffect(e,t){const i=this.cellSize,s=t*i+i/2,o=e*i+i/2,n=document.createElement("div");if(n.textContent="🔮 MAGIC! 🔮",n.style.cssText=`
            position: absolute;
            left: ${s}px;
            top: ${o}px;
            transform: translate(-50%, -50%);
            color: #ff4444;
            font-size: 1.5rem;
            font-weight: bold;
            text-shadow: 0 0 10px rgba(255, 68, 68, 0.8);
            pointer-events: none;
            z-index: 1000;
            animation: magicBlockActivation 1s ease-out forwards;
        `,!document.querySelector("#magic-effect-styles")){const a=document.createElement("style");a.id="magic-effect-styles",a.textContent=`
                @keyframes magicBlockActivation {
                    0% { 
                        transform: translate(-50%, -50%) scale(0.5);
                        opacity: 0;
                    }
                    50% { 
                        transform: translate(-50%, -50%) scale(1.2);
                        opacity: 1;
                    }
                    100% { 
                        transform: translate(-50%, -50%) scale(1) translateY(-20px);
                        opacity: 0;
                    }
                }
            `,document.head.appendChild(a)}this.canvas.parentElement.appendChild(n),setTimeout(()=>{n.parentElement&&n.parentElement.removeChild(n)},1e3)}forceMagicBlockClears(e){this.pendingClears=e,this.pendingClearsTimestamp=Date.now();const t=this.scoringSystem.calculateScoreForClears(e,this.difficultyManager.getScoreMultiplier());this.scoringSystem.addScore(t.totalScore),this.score=this.scoringSystem.getScore(),this.highlightClearingBlocks(e),setTimeout(()=>{this.completeLineClear(wildLines)},800)}showMagicBlockActivationFeedback(e,t,i){const s=this.cellSize,o=t*s+s/2,n=e*s+s/2,a=this.constrainPopupPosition(o,n,200,100),l=a.x,r=a.y,c=document.createElement("div");c.className="magic-block-activation",c.innerHTML=`
            <div class="magic-icon">🔮</div>
            <div class="magic-text">MAGIC ACTIVATED!</div>
            <div class="magic-subtext">${i.name}</div>
        `,c.style.position="absolute",c.style.left=`${l}px`,c.style.top=`${r}px`,c.style.transform="translate(-50%, -50%)",c.style.color="#ff6b6b",c.style.fontSize="1rem",c.style.fontWeight="700",c.style.textAlign="center",c.style.textShadow="0 0 10px #ff6b6b",c.style.pointerEvents="none",c.style.zIndex="9999",c.style.opacity="0",c.style.animation="magicActivation 2s ease-out forwards",this.canvas.parentElement.appendChild(c),setTimeout(()=>{c.parentElement&&c.parentElement.removeChild(c)},2e3)}constrainPopupPosition(e,t,i=200,s=100){const o=this.canvas.getBoundingClientRect(),n=o.left,a=o.top,l=this.canvas.width,r=this.canvas.height,c=n+e,h=a+t,d=c-i/2,f=c+i/2,p=h-s/2,u=h+s/2,v=10;let y=e,S=t;return d<n+v?y=v+i/2:f>n+l-v&&(y=l-v-i/2),p<a+v?S=v+s/2:u>a+r-v&&(S=r-v-s/2),{x:y,y:S}}showMagicBlockClearExplanation(e,t,i){const s=this.cellSize,o=i*s+s/2,n=t*s+s/2,a=this.constrainPopupPosition(o,n,250,120),l=a.x,r=a.y,c=e.rows.length+e.columns.length+e.squares.length;let h="";e.rows.length>0&&(h+=`${e.rows.length} row${e.rows.length>1?"s":""}`),e.columns.length>0&&(h&&(h+=", "),h+=`${e.columns.length} column${e.columns.length>1?"s":""}`),e.squares.length>0&&(h&&(h+=", "),h+=`${e.squares.length} square${e.squares.length>1?"s":""}`);const d=document.createElement("div");d.className="magic-block-explanation",d.innerHTML=`
            <div class="magic-clear-title">✨ MAGIC CLEAR! ✨</div>
            <div class="magic-clear-details">Cleared ${h}</div>
            <div class="magic-clear-bonus">+${c*50} Magic Bonus!</div>
        `,d.style.position="absolute",d.style.left=`${l}px`,d.style.top=`${r-60}px`,d.style.transform="translate(-50%, -50%)",d.style.color="#ffd700",d.style.fontSize="0.9rem",d.style.fontWeight="600",d.style.textAlign="center",d.style.textShadow="0 0 8px #ffd700",d.style.pointerEvents="none",d.style.zIndex="10000",d.style.opacity="0",d.style.animation="magicExplanation 3s ease-out forwards",d.style.background="rgba(0, 0, 0, 0.8)",d.style.padding="0.5rem",d.style.borderRadius="8px",d.style.border="2px solid #ffd700",this.canvas.parentElement.appendChild(d),setTimeout(()=>{d.parentElement&&d.parentElement.removeChild(d)},3e3)}showMagicBlockStandbyMessage(e,t){const i=this.cellSize,s=t*i+i/2,o=e*i+i/2,n=this.constrainPopupPosition(s,o,180,80),a=n.x,l=n.y,r=document.createElement("div");r.className="magic-block-standby",r.innerHTML=`
            <div class="magic-standby-text">🔮 Magic Ready</div>
            <div class="magic-standby-subtext">Will clear any completed line</div>
        `,r.style.position="absolute",r.style.left=`${a}px`,r.style.top=`${l-30}px`,r.style.transform="translate(-50%, -50%)",r.style.color="#96ceb4",r.style.fontSize="0.8rem",r.style.fontWeight="600",r.style.textAlign="center",r.style.textShadow="0 0 6px #96ceb4",r.style.pointerEvents="none",r.style.zIndex="9998",r.style.opacity="0",r.style.animation="magicStandby 2s ease-out forwards",this.canvas.parentElement.appendChild(r),setTimeout(()=>{r.parentElement&&r.parentElement.removeChild(r)},2e3)}showBombExplosionEffect(e,t,i){const s=this.cellSize,o=t*s+s/2,n=e*s+s/2,a=document.createElement("div");a.className="bomb-explosion",a.innerHTML=`
            <div class="bomb-icon">💥</div>
            <div class="bomb-text">BOMB EXPLOSION!</div>
            <div class="bomb-details">Cleared ${i} cells</div>
            <div class="bomb-bonus">+${i*10} Bomb Bonus!</div>
        `,a.style.position="absolute",a.style.left=`${o}px`,a.style.top=`${n}px`,a.style.transform="translate(-50%, -50%)",a.style.color="#ff4444",a.style.fontSize="1rem",a.style.fontWeight="700",a.style.textAlign="center",a.style.textShadow="0 0 10px #ff4444",a.style.pointerEvents="none",a.style.zIndex="1003",a.style.opacity="0",a.style.animation="bombExplosion 2.5s ease-out forwards",a.style.background="rgba(0, 0, 0, 0.9)",a.style.padding="0.8rem",a.style.borderRadius="12px",a.style.border="3px solid #ff4444",this.canvas.parentElement.appendChild(a),setTimeout(()=>{a.parentElement&&a.parentElement.removeChild(a)},2500)}clearBombCells(e){let t=0;e.forEach(s=>{const[o,n]=s.split(",").map(Number);this.board[o][n]===1&&(this.board[o][n]=0,t++)});const i=t*10;this.scoringSystem.addPlacementPoints(i,this.difficultyManager.getScoreMultiplier()),this.score=this.scoringSystem.getScore(),this.drawBoard(),this.updateUI(),console.log(`💣 Bomb cleared ${t} cells for ${i} bonus points`)}showLightningEffect(e,t,i){const s=this.cellSize,o=t*s+s/2,n=e*s+s/2,a=i.rows.length+i.columns.length;let l="";i.rows.length>0&&(l+=`${i.rows.length} row${i.rows.length>1?"s":""}`),i.columns.length>0&&(l&&(l+=" + "),l+=`${i.columns.length} column${i.columns.length>1?"s":""}`);const r=document.createElement("div");r.className="lightning-strike",r.innerHTML=`
            <div class="lightning-icon">⚡</div>
            <div class="lightning-text">LIGHTNING STRIKE!</div>
            <div class="lightning-details">Cleared ${l}</div>
            <div class="lightning-bonus">+${a*25} Lightning Bonus!</div>
        `,r.style.position="absolute",r.style.left=`${o}px`,r.style.top=`${n}px`,r.style.transform="translate(-50%, -50%)",r.style.color="#ffd700",r.style.fontSize="1rem",r.style.fontWeight="700",r.style.textAlign="center",r.style.textShadow="0 0 15px #ffd700, 0 0 30px #ffd700",r.style.pointerEvents="none",r.style.zIndex="1003",r.style.opacity="0",r.style.animation="lightningStrike 2s ease-out forwards",r.style.background="rgba(0, 0, 0, 0.9)",r.style.padding="0.8rem",r.style.borderRadius="12px",r.style.border="3px solid #ffd700",this.canvas.parentElement.appendChild(r),setTimeout(()=>{r.parentElement&&r.parentElement.removeChild(r)},2e3)}showGhostEffect(e,t){const i=this.cellSize,s=t*i+i/2,o=e*i+i/2,n=document.createElement("div");n.className="ghost-phase",n.innerHTML=`
            <div class="ghost-icon">👻</div>
            <div class="ghost-text">GHOST PHASE!</div>
            <div class="ghost-details">Passed through obstacles</div>
        `,n.style.position="absolute",n.style.left=`${s}px`,n.style.top=`${o}px`,n.style.transform="translate(-50%, -50%)",n.style.color="#9370db",n.style.fontSize="1rem",n.style.fontWeight="700",n.style.textAlign="center",n.style.textShadow="0 0 10px #9370db",n.style.pointerEvents="none",n.style.zIndex="1003",n.style.opacity="0",n.style.animation="ghostPhase 2s ease-out forwards",n.style.background="rgba(0, 0, 0, 0.85)",n.style.padding="0.8rem",n.style.borderRadius="12px",n.style.border="3px dashed #9370db",this.canvas.parentElement.appendChild(n),setTimeout(()=>{n.parentElement&&n.parentElement.removeChild(n)},2e3)}showSpeedTimerFeedback(e,t,i){const s=this.cellSize,o=i*s+s/2,n=t*s+s/2,a=this.scoringSystem.getSpeedMode(),l=document.createElement("div");l.className="speed-timer-text",a==="punishment"?l.textContent=`-${Math.abs(e)} Too Slow!`:l.textContent=`+${e} Speed!`,l.style.cssText=`
            position: absolute;
            left: ${o}px;
            top: ${n}px;
            transform: translate(-50%, -50%);
            color: ${a==="punishment"?"#ff3333":"#ff6b35"};
            font-weight: 900;
            font-size: 1.2rem;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);
            pointer-events: none;
            z-index: 1000;
            animation: speedTimerFloat 1.5s ease-out forwards;
        `;const r=document.getElementById("board-overlay");r&&(r.appendChild(l),setTimeout(()=>{l.parentNode&&l.parentNode.removeChild(l)},1500)),this.effectsManager.onSpeedTimer(o,n,e)}queueNotification(e,t,i=2e3){this.notificationQueue.push({type:e,data:t,duration:i}),this.processNotificationQueue()}processNotificationQueue(){if(this.currentNotification||this.notificationQueue.length===0)return;const e=this.notificationQueue.shift();this.currentNotification=e,this.showNotification(e),this.notificationTimeout=setTimeout(()=>{this.hideCurrentNotification()},e.duration)}showNotification(e){const{type:t,data:i}=e;switch(t){case"multiplier":this.showMultiplierNotification(i);break;case"speed":this.showSpeedNotification(i);break;case"placement":this.showPlacementNotification(i);break;case"pattern":this.showPatternNotification(i);break}}showMultiplierNotification(e){const{multiplier:t,chain:i}=e;this.canvas.width/2,this.canvas.height/2;const s=document.createElement("div");s.className="multiplier-notification",s.style.cssText=`
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            background: rgba(255, 0, 100, 0.9);
            color: white;
            border-radius: 50%;
            width: 120px;
            height: 120px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            font-weight: bold;
            z-index: 1000;
            pointer-events: none;
            animation: multiplierPulse 0.5s ease-out;
        `,s.innerHTML=`
            <div style="font-size: 32px;">${t}x</div>
            <div style="font-size: 14px; margin-top: 5px;">Chain: ${i}</div>
        `,document.body.appendChild(s),this.currentNotificationElement=s}showSpeedNotification(e){const{bonus:t,x:i,y:s}=e,n=this.scoringSystem.getSpeedMode()==="punishment",a=document.createElement("div");a.className="speed-notification",a.style.cssText=`
            position: absolute;
            left: ${i}px;
            top: ${s}px;
            transform: translate(-50%, -50%);
            background: ${n?"rgba(255, 51, 51, 0.9)":"rgba(0, 150, 255, 0.9)"};
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 16px;
            font-weight: bold;
            z-index: 1000;
            pointer-events: none;
            animation: speedPulse 0.5s ease-out;
        `,n?a.textContent=`-${Math.abs(t)} Too Slow!`:a.textContent=`+${t} Speed!`,document.body.appendChild(a),this.currentNotificationElement=a}showPlacementNotification(e){const{points:t,x:i,y:s}=e,o=document.createElement("div");o.className="placement-notification",o.style.cssText=`
            position: absolute;
            left: ${i}px;
            top: ${s}px;
            transform: translate(-50%, -50%);
            background: rgba(0, 200, 0, 0.9);
            color: white;
            padding: 6px 12px;
            border-radius: 15px;
            font-size: 14px;
            font-weight: bold;
            z-index: 1000;
            pointer-events: none;
            animation: placementPulse 0.5s ease-out;
        `,o.textContent=`+${t}`,document.body.appendChild(o),this.currentNotificationElement=o}showPatternNotification(e){const{pattern:t,name:i}=e,s=document.createElement("div");s.className="pattern-notification",s.style.cssText=`
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            background: rgba(255, 165, 0, 0.9);
            color: white;
            padding: 12px 20px;
            border-radius: 25px;
            font-size: 18px;
            font-weight: bold;
            z-index: 1000;
            pointer-events: none;
            animation: patternPulse 0.5s ease-out;
            text-align: center;
        `,s.innerHTML=`
            <div style="font-size: 20px;">${i}</div>
            <div style="font-size: 14px; margin-top: 4px;">Pattern Bonus!</div>
        `,document.body.appendChild(s),this.currentNotificationElement=s}hideCurrentNotification(){this.currentNotificationElement&&(this.currentNotificationElement.remove(),this.currentNotificationElement=null),this.notificationTimeout&&(clearTimeout(this.notificationTimeout),this.notificationTimeout=null),this.currentNotification=null,setTimeout(()=>{this.processNotificationQueue()},100)}resetStuckUIState(){console.log("Resetting stuck UI state..."),this.pendingClears=null,this.pendingClearResult=null,this.pendingClearsTimestamp=null,this.clearTimeoutId&&(clearTimeout(this.clearTimeoutId),this.clearTimeoutId=null),this.safetyTimeoutId&&(clearTimeout(this.safetyTimeoutId),this.safetyTimeoutId=null),this.drawBoard(),!this.blockManager.currentBlocks||this.blockManager.currentBlocks.length===0?(console.log("No blocks available, generating new blocks..."),this.generateNewBlocks()):(console.log("Refreshing existing blocks..."),this.blockPalette.updateBlocks(this.blockManager.currentBlocks)),this.updatePlaceabilityIndicators(),this.updateUI(),console.log("UI state reset complete")}checkGameOver(){if(this.board||(console.error("EMERGENCY: Board is undefined in checkGameOver, reinitializing..."),this.board=this.initializeBoard(),this.updatePlaceabilityIndicators()),!this.isInitialized||this.isGameOver||this.blockManager.currentBlocks.length===0)return;if(this.blockPalette.areAllPiecesTimedOut()){console.log("Game Over: All pieces timed out"),this.gameOver();return}const e=this.computePlaceabilityMap();if(Object.values(e).some(i=>i)){this.preGameOverPending=!1;return}this.preGameOverPending||(this.preGameOverPending=!0,this.blockPalette&&this.blockPalette.showPreGameOverIndicator&&this.blockPalette.showPreGameOverIndicator(1250),setTimeout(()=>{this.isGameOver||(!Object.values(this.computePlaceabilityMap()).some(s=>s)?this.gameOver():this.preGameOverPending=!1)},1250))}handlePieceTimeout(e){console.log("Piece timed out:",e),this.blockPalette.areAllPiecesTimedOut()&&setTimeout(()=>{this.isGameOver||(console.log("All pieces timed out - Game Over"),this.gameOver())},1e3)}updatePlaceabilityIndicators(){if(!this.blockManager||!this.blockPalette||!this.blockManager.currentBlocks||this.blockManager.currentBlocks.length===0)return;this.blockPalette.clearPlaceability();const e=this.computePlaceabilityMap(),t=Object.keys(e).filter(i=>e[i]);this.blockPalette.setPlaceability&&(t.length===1?this.blockPalette.setPlaceability(e,{highlightLast:!0,durationMs:0}):t.length===0?this.blockPalette.showPreGameOverIndicator(0):this.blockPalette.setPlaceability(e,{highlightLast:!1,durationMs:0}))}computePlaceabilityMap(){const e={};if(!this.blockManager||!this.blockManager.currentBlocks)return e;for(const t of this.blockManager.currentBlocks)e[t.id]=this.canPlaceAnywhere(t);return e}canPlaceAnywhere(e){for(let t=0;t<this.boardSize;t++)for(let i=0;i<this.boardSize;i++)if(this.blockManager.canPlaceBlock(e,t,i,this.board))return!0;return!1}startSpeedTimerCountdown(){this.speedTimerInterval&&clearInterval(this.speedTimerInterval),this.speedTimerStartTime=Date.now(),this.speedTimerInterval=setInterval(()=>{this.updateSpeedTimerDisplay()},100)}stopSpeedTimerCountdown(){this.speedTimerInterval&&(clearInterval(this.speedTimerInterval),this.speedTimerInterval=null),this.speedTimerStartTime=null}updateSpeedTimerDisplay(){const e=this.difficultySettings.getSettingsForDifficulty(this.difficulty);if(!(e.showSpeedTimer===!0)||this.speedDisplayMode!=="timer")return;const i=document.getElementById("speed-timer"),s=document.getElementById("speed-timer-value");if(i&&s&&this.speedTimerStartTime){const o=Date.now()-this.speedTimerStartTime,a=(this.storage.loadSettings().speedTimerDuration||10)*1e3;if(o>=a){this.stopSpeedTimerCountdown();const r=e.speedTimerPrecision||"seconds";if(r==="milliseconds"){const c=(a/1e3).toFixed(1);s.textContent=`${c}s`}else if(r==="high-precision"){const c=(a/1e3).toFixed(2);s.textContent=`${c}s`}else{const c=Math.floor(a/1e3);s.textContent=`${c}s`}return}const l=e.speedTimerPrecision||"seconds";if(l==="milliseconds"){const r=(o/1e3).toFixed(1);s.textContent=`${r}s`}else if(l==="high-precision"){const r=(o/1e3).toFixed(2);s.textContent=`${r}s`}else{const r=Math.floor(o/1e3);s.textContent=`${r}s`}}}handleProgressModeURL(){const e=new URLSearchParams(window.location.search),t=e.get("mode"),i=e.get("level"),s=e.get("difficulty");t==="progress"&&i&&s&&(console.log(`🎮 Starting Progress Mode from URL: Level ${i}, Difficulty ${s}`),this.startProgressModeLevel(parseInt(i),s))}setGameMode(e){this.gameMode=e,console.log(`🎮 Game mode set to: ${e}`)}startProgressModeLevel(e,t){console.log(`🎮 Starting Progress Mode level ${e} on ${t} difficulty`),this.setGameMode("progress"),this.currentProgressLevel=e;const i=this.levelManager.getLevelDefinition(e,t);this.applyLevelSettings(i),this.newGame(),this.progressModeUI.showProgressDisplay()}applyLevelSettings(e){this.selectDifficulty(e.difficulty);const t=e.mechanics;this.setBlockComplexity(t.blockComplexity),this.setTimePressure(t.timePressure),this.setBoardConstraints(t.boardConstraints),this.setSpecialMechanics(t.specialMechanics)}setBlockComplexity(e){this.currentBlockComplexity=e,console.log(`🎮 Block complexity set to: ${e}`)}setTimePressure(e){this.currentTimePressure=e,console.log(`🎮 Time pressure set to: ${e}`)}setBoardConstraints(e){this.currentBoardConstraints=e,console.log(`🎮 Board constraints set to: ${e}`)}setSpecialMechanics(e){this.enableMagicBlocks=e.includes("magicBlocks"),this.enableWildShapes=e.includes("wildShapes"),this.enablePetrification=e.includes("petrification"),this.enableDeadPixels=e.includes("deadPixels"),console.log("🎮 Special mechanics enabled:",e)}checkLevelObjectives(){var s,o;if(this.gameMode!=="progress"||!this.currentProgressLevel)return null;const t=this.levelManager.getLevelDefinition(this.currentProgressLevel,this.difficulty).objectives,i={score:this.score,movesUsed:this.moveCount,timeUsed:this.getElapsedTime(),combos:((s=this.scoringSystem)==null?void 0:s.totalCombos)||0,objectives:{scoreMet:this.score>=t.scoreTarget,movesMet:this.moveCount<=t.maxMoves,timeMet:!t.timeLimit||this.getElapsedTime()<=t.timeLimit,combosMet:((o=this.scoringSystem)==null?void 0:o.totalCombos)>=t.comboRequirement}};return i.allObjectivesMet=Object.values(i.objectives).every(n=>n),i}completeProgressLevel(){if(this.gameMode!=="progress"||!this.currentProgressLevel)return;const e=this.checkLevelObjectives();if(!e||!e.allObjectivesMet){console.log("🎮 Level objectives not met, cannot complete level");return}console.log(`🎮 Completing Progress Mode level ${this.currentProgressLevel}`),this.levelManager.completeLevel(this.currentProgressLevel,e),this.progressModeUI.onLevelCompleted(e),this.currentProgressLevel=null}getElapsedTime(){return this.gameStartTime?Math.floor((Date.now()-this.gameStartTime)/1e3):0}showProgressModeSelection(){this.progressModeUI.showLevelSelection()}progressModeGameOver(){if(this.gameMode!=="progress"){this.gameOver();return}const e=this.checkLevelObjectives();e&&e.allObjectivesMet?this.completeProgressLevel():this.showProgressModeFailure()}showProgressModeFailure(){console.log("🎮 Progress Mode level failed"),this.gameOver()}}function I(){window.game=new pe,localStorage.getItem("blockdoku_start_new_game")==="true"&&(localStorage.removeItem("blockdoku_start_new_game"),window.game&&(window.game.isGameOver=!1,window.game.newGame())),window.resetStuckUI=function(){window.game&&window.game.resetStuckUIState?(window.game.resetStuckUIState(),console.log("Stuck UI state has been reset")):console.error("Game not initialized or resetStuckUIState method not available")},console.log("Global resetStuckUI() function available for debugging")}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",I):I();
