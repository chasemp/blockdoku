import"./modulepreload-polyfill-B5Qt9EMX.js";/* empty css             *//* empty css             */import{G as U,C as O,P as j}from"./confirmation-dialog-CE0X1pfx.js";import{S as R}from"./sound-manager-DEf2ZdWT.js";import{b as H}from"./build-info-Dwp5dZmk.js";class N{constructor(){this.storage=new U,this.settings=this.storage.loadSettings(),this.currentTheme=this.settings.theme||"wood",this.pwaInstallManager=null,this.confirmationDialog=new O,this.soundManager=new R,this.init()}init(){this.loadSettings(),this.setupEventListeners(),this.updateUI(),this.updateBuildInfo(),this.initializePWA()}initializePWA(){try{this.pwaInstallManager=new j,console.log("PWA Install Manager initialized in settings")}catch(e){console.error("Failed to initialize PWA Install Manager:",e)}}loadSettings(){console.log("Settings.js loading settings:",this.settings),this.currentTheme=this.settings.theme||"wood",console.log("Settings.js current theme:",this.currentTheme);const e=document.documentElement.getAttribute("data-theme");console.log("Current data-theme attribute:",e),!e||e!==this.currentTheme?(console.log("Applying theme from settings.js:",this.currentTheme),this.applyTheme(this.currentTheme)):console.log("Theme already applied, skipping"),this.fixSectionPlacement(),this.loadEffectsSettings()}loadEffectsSettings(){const e=document.getElementById("sound-enabled");e&&(e.checked=this.settings.soundEnabled===!0);const t=document.getElementById("sound-enabled-sounds-section");t&&(t.checked=this.settings.soundEnabled===!0);const n=document.getElementById("animations-enabled");n&&(n.checked=this.settings.animationsEnabled!==!1);const o=document.getElementById("block-hover-effects");o&&(o.checked=this.settings.blockHoverEffects!==!1);const d=document.getElementById("block-selection-glow");d&&(d.checked=this.settings.blockSelectionGlow!==!1);const i=document.getElementById("block-entrance-animations");i&&(i.checked=this.settings.blockEntranceAnimations!==!1);const r=document.getElementById("particle-effects");r&&(r.checked=this.settings.particleEffects!==!1);const a=document.getElementById("animation-speed");a&&(a.value=this.settings.animationSpeed||"normal");const c=document.getElementById("haptic-enabled");c&&(c.checked=this.settings.hapticEnabled!==!1);const l=document.getElementById("enable-hints");l&&(l.checked=this.settings.enableHints===!0);const g=document.getElementById("enable-timer");g&&(g.checked=this.settings.enableTimer===!0);const m=document.getElementById("enable-petrification");m&&(m.checked=this.settings.enablePetrification===!0);const h=document.getElementById("enable-dead-pixels");h&&(h.checked=this.settings.enableDeadPixels===!0);const v=document.getElementById("dead-pixels-intensity"),b=document.getElementById("dead-pixels-intensity-value"),B=document.getElementById("dead-pixels-intensity-container");if(v&&b){const S=this.settings.deadPixelsIntensity||0;v.value=S,b.textContent=S,B&&(B.style.display=this.settings.enableDeadPixels===!0?"block":"none")}const L=document.getElementById("auto-save");L&&(L.checked=this.settings.autoSave!==!1);const w=document.getElementById("show-points");w&&(w.checked=this.settings.showPoints===!0);const M=document.getElementById("show-placement-points");if(M&&(M.checked=this.settings.showPlacementPoints===!0),this.speedModeOrder=["ignored","bonus","punishment"],this.currentSpeedModeIndex=0,document.getElementById("speed-mode-toggle")){const S=this.settings.speedMode||"ignored";this.currentSpeedModeIndex=this.speedModeOrder.indexOf(S),this.currentSpeedModeIndex===-1&&(this.currentSpeedModeIndex=0),this.updateSpeedModeDisplay()}const x=document.getElementById("success-mode-enabled");x&&(x.checked=this.settings.successModeEnabled!==!1);const P=document.getElementById("show-speed-timer");P&&(P.checked=this.settings.showSpeedTimer===!0);const T=document.getElementById("enable-prize-recognition");T&&(T.checked=this.settings.enablePrizeRecognition!==!1);const A=document.getElementById("combo-streak"),$=document.getElementById("combo-cumulative");A&&$&&((this.settings.comboDisplayMode||"cumulative")==="cumulative"?$.checked=!0:A.checked=!0),this.updateAnimationSettingsVisibility()}updateAnimationSettingsVisibility(){const e=document.getElementById("animations-enabled"),t=document.getElementById("animation-settings");e&&t&&(e.checked?(t.style.display="block",t.style.opacity="1"):(t.style.display="none",t.style.opacity="0.5"))}setupEventListeners(){document.querySelectorAll(".nav-item[data-section]").forEach(s=>{let u=null,E=null,f=!1;const I=p=>{p.preventDefault(),this.showSection(s.dataset.section)},C=()=>{E&&(clearTimeout(E),E=null),f=!1,u=null,s.classList.remove("pressing")},D=p=>{p.preventDefault(),!f&&(f=!0,u=Date.now(),s.classList.add("pressing"),E=setTimeout(()=>{f&&(I(p),C())},10))},k=p=>{f&&(p.preventDefault(),C())};s.addEventListener("mousedown",D),s.addEventListener("mouseup",k),s.addEventListener("mouseleave",k),s.addEventListener("touchstart",D,{passive:!1}),s.addEventListener("touchend",k,{passive:!1}),s.addEventListener("touchcancel",k,{passive:!1}),s.addEventListener("click",p=>{p.preventDefault(),!f&&(!u||Date.now()-u<200)&&I(p)})}),document.querySelectorAll(".theme-option").forEach(s=>{let u=null,E=null,f=!1,I=null;const C=y=>{this.selectTheme(y)},D=()=>{E&&(clearTimeout(E),E=null),f=!1,u=null,s.classList.remove("pressing")},k=y=>{y.preventDefault(),!f&&(f=!0,u=Date.now(),I=y.currentTarget.dataset.theme,s.classList.add("pressing"),E=setTimeout(()=>{f&&I&&(C(I),D())},10))},p=y=>{f&&(y.preventDefault(),D())};s.addEventListener("mousedown",k),s.addEventListener("mouseup",p),s.addEventListener("mouseleave",p),s.addEventListener("touchstart",k,{passive:!1}),s.addEventListener("touchend",p,{passive:!1}),s.addEventListener("touchcancel",p,{passive:!1}),s.addEventListener("click",y=>{y.preventDefault(),!f&&(!u||Date.now()-u<200)&&C(y.currentTarget.dataset.theme)})});const e=document.getElementById("enable-hints");e&&e.addEventListener("change",s=>{this.updateSetting("enableHints",s.target.checked)});const t=document.getElementById("enable-timer");t&&t.addEventListener("change",s=>{this.updateSetting("enableTimer",s.target.checked)});const n=document.getElementById("enable-petrification");n&&n.addEventListener("change",s=>{this.updateSetting("enablePetrification",s.target.checked)});const o=document.getElementById("enable-dead-pixels");o&&o.addEventListener("change",s=>{this.updateSetting("enableDeadPixels",s.target.checked);const u=document.getElementById("dead-pixels-intensity-container");u&&(u.style.display=s.target.checked?"block":"none")});const d=document.getElementById("dead-pixels-intensity"),i=document.getElementById("dead-pixels-intensity-value");d&&i&&d.addEventListener("input",s=>{const u=parseInt(s.target.value);i.textContent=u,this.updateSetting("deadPixelsIntensity",u)});const r=document.getElementById("sound-enabled");r&&r.addEventListener("change",s=>{this.updateSetting("soundEnabled",s.target.checked);const u=document.getElementById("sound-enabled-sounds-section");u&&(u.checked=s.target.checked)});const a=document.getElementById("sound-enabled-sounds-section");a&&a.addEventListener("change",s=>{this.updateSetting("soundEnabled",s.target.checked);const u=document.getElementById("sound-enabled");u&&(u.checked=s.target.checked)});const c=document.getElementById("animations-enabled");c&&c.addEventListener("change",s=>{this.updateSetting("animationsEnabled",s.target.checked),this.updateAnimationSettingsVisibility()});const l=document.getElementById("block-hover-effects");l&&l.addEventListener("change",s=>{this.updateSetting("blockHoverEffects",s.target.checked)});const g=document.getElementById("block-selection-glow");g&&g.addEventListener("change",s=>{this.updateSetting("blockSelectionGlow",s.target.checked)});const m=document.getElementById("block-entrance-animations");m&&m.addEventListener("change",s=>{this.updateSetting("blockEntranceAnimations",s.target.checked)});const h=document.getElementById("particle-effects");h&&h.addEventListener("change",s=>{this.updateSetting("particleEffects",s.target.checked)});const v=document.getElementById("animation-speed");v&&v.addEventListener("change",s=>{this.updateSetting("animationSpeed",s.target.value)});const b=document.getElementById("auto-save");b&&b.addEventListener("change",s=>{this.updateSetting("autoSave",s.target.checked)});const B=document.getElementById("show-points");B&&B.addEventListener("change",s=>{this.updateSetting("showPoints",s.target.checked),this.updateBlockPointsDisplay()});const L=document.getElementById("show-placement-points");L&&L.addEventListener("change",s=>{this.updateSetting("showPlacementPoints",s.target.checked)});const w=document.getElementById("speed-mode-toggle");w&&w.addEventListener("click",s=>{s.preventDefault(),this.cycleSpeedMode()});const M=document.getElementById("success-mode-enabled");M&&M.addEventListener("change",s=>{this.updateSetting("successModeEnabled",s.target.checked)});const G=document.getElementById("show-speed-timer");G&&G.addEventListener("change",s=>{this.updateSetting("showSpeedTimer",s.target.checked)});const x=document.getElementById("enable-prize-recognition");x&&x.addEventListener("change",s=>{this.updateSetting("enablePrizeRecognition",s.target.checked)});const P=document.getElementById("combo-streak"),T=document.getElementById("combo-cumulative");P&&T&&(P.addEventListener("change",s=>{s.target.checked&&this.updateSetting("comboDisplayMode","streak")}),T.addEventListener("change",s=>{s.target.checked&&this.updateSetting("comboDisplayMode","cumulative")}));const A=document.getElementById("haptic-enabled");A&&A.addEventListener("change",s=>{this.updateSetting("hapticEnabled",s.target.checked)});const $=document.getElementById("share-button");$&&$.addEventListener("click",()=>{this.shareGame()});const S=document.getElementById("share-scores-button");S&&S.addEventListener("click",()=>{this.shareHighScores()});const z=document.getElementById("view-last-game-btn");z&&z.addEventListener("click",()=>{this.viewLastGame()});const q=document.getElementById("reset-stats");q&&q.addEventListener("click",async()=>{if(await this.confirmationDialog.show(`⚠️ PERMANENT DATA LOSS WARNING ⚠️

This will permanently delete ALL your game data:
• All high scores for all difficulty levels
• All game statistics (games played, totals, combos)
• All personal best records
• All play time data

Your game settings and preferences will NOT be affected.

This action CANNOT be undone. Are you absolutely sure you want to continue?`)){this.storage.clearStatistics(),this.storage.clearHighScores();try{this.loadHighScores()}catch{}this.showNotification("All statistics and high scores have been permanently deleted")}})}showSection(e){document.querySelectorAll(".nav-item").forEach(o=>{o.classList.remove("active")});const t=document.querySelector(`[data-section="${e}"]`);t&&t.classList.add("active"),document.querySelectorAll(".settings-section").forEach(o=>{o.classList.remove("active")});const n=document.getElementById(`${e}-section`);n&&n.classList.add("active"),e==="scores"?this.loadHighScores():e==="sounds"&&this.loadSoundCustomization()}loadSoundCustomization(){const e=document.getElementById("sound-customization-container");if(!e)return;this.soundManager.setEnabled(!0);const t=this.soundManager.getGroupedSoundEffects(),n=this.soundManager.getAvailablePresets(),o=this.soundManager.getGroupedSoundSettings();let d="";for(const[a,c]of Object.entries(t)){const l=o[a]||"default",g=l==="mixed",m=l==="none";d+=`
                <div class="sound-group-item">
                    <div class="sound-group-info">
                        <h4>${c.name}</h4>
                        <p>${c.description}</p>
                        <div class="sound-group-details">
                            <small>Includes: ${c.sounds.length} sound${c.sounds.length!==1?"s":""}</small>
                            ${g?'<small class="mixed-indicator">⚠️ Mixed presets</small>':""}
                        </div>
                    </div>
                    <div class="sound-group-controls">
                        <select class="sound-group-preset-select" data-group="${a}">
                            <option value="default" ${l==="default"?"selected":""}>Default</option>
                            <option value="none" ${l==="none"?"selected":""}>None</option>
                            ${Object.entries(n).map(([h,v])=>h!=="default"?`<option value="${h}" ${l===h?"selected":""}>${v.name}</option>`:"").join("")}
                        </select>
                        <button class="sound-group-preview-btn" data-group="${a}">
                            🔊 Preview
                        </button>
                        <button class="sound-group-mute-btn ${m?"muted":""}" data-group="${a}" title="${m?"Unmute":"Mute"}">
                            ${m?"🔇":"🔊"}
                        </button>
                    </div>
                </div>
            `}d+=`
            <div class="sound-group-actions">
                <button class="sound-reset-all-btn" id="reset-all-sounds">
                    Reset All to Default
                </button>
                <button class="sound-advanced-btn" id="show-advanced-sounds">
                    Advanced Individual Settings
                </button>
            </div>
        `,e.innerHTML=d,e.querySelectorAll(".sound-group-preset-select").forEach(a=>{a.addEventListener("change",c=>{const l=c.target.dataset.group,g=c.target.value;this.soundManager.setGroupedSoundSettings(l,g);const m=c.target.parentElement.querySelector(".sound-group-mute-btn");m&&(g==="none"?(m.classList.add("muted"),m.textContent="🔇",m.title="Unmute"):(m.classList.remove("muted"),m.textContent="🔊",m.title="Mute"));const h=c.target.closest(".sound-group-item"),v=h.querySelector(".mixed-indicator");if(g==="mixed"){if(!v){const b=h.querySelector(".sound-group-details");b.innerHTML+='<small class="mixed-indicator">⚠️ Mixed presets</small>'}}else v&&v.remove()})}),e.querySelectorAll(".sound-group-preview-btn").forEach(a=>{a.addEventListener("click",c=>{const l=c.currentTarget.dataset.group;if(c.currentTarget.parentElement.querySelector(".sound-group-preset-select").value==="none"){const h=a.textContent;a.textContent="🔇 Silent",a.style.opacity="0.6",setTimeout(()=>{a.textContent=h,a.style.opacity="1"},500)}else this.soundManager.previewGroupedSound(l)})}),e.querySelectorAll(".sound-group-mute-btn").forEach(a=>{a.addEventListener("click",c=>{const l=c.currentTarget.dataset.group,g=c.currentTarget.parentElement.querySelector(".sound-group-preset-select");g.value==="none"?(g.value="default",this.soundManager.setGroupedSoundSettings(l,"default"),a.classList.remove("muted"),a.textContent="🔊",a.title="Mute"):(g.value="none",this.soundManager.setGroupedSoundSettings(l,"none"),a.classList.add("muted"),a.textContent="🔇",a.title="Unmute")})});const i=document.getElementById("reset-all-sounds");i&&i.addEventListener("click",async()=>{await this.confirmationDialog.show("Reset all sound effects to their default sounds?")&&this.resetAllSounds()});const r=document.getElementById("show-advanced-sounds");r&&r.addEventListener("click",()=>{this.toggleAdvancedSoundSettings()})}resetAllSounds(){this.soundManager.customSoundMappings={},this.soundManager.saveSoundMappings(),this.soundManager.createSounds(),this.loadSoundCustomization(),this.showNotification("All sounds reset to default")}toggleAdvancedSoundSettings(){const e=document.getElementById("sound-customization-container");if(!e)return;e.querySelector(".sound-effect-item")?this.loadSoundCustomization():this.loadAdvancedSoundCustomization()}loadAdvancedSoundCustomization(){const e=document.getElementById("sound-customization-container");if(!e)return;this.soundManager.setEnabled(!0);const t=this.soundManager.getSoundEffects(),n=this.soundManager.getAvailablePresets(),o=this.soundManager.customSoundMappings||{};let d="";for(const[i,r]of Object.entries(t)){const a=o[i]||"default",c=a==="none";d+=`
                <div class="sound-effect-item">
                    <div class="sound-effect-info">
                        <h4>${r.name}</h4>
                        <p>${r.description}</p>
                    </div>
                    <select class="sound-preset-select" data-sound="${i}">
                        <option value="default" ${a==="default"?"selected":""}>Default</option>
                        <option value="none" ${a==="none"?"selected":""}>None</option>
                        ${Object.entries(n).map(([l,g])=>l!=="default"?`<option value="${l}" ${a===l?"selected":""}>${g.name}</option>`:"").join("")}
                    </select>
                    <button class="sound-preview-btn" data-sound="${i}">
                        🔊 Preview
                    </button>
                    <button class="sound-mute-btn ${c?"muted":""}" data-sound="${i}" title="${c?"Unmute":"Mute"}">
                        ${c?"🔇":"🔊"}
                    </button>
                </div>
            `}d+=`
            <div class="sound-group-actions">
                <button class="sound-reset-all-btn" id="reset-all-sounds">
                    Reset All to Default
                </button>
                <button class="sound-advanced-btn" id="show-advanced-sounds">
                    Back to Grouped Settings
                </button>
            </div>
        `,e.innerHTML=d,this.setupIndividualSoundEventListeners(e)}setupIndividualSoundEventListeners(e){e.querySelectorAll(".sound-preset-select").forEach(o=>{o.addEventListener("change",d=>{const i=d.target.dataset.sound,r=d.target.value;this.soundManager.setCustomSound(i,r);const a=d.target.parentElement.querySelector(".sound-mute-btn");a&&(r==="none"?(a.classList.add("muted"),a.textContent="🔇",a.title="Unmute"):(a.classList.remove("muted"),a.textContent="🔊",a.title="Mute"))})}),e.querySelectorAll(".sound-preview-btn").forEach(o=>{o.addEventListener("click",d=>{const i=d.currentTarget.dataset.sound;if(d.currentTarget.parentElement.querySelector(".sound-preset-select").value==="none"){const c=o.textContent;o.textContent="🔇 Silent",o.style.opacity="0.6",setTimeout(()=>{o.textContent=c,o.style.opacity="1"},500)}else this.soundManager.play(i)})}),e.querySelectorAll(".sound-mute-btn").forEach(o=>{o.addEventListener("click",d=>{const i=d.currentTarget.dataset.sound,r=d.currentTarget.parentElement.querySelector(".sound-preset-select");r.value==="none"?(r.value="default",this.soundManager.setCustomSound(i,"default"),o.classList.remove("muted"),o.textContent="🔊",o.title="Mute"):(r.value="none",this.soundManager.setCustomSound(i,"none"),o.classList.add("muted"),o.textContent="🔇",o.title="Unmute")})});const t=document.getElementById("reset-all-sounds");t&&t.addEventListener("click",async()=>{await this.confirmationDialog.show("Reset all sound effects to their default sounds?")&&this.resetAllSounds()});const n=document.getElementById("show-advanced-sounds");n&&n.addEventListener("click",()=>{this.toggleAdvancedSoundSettings()})}selectTheme(e){this.currentTheme=e,this.applyTheme(e),this.updateThemeUI(),this.saveSettings()}applyTheme(e){let t=document.getElementById("theme-css");t||(t=document.createElement("link"),t.rel="stylesheet",t.id="theme-css",document.head.appendChild(t)),t.href=`css/themes/${e}.css`;try{Array.from(document.querySelectorAll('link[rel="stylesheet"]')).filter(i=>(i.getAttribute("href")||"").includes("/assets/wood-")||(i.href||"").includes("/assets/wood-")).forEach(i=>{i.disabled=e!=="wood"})}catch{}const n=document.getElementById("theme-css-light"),o=document.getElementById("theme-css-dark");n&&(n.media="all"),o&&(o.media="all"),document.documentElement.setAttribute("data-theme",e),document.body.className=document.body.className.replace(/light-theme|dark-theme|wood-theme/g,""),document.body.classList.add(`${e}-theme`)}updateSetting(e,t){this.settings[e]=t,this.saveSettings()}updateUI(){this.updateThemeUI(),this.updateGameSettingsUI()}updateThemeUI(){document.querySelectorAll(".theme-option").forEach(e=>{e.classList.remove("selected"),e.dataset.theme===this.currentTheme&&e.classList.add("selected")})}updateGameSettingsUI(){const e=document.getElementById("enable-hints");e&&(e.checked=this.settings.enableHints||!1);const t=document.getElementById("enable-timer");t&&(t.checked=this.settings.enableTimer||!1);const n=document.getElementById("auto-save");n&&(n.checked=this.settings.autoSave!==!1);const o=document.getElementById("show-points");o&&(o.checked=this.settings.showPoints||!1),this.loadEffectsSettings()}updateBlockPointsDisplay(){const e=this.settings.showPoints||!1;document.querySelectorAll(".block-info").forEach(n=>{e?n.classList.add("show-points"):n.classList.remove("show-points")})}cycleSpeedMode(){this.currentSpeedModeIndex=(this.currentSpeedModeIndex+1)%this.speedModeOrder.length;const e=this.speedModeOrder[this.currentSpeedModeIndex];this.updateSetting("speedMode",e),this.updateSpeedModeDisplay()}updateSpeedModeDisplay(){const e=document.getElementById("speed-mode-toggle"),t=document.getElementById("speed-mode-title"),n=document.getElementById("speed-mode-description");if(!e||!t||!n)return;const o=this.speedModeOrder[this.currentSpeedModeIndex],i={bonus:{title:"Bonus",description:"Faster = more points"},punishment:{title:"Punishment",description:"Faster = less points (scales with level)"},ignored:{title:"Ignored",description:"Speed doesn't affect score"}}[o];t.textContent=i.title,n.textContent=i.description}updateBuildInfo(){const e=()=>{if(H.isLoaded()){const t=document.getElementById("version-display"),n=document.getElementById("build-info");t&&(t.textContent=H.getDisplayVersion()),n&&(n.textContent=`Build: ${H.getBuildId()} (${H.getFormattedBuildDate()})`)}else setTimeout(e,100)};e()}loadHighScores(){const e=document.getElementById("high-scores-list"),t=document.getElementById("statistics-display");if(!e||!t){console.error("High scores elements not found");return}const n=this.storage.getHighScores(),o=this.storage.loadStatistics();console.log("Loading statistics:",o),n.length===0?e.innerHTML="<p>No high scores yet. Play a game to set your first record!</p>":e.innerHTML=n.map((d,i)=>`
                <div class="score-item">
                    <div class="rank">#${i+1}</div>
                    <div class="score-value">${d.score}</div>
                    <div class="score-details">${(d.difficulty||"normal").toUpperCase()} • Level ${d.level} • ${new Date(d.date).toLocaleDateString()}</div>
                </div>
            `).join(""),t.innerHTML=`
            <div class="stat-item">
                <span class="stat-label">Games Played:</span>
                <span class="stat-value">${o.gamesPlayed||0}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Score:</span>
                <span class="stat-value">${o.totalScore||0}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Best Score:</span>
                <span class="stat-value">${o.bestScore||0}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Lines:</span>
                <span class="stat-value">${o.totalLinesCleared||0}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Max Streak:</span>
                <span class="stat-value">${o.maxCombo||0}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Combos:</span>
                <span class="stat-value">${o.totalCombos||0}</span>
            </div>
        `}refreshStatistics(){console.log("Refreshing statistics display..."),this.loadHighScores()}saveSettings(){const e={...this.settings,theme:this.currentTheme};this.storage.saveSettings(e)}shareGame(){const e="https://blockdoku.523.life",t="Blockdoku - A Progressive Web App Puzzle Game";navigator.share?navigator.share({title:t,text:"Check out this awesome Blockdoku puzzle game!",url:e}).catch(o=>{console.log("Error sharing:",o),this.fallbackShare(e,t)}):this.fallbackShare(e,t)}fallbackShare(e,t){navigator.clipboard.writeText(e).then(()=>{this.showNotification("Game URL copied to clipboard!")}).catch(()=>{alert(`Share this game: ${e}`)})}shareHighScores(){const e=this.storage.getHighScores(),t=this.storage.loadStatistics();if(e.length===0){this.showNotification("No high scores to share yet!");return}let n=`🏆 Blockdoku High Scores

`;e.slice(0,5).forEach((i,r)=>{const a=(i.difficulty||"normal").toUpperCase(),c=new Date(i.date).toLocaleDateString();n+=`#${r+1} ${i.score.toLocaleString()} (${a}) - Level ${i.level} - ${c}
`}),n+=`
📊 Statistics:
`,n+=`Games Played: ${t.gamesPlayed}
`,n+=`Total Score: ${t.totalScore.toLocaleString()}
`,n+=`Best Score: ${t.bestScore.toLocaleString()}
`,n+=`Max Combo: ${t.maxCombo}
`;const o="https://blockdoku.523.life",d="My Blockdoku High Scores";navigator.share?navigator.share({title:d,text:n,url:o}).catch(i=>{console.log("Error sharing scores:",i),this.fallbackShareScores(n,o,d)}):this.fallbackShareScores(n,o,d)}fallbackShareScores(e,t,n){navigator.clipboard.writeText(`${e}

Play Blockdoku: ${t}`).then(()=>{this.showNotification("High scores copied to clipboard!")}).catch(()=>{alert(`${e}

Play Blockdoku: ${t}`)})}showNotification(e){const t=document.createElement("div");t.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            background: var(--primary-color, #007bff);
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            font-weight: 500;
            animation: slideIn 0.3s ease;
        `,t.textContent=e;const n=document.createElement("style");n.textContent=`
            @keyframes slideIn {
                from { transform: translateX(100%); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }
        `,document.head.appendChild(n),document.body.appendChild(t),setTimeout(()=>{t.remove(),n.remove()},3e3)}viewLastGame(){const e=localStorage.getItem("blockdoku_lastgame");if(!e){this.showNotification("No last game data available. Play a game first!");return}try{const t=JSON.parse(e);if(!t||!t.score)throw new Error("Invalid last game data");window.location.href="lastgame.html"}catch(t){console.error("Error checking last game data:",t),this.showNotification("Error loading last game data. Please try again.")}}fixSectionPlacement(){const e=document.getElementById("about-section"),t=document.getElementById("sounds-section"),n=document.getElementById("game-section");e&&n&&e.parentElement===n&&(e.remove(),n.insertAdjacentElement("afterend",e)),t&&n&&t.parentElement===n&&(t.remove(),n.insertAdjacentElement("afterend",t))}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{window.settingsManager=new N}):window.settingsManager=new N;
