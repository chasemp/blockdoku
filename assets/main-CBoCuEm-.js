const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./install-B2AQisTF.js","./install-rhC3yv2Z.css"])))=>i.map(i=>d[i]);
import{G as S,P as x}from"./install-B2AQisTF.js";/* empty css             */const w="modulepreload",B=function(h,t){return new URL(h,t).href},b={},v=function(t,e,s){let i=Promise.resolve();if(e&&e.length>0){const n=document.getElementsByTagName("link"),l=document.querySelector("meta[property=csp-nonce]"),a=(l==null?void 0:l.nonce)||(l==null?void 0:l.getAttribute("nonce"));i=Promise.allSettled(e.map(r=>{if(r=B(r,s),r in b)return;b[r]=!0;const c=r.endsWith(".css"),u=c?'[rel="stylesheet"]':"";if(!!s)for(let m=n.length-1;m>=0;m--){const g=n[m];if(g.href===r&&(!c||g.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${r}"]${u}`))return;const d=document.createElement("link");if(d.rel=c?"stylesheet":w,c||(d.as="script"),d.crossOrigin="",d.href=r,a&&d.setAttribute("nonce",a),document.head.appendChild(d),c)return new Promise((m,g)=>{d.addEventListener("load",m),d.addEventListener("error",()=>g(new Error(`Unable to preload CSS for ${r}`)))})}))}function o(n){const l=new Event("vite:preloadError",{cancelable:!0});if(l.payload=n,window.dispatchEvent(l),!l.defaultPrevented)throw n}return i.then(n=>{for(const l of n||[])l.status==="rejected"&&o(l.reason);return t().catch(o)})};class C{constructor(){this.blockShapes=this.defineBlockShapes(),this.currentBlocks=[],this.selectedBlock=null,this.selectedBlockPosition=null}defineBlockShapes(){return{single:{name:"Single",shape:[[1]],color:"#007bff",points:1},line2:{name:"Line 2",shape:[[1,1]],color:"#28a745",points:2},line3:{name:"Line 3",shape:[[1,1,1]],color:"#28a745",points:3},l2x2:{name:"L 2x2",shape:[[1,0],[1,1]],color:"#dc3545",points:3},l3x2:{name:"L 3x2",shape:[[1,0],[1,0],[1,1]],color:"#dc3545",points:4},t3x2:{name:"T 3x2",shape:[[1,1,1],[0,1,0]],color:"#ffc107",points:4},square2x2:{name:"Square 2x2",shape:[[1,1],[1,1]],color:"#6f42c1",points:4},z3x2:{name:"Z 3x2",shape:[[1,1,0],[0,1,1]],color:"#fd7e14",points:4}}}generateRandomBlocks(t=3,e="all",s=null){let i=Object.keys(this.blockShapes);if(s){const o=s.getAllowedShapes(),n=s.getBlockSizeRange();o!=="all"&&(i=i.filter(l=>o.includes(l))),i=i.filter(l=>{const a=this.blockShapes[l].shape,r=Math.max(a.length,a[0].length);return r>=n[0]&&r<=n[1]})}else e==="large"?i=i.filter(o=>{const n=this.blockShapes[o].shape;return Math.max(n.length,n[0].length)>=3}):e==="small"?i=i.filter(o=>{const n=this.blockShapes[o].shape;return Math.max(n.length,n[0].length)<=3}):e==="complex"&&(i=i.filter(o=>(this.blockShapes[o].shape,o.includes("L")||o.includes("T")||o.includes("Z")||o.includes("U")||o.includes("Cross")||o.includes("Plus"))));i.length===0&&(i=Object.keys(this.blockShapes)),this.currentBlocks=[];for(let o=0;o<t;o++){const n=i[Math.floor(Math.random()*i.length)],l={...this.blockShapes[n],id:`block_${o}_${Date.now()}`,rotation:0};this.currentBlocks.push(l)}return this.currentBlocks}rotateBlock(t){return t?{...t,shape:this.rotateMatrix(t.shape),rotation:(t.rotation+90)%360}:null}rotateMatrix(t){const e=t.length,s=t[0].length,i=[];for(let o=0;o<s;o++){i[o]=[];for(let n=0;n<e;n++)i[o][n]=t[e-1-n][o]}return i}canPlaceBlock(t,e,s,i){const o=t.shape,n=i.length;if(!t||!o||!i||!Array.isArray(i)||e<0||s<0||e+o.length>n||s+o[0].length>n)return!1;for(let l=0;l<o.length;l++)for(let a=0;a<o[l].length;a++)if(o[l][a]===1&&(e+l>=n||s+a>=n||!i[e+l]||i[e+l][s+a]===1))return!1;return!0}placeBlock(t,e,s,i){const o=t.shape,n=i.map(l=>[...l]);for(let l=0;l<o.length;l++)for(let a=0;a<o[l].length;a++)o[l][a]===1&&(n[e+l][s+a]=1);return n}removeBlock(t){this.currentBlocks=this.currentBlocks.filter(e=>e.id!==t)}getBlockById(t){return this.currentBlocks.find(e=>e.id===t)}clearSelection(){this.selectedBlock=null,this.selectedBlockPosition=null}}class E{constructor(t,e){this.container=document.getElementById(t),this.blockManager=e,this.selectedBlock=null,this.blockElements=new Map,this.init()}init(){this.render(),this.setupEventListeners()}render(){this.container&&(this.container.innerHTML=`
            <div class="block-palette">
                <h3>Available Blocks</h3>
                <div class="blocks-container" id="blocks-container">
                    <!-- Blocks will be rendered here -->
                </div>
            </div>
            <button id="rotate-selected" class="rotate-selected-btn" title="Rotate selected block">
                <span>↻</span>
            </button>
        `)}updateBlocks(t){const e=document.getElementById("blocks-container");e&&(e.innerHTML="",this.blockElements.clear(),t.forEach(s=>{const i=this.createBlockElement(s);e.appendChild(i),this.blockElements.set(s.id,i)}))}createBlockElement(t){const e=document.createElement("div");e.className="block-item",e.dataset.blockId=t.id,e.title=`Click to select, double-click to rotate: ${t.name} (${t.points} pts)`;const s=document.createElement("div");s.className="block-shape";const i=document.createElement("div");i.className="block-preview",i.style.width=`${t.shape[0].length*20}px`,i.style.height=`${t.shape.length*20}px`;const o=document.createElement("canvas");o.width=t.shape[0].length*20,o.height=t.shape.length*20;const n=o.getContext("2d");n.fillStyle=t.color,n.strokeStyle=this.darkenColor(t.color),n.lineWidth=1;for(let l=0;l<t.shape.length;l++)for(let a=0;a<t.shape[l].length;a++)if(t.shape[l][a]===1){const r=a*20,c=l*20;n.fillRect(r,c,20,20),n.strokeRect(r,c,20,20)}return i.appendChild(o),s.appendChild(i),e.appendChild(s),e}setupEventListeners(){document.addEventListener("click",t=>{if(t.target.closest(".block-item")){const s=t.target.closest(".block-item").dataset.blockId;this.selectBlock(s)}t.target.closest("#rotate-selected")&&(t.preventDefault(),this.selectedBlock&&this.rotateBlock(this.selectedBlock.id))}),document.addEventListener("dblclick",t=>{if(t.target.closest(".block-item")){t.preventDefault();const s=t.target.closest(".block-item").dataset.blockId;this.rotateBlock(s)}}),document.addEventListener("touchstart",t=>{if(t.target.closest(".block-item")){const e=t.target.closest(".block-item"),s=e.dataset.blockId;this.selectBlock(s),this.touchStart=t.touches[0],this.touchStartTime=Date.now(),this.touchStartBlockId=s,e.style.transform="scale(0.95)",e.style.transition="transform 0.1s ease"}},{passive:!0}),document.addEventListener("touchmove",t=>{if(this.touchStart&&this.touchStartBlockId){const e=t.touches[0],s=Math.abs(e.clientX-this.touchStart.clientX),i=Math.abs(e.clientY-this.touchStart.clientY),o=Date.now()-this.touchStartTime;if((s>5||i>5||o>100)&&(t.preventDefault(),!this.isDragging)){this.isDragging=!0,this.startDragFromPalette(e);const n=document.querySelector(`[data-block-id="${this.touchStartBlockId}"]`);n&&(n.style.opacity="0.7",n.style.transform="scale(1.1)")}}},{passive:!1}),document.addEventListener("touchend",t=>{if(this.touchStart){const e=document.querySelector(`[data-block-id="${this.touchStartBlockId}"]`);e&&(e.style.transform="",e.style.transition="",e.style.opacity=""),this.touchStart=null,this.touchStartTime=null,this.touchStartBlockId=null,this.isDragging=!1}},{passive:!0}),document.addEventListener("touchcancel",t=>{if(this.touchStart){const e=document.querySelector(`[data-block-id="${this.touchStartBlockId}"]`);e&&(e.style.transform="",e.style.transition="",e.style.opacity=""),this.touchStart=null,this.touchStartTime=null,this.touchStartBlockId=null,this.isDragging=!1}},{passive:!0})}startDragFromPalette(t){const e=new CustomEvent("blockDragStart",{detail:{block:this.selectedBlock,touch:t}});document.dispatchEvent(e)}selectBlock(t){if(this.clearSelection(),this.selectedBlock=this.blockManager.getBlockById(t),this.selectedBlock){const e=this.blockElements.get(t);e&&e.classList.add("selected")}this.updateRotateButton(),this.dispatchSelectionEvent()}selectBlockById(t){this.selectBlock(t)}rotateBlock(t){const e=this.blockManager.getBlockById(t);if(!e)return;const s=this.blockManager.rotateBlock(e);if(s){const i=this.blockManager.currentBlocks.findIndex(o=>o.id===t);i!==-1&&(this.blockManager.currentBlocks[i]=s,this.updateBlocks(this.blockManager.currentBlocks),this.selectedBlock&&this.selectedBlock.id===t&&(this.selectedBlock=s,this.dispatchSelectionEvent()),this.game&&this.game.effectsManager&&this.game.effectsManager.onBlockRotate())}}clearSelection(){this.selectedBlock=null,this.blockElements.forEach(t=>{t.classList.remove("selected")}),this.updateRotateButton()}dispatchSelectionEvent(){const t=new CustomEvent("blockSelected",{detail:{block:this.selectedBlock}});document.dispatchEvent(t)}darkenColor(t){const e=t.replace("#",""),s=parseInt(e.substr(0,2),16),i=parseInt(e.substr(2,2),16),o=parseInt(e.substr(4,2),16),n=Math.max(0,s-30),l=Math.max(0,i-30),a=Math.max(0,o-30);return`rgb(${n}, ${l}, ${a})`}updateRotateButton(){const t=document.getElementById("rotate-selected");t&&(this.selectedBlock?(t.disabled=!1,t.classList.remove("disabled")):(t.disabled=!0,t.classList.add("disabled")))}getSelectedBlock(){return this.selectedBlock}}class M{constructor(){this.score=0,this.level=1,this.linesCleared=0,this.combo=0,this.maxCombo=0,this.basePoints={single:10,line:100,square:500,combo:50}}checkAndClearLines(t){const e={rows:[],columns:[],squares:[]};for(let s=0;s<t.length;s++)this.isRowComplete(t,s)&&e.rows.push(s);for(let s=0;s<t[0].length;s++)this.isColumnComplete(t,s)&&e.columns.push(s);for(let s=0;s<3;s++)for(let i=0;i<3;i++)this.isSquareComplete(t,s,i)&&e.squares.push({row:s,col:i});return e}isRowComplete(t,e){return t[e].every(s=>s===1)}isColumnComplete(t,e){return t.every(s=>s[e]===1)}isSquareComplete(t,e,s){const i=e*3,o=s*3;for(let n=i;n<i+3;n++)for(let l=o;l<o+3;l++)if(t[n][l]!==1)return!1;return!0}clearLines(t,e){let s=t.map(o=>[...o]),i=0;return e.rows.forEach(o=>{s[o]=new Array(t[0].length).fill(0),i++}),e.columns.forEach(o=>{for(let n=0;n<t.length;n++)s[n][o]=0;i++}),e.squares.forEach(o=>{const n=o.row*3,l=o.col*3;for(let a=n;a<n+3;a++)for(let r=l;r<l+3;r++)s[a][r]=0;i++}),i>0?(this.calculateScore(e),this.linesCleared+=i,this.combo++,this.maxCombo=Math.max(this.maxCombo,this.combo)):this.combo=0,{board:s,clearedCount:i,scoreGained:this.getLastScoreGained()}}calculateScore(t){let e=0;e+=t.rows.length*this.basePoints.line,e+=t.columns.length*this.basePoints.line,e+=t.squares.length*this.basePoints.square,this.combo>1&&(e+=(this.combo-1)*this.basePoints.combo),e*=this.level,this.score+=e,this.lastScoreGained=e;const s=Math.floor(this.score/1e3)+1;s>this.level&&(this.level=s)}getLastScoreGained(){return this.lastScoreGained||0}getScore(){return this.score}getLevel(){return this.level}getCombo(){return this.combo}getMaxCombo(){return this.maxCombo}getLinesCleared(){return this.linesCleared}reset(){this.score=0,this.level=1,this.linesCleared=0,this.combo=0,this.maxCombo=0,this.lastScoreGained=0}getStats(){return{score:this.score,level:this.level,linesCleared:this.linesCleared,combo:this.combo,maxCombo:this.maxCombo}}}class k{constructor(){this.isOnline=navigator.onLine,this.offlineIndicator=null,this.init()}init(){this.setupEventListeners(),this.createOfflineIndicator(),this.updateOfflineStatus()}setupEventListeners(){window.addEventListener("online",()=>{console.log("PWA: Back online"),this.isOnline=!0,this.updateOfflineStatus()}),window.addEventListener("offline",()=>{console.log("PWA: Gone offline"),this.isOnline=!1,this.updateOfflineStatus()}),document.addEventListener("visibilitychange",()=>{document.hidden?this.handleAppBlur():this.handleAppFocus()})}createOfflineIndicator(){this.offlineIndicator=document.createElement("div"),this.offlineIndicator.id="offline-indicator",this.offlineIndicator.className="offline-indicator",this.offlineIndicator.innerHTML="📡 Offline Mode",this.offlineIndicator.style.cssText=`
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            background: #ff6b35;
            color: white;
            text-align: center;
            padding: 0.5rem;
            font-size: 0.9rem;
            font-weight: 500;
            z-index: 1000;
            transform: translateY(-100%);
            transition: transform 0.3s ease;
        `,document.body.appendChild(this.offlineIndicator)}updateOfflineStatus(){this.offlineIndicator&&(this.isOnline?(this.offlineIndicator.style.transform="translateY(-100%)",this.offlineIndicator.innerHTML="📡 Offline Mode"):(this.offlineIndicator.style.transform="translateY(0)",this.offlineIndicator.innerHTML="📡 Offline Mode - Game works without internet!"))}handleAppBlur(){console.log("PWA: App blurred")}handleAppFocus(){console.log("PWA: App focused")}isStandalone(){return window.matchMedia("(display-mode: standalone)").matches||window.navigator.standalone===!0}getStatus(){return{isOnline:this.isOnline,isStandalone:this.isStandalone(),supportsOffline:"serviceWorker"in navigator}}}const P=Object.freeze(Object.defineProperty({__proto__:null,OfflineManager:k},Symbol.toStringTag,{value:"Module"}));class L{constructor(){this.currentDifficulty="normal",this.difficultySettings=this.initializeDifficultySettings(),this.gameRules=this.initializeGameRules()}initializeDifficultySettings(){return{easy:{name:"Easy",description:"Larger blocks, slower pace, hints available",blockSizeRange:[2,4],allowedShapes:["square2x2","square3x3","l2x2","line2","line3"],scoreMultiplier:1.5,timeLimit:null,hintsEnabled:!0,undoEnabled:!0,maxUndoMoves:5,blockGenerationDelay:2e3,visualHints:!0},normal:{name:"Normal",description:"Standard block variety, moderate pace",blockSizeRange:[1,5],allowedShapes:"all",scoreMultiplier:1,timeLimit:null,hintsEnabled:!1,undoEnabled:!0,maxUndoMoves:3,blockGenerationDelay:1500,visualHints:!1},hard:{name:"Hard",description:"Smaller blocks, faster pace, no hints",blockSizeRange:[1,3],allowedShapes:["single","line2","line3","l2x2","t3x2","z3x2"],scoreMultiplier:.8,timeLimit:null,hintsEnabled:!1,undoEnabled:!1,maxUndoMoves:0,blockGenerationDelay:1e3,visualHints:!1},expert:{name:"Expert",description:"Complex shapes, time pressure, limited moves",blockSizeRange:[1,4],allowedShapes:"all",scoreMultiplier:.5,timeLimit:300,hintsEnabled:!1,undoEnabled:!1,maxUndoMoves:0,blockGenerationDelay:800,visualHints:!1,moveLimit:50}}}initializeGameRules(){return{basePoints:{single:10,line:100,combo:50},levelThresholds:{easy:[100,300,600,1e3,1500,2200,3e3,4e3,5200,6600],normal:[200,500,900,1400,2e3,2700,3500,4400,5400,6500],hard:[150,400,700,1100,1600,2200,2900,3700,4600,5600],expert:[100,250,450,700,1e3,1350,1750,2200,2700,3250]},comboThresholds:{easy:2,normal:3,hard:4,expert:5}}}setDifficulty(t){return this.difficultySettings[t]?(this.currentDifficulty=t,!0):!1}getCurrentDifficulty(){return this.currentDifficulty}getDifficultySettings(){return this.difficultySettings[this.currentDifficulty]}getScoreMultiplier(){return this.difficultySettings[this.currentDifficulty].scoreMultiplier}getTimeLimit(){return this.difficultySettings[this.currentDifficulty].timeLimit}isHintsEnabled(){return this.difficultySettings[this.currentDifficulty].hintsEnabled}isUndoEnabled(){return this.difficultySettings[this.currentDifficulty].undoEnabled}getMaxUndoMoves(){return this.difficultySettings[this.currentDifficulty].maxUndoMoves}getBlockGenerationDelay(){return this.difficultySettings[this.currentDifficulty].blockGenerationDelay}hasVisualHints(){return this.difficultySettings[this.currentDifficulty].visualHints}getMoveLimit(){return this.difficultySettings[this.currentDifficulty].moveLimit||null}getAllowedShapes(){return this.difficultySettings[this.currentDifficulty].allowedShapes}getBlockSizeRange(){return this.difficultySettings[this.currentDifficulty].blockSizeRange}getLevelThresholds(){return this.gameRules.levelThresholds[this.currentDifficulty]}getComboThreshold(){return this.gameRules.comboThresholds[this.currentDifficulty]}calculateScore(t,e=1){const s=this.getScoreMultiplier(),i=e>1?(e-1)*this.gameRules.basePoints.combo:0;return Math.floor((t+i)*s)}shouldGenerateNewBlocks(t,e){const s=this.getLevelThresholds();return e<=s.length&&t>=s[e-1]}getDifficultyInfo(){const t=this.getDifficultySettings();return{name:t.name,description:t.description,features:{hints:t.hintsEnabled,undo:t.undoEnabled,timer:t.timeLimit!==null,moveLimit:t.moveLimit!==null}}}getAvailableDifficulties(){return Object.keys(this.difficultySettings).map(t=>({key:t,...this.difficultySettings[t]}))}reset(){this.currentDifficulty="normal"}}class T{constructor(t,e){this.game=t,this.difficultyManager=e,this.hintsActive=!1,this.validPositions=[],this.hintCooldown=0,this.lastHintTime=0,this.hintDuration=5e3,this.cooldownDuration=1e4}update(t){this.hintCooldown>0&&(this.hintCooldown-=t)}isHintAvailable(){return this.difficultyManager.isHintsEnabled()&&this.hintCooldown<=0&&this.game.selectedBlock!==null}showHint(){return this.isHintAvailable()?(this.hintsActive=!0,this.lastHintTime=Date.now(),this.hintCooldown=this.cooldownDuration,this.findValidPositions(),setTimeout(()=>{this.hideHints()},this.hintDuration),!0):!1}hideHints(){this.hintsActive=!1,this.validPositions=[],this.game.drawBoard()}findValidPositions(){if(!this.game.selectedBlock)return;this.validPositions=[];const t=this.game.selectedBlock;this.game.board;const e=this.game.boardSize;for(let s=0;s<e;s++)for(let i=0;i<e;i++)this.game.canPlaceBlock(s,i)&&this.validPositions.push({row:s,col:i});this.validPositions.sort((s,i)=>{const o=this.calculatePositionScore(s.row,s.col,t);return this.calculatePositionScore(i.row,i.col,t)-o})}calculatePositionScore(t,e,s){let i=0;const o=this.simulateBlockPlacement(t,e,s),n=this.game.scoringSystem.checkAndClearLines(o);i+=(n.rows.length+n.columns.length+n.squares.length)*100,(n.rows.length>1||n.columns.length>1||n.squares.length>1)&&(i+=200);const l=this.game.boardSize/2,a=this.game.boardSize/2,r=Math.abs(t-l)+Math.abs(e-a);return i+=(this.game.boardSize-r)*10,i}simulateBlockPlacement(t,e,s){const i=this.game.board.map(o=>[...o]);return this.game.blockManager.canPlaceBlock(s,t,e,i)?this.game.blockManager.placeBlock(s,t,e,i):i}drawHints(t){if(!this.hintsActive||this.validPositions.length===0)return;const e=this.game.actualCellSize||this.game.cellSize;t.save(),t.globalAlpha=.6,this.validPositions.slice(0,3).forEach((i,o)=>{const n=i.col*e,l=i.row*e;let a;switch(o){case 0:a="#00ff00";break;case 1:a="#ffff00";break;case 2:a="#ff8800";break}t.fillStyle=a,t.fillRect(n+2,l+2,e-4,e-4),t.shadowColor=a,t.shadowBlur=10,t.strokeStyle=a,t.lineWidth=2,t.strokeRect(n+2,l+2,e-4,e-4)}),t.restore()}getHintCount(){return this.validPositions.length}getBestPosition(){return this.validPositions.length>0?this.validPositions[0]:null}getHintStatus(){return{active:this.hintsActive,available:this.isHintAvailable(),cooldownRemaining:Math.max(0,this.hintCooldown),validPositions:this.validPositions.length}}forceShowHints(){this.hintsActive=!0,this.hintCooldown=0,this.findValidPositions()}reset(){this.hintsActive=!1,this.validPositions=[],this.hintCooldown=0,this.lastHintTime=0}}class D{constructor(t){this.difficultyManager=t,this.timeLimit=null,this.timeRemaining=0,this.isActive=!1,this.isPaused=!1,this.startTime=0,this.pausedTime=0,this.timeBonus=0,this.warningThreshold=30,this.criticalThreshold=10}initialize(){this.timeLimit=this.difficultyManager.getTimeLimit(),this.timeLimit&&(this.timeRemaining=this.timeLimit,this.isActive=!0)}start(){!this.isActive||this.timeLimit===null||(this.startTime=Date.now(),this.isPaused=!1,this.pausedTime=0)}pause(){!this.isActive||this.isPaused||(this.isPaused=!0,this.pausedTime=Date.now())}resume(){if(!this.isActive||!this.isPaused)return;const t=Date.now()-this.pausedTime;this.startTime+=t,this.isPaused=!1}update(){if(!this.isActive||this.isPaused||this.timeLimit===null)return;const t=Date.now()-this.startTime;return this.timeRemaining=Math.max(0,this.timeLimit-Math.floor(t/1e3)),this.timeRemaining>0}addTimeBonus(t){this.timeRemaining+=t,this.timeBonus+=t}getTimeRemaining(){return this.timeRemaining}getTimeBonus(){return this.timeBonus}isTimeUp(){return this.timeRemaining<=0}isWarningTime(){return this.timeRemaining<=this.warningThreshold&&this.timeRemaining>this.criticalThreshold}isCriticalTime(){return this.timeRemaining<=this.criticalThreshold}getTimeStatus(){return{remaining:this.timeRemaining,limit:this.timeLimit,isActive:this.isActive,isPaused:this.isPaused,isWarning:this.isWarningTime(),isCritical:this.isCriticalTime(),bonus:this.timeBonus}}formatTime(t){const e=Math.floor(t/60),s=t%60;return`${e}:${s.toString().padStart(2,"0")}`}getFormattedTimeRemaining(){return this.formatTime(this.timeRemaining)}getFormattedTimeLimit(){return this.formatTime(this.timeLimit)}calculateTimeBonus(t){const e=t.rows.length+t.columns.length+t.squares.length;if(e===0)return 0;let s=e*5;e>1&&(s+=(e-1)*3);const i=this.difficultyManager.getComboThreshold();return e>=i&&(s+=10),s}getTimePressureEffects(){return this.isActive?this.isCriticalTime()?{type:"critical",color:"#ff0000",intensity:1,pulse:!0}:this.isWarningTime()?{type:"warning",color:"#ff8800",intensity:.7,pulse:!1}:null:null}reset(){this.timeRemaining=this.timeLimit||0,this.isActive=this.timeLimit!==null,this.isPaused=!1,this.startTime=0,this.pausedTime=0,this.timeBonus=0}disable(){this.isActive=!1,this.timeLimit=null,this.timeRemaining=0}}class R{constructor(t,e){this.game=t,this.difficultyManager=e,this.container=null,this.isVisible=!1}create(){this.container=document.createElement("div"),this.container.id="difficulty-selector",this.container.className="difficulty-selector";const t=document.createElement("div");t.className="difficulty-overlay",t.addEventListener("click",()=>this.hide());const e=document.createElement("div");e.className="difficulty-modal";const s=document.createElement("div");s.className="difficulty-header",s.innerHTML="<h2>Select Difficulty</h2>";const i=document.createElement("div");i.className="difficulty-options",this.difficultyManager.getAvailableDifficulties().forEach(l=>{const a=this.createDifficultyOption(l);i.appendChild(a)});const n=document.createElement("button");n.className="difficulty-close",n.innerHTML="×",n.addEventListener("click",()=>this.hide()),e.appendChild(s),e.appendChild(i),e.appendChild(n),this.container.appendChild(t),this.container.appendChild(e),document.body.appendChild(this.container),this.addStyles()}createDifficultyOption(t){const e=document.createElement("div");e.className="difficulty-option",e.dataset.difficulty=t.key,t.key===this.difficultyManager.getCurrentDifficulty()&&e.classList.add("selected");const s=document.createElement("div");s.className="difficulty-icon",s.innerHTML=this.getDifficultyIcon(t.key);const i=document.createElement("div");i.className="difficulty-content";const o=document.createElement("h3");o.textContent=t.name;const n=document.createElement("p");n.textContent=t.description;const l=document.createElement("div");if(l.className="difficulty-features",t.hintsEnabled){const a=document.createElement("span");a.className="feature hint",a.textContent="Hints",l.appendChild(a)}if(t.undoEnabled){const a=document.createElement("span");a.className="feature undo",a.textContent="Undo",l.appendChild(a)}if(t.timeLimit){const a=document.createElement("span");a.className="feature timer",a.textContent="Timer",l.appendChild(a)}if(t.moveLimit){const a=document.createElement("span");a.className="feature moves",a.textContent="Limited Moves",l.appendChild(a)}return i.appendChild(o),i.appendChild(n),i.appendChild(l),e.appendChild(s),e.appendChild(i),e.addEventListener("click",()=>{this.selectDifficulty(t.key)}),e}getDifficultyIcon(t){return{easy:"😊",normal:"😐",hard:"😤",expert:"🔥"}[t]||"🎮"}selectDifficulty(t){this.difficultyManager.setDifficulty(t),this.updateSelection(t),this.game.restartWithDifficulty(t),this.hide()}updateSelection(t){this.container.querySelectorAll(".difficulty-option").forEach(s=>{s.dataset.difficulty===t?s.classList.add("selected"):s.classList.remove("selected")})}show(){this.container||this.create(),this.container.style.display="flex",this.isVisible=!0,requestAnimationFrame(()=>{this.container.classList.add("show")})}hide(){this.container&&(this.container.classList.remove("show"),this.isVisible=!1,setTimeout(()=>{this.container&&this.container.parentNode&&(this.container.parentNode.removeChild(this.container),this.container=null)},300))}addStyles(){const t=document.createElement("style");t.textContent=`
            .difficulty-selector {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                z-index: 1000;
                display: none;
                align-items: center;
                justify-content: center;
                opacity: 0;
                transition: opacity 0.3s ease;
            }
            
            .difficulty-selector.show {
                opacity: 1;
            }
            
            .difficulty-overlay {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0.7);
                backdrop-filter: blur(5px);
            }
            
            .difficulty-modal {
                position: relative;
                background: var(--card-bg, var(--header-bg, white));
                border: 2px solid var(--border-color, #e0e0e0);
                border-radius: 12px;
                padding: 24px;
                max-width: 500px;
                width: 90%;
                max-height: 80vh;
                overflow-y: auto;
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
                transform: scale(0.9);
                transition: transform 0.3s ease;
            }
            
            .difficulty-selector.show .difficulty-modal {
                transform: scale(1);
            }
            
            .difficulty-header {
                text-align: center;
                margin-bottom: 24px;
            }
            
            .difficulty-header h2 {
                margin: 0;
                color: var(--text-color, #333);
                font-size: 1.5rem;
            }
            
            .difficulty-options {
                display: grid;
                gap: 12px;
            }
            
            .difficulty-option {
                display: flex;
                align-items: center;
                padding: 16px;
                border: 2px solid var(--border-color, #e0e0e0);
                border-radius: 8px;
                cursor: pointer;
                transition: all 0.2s ease;
                background: var(--card-bg, var(--header-bg, white));
            }
            
            .difficulty-option:hover {
                border-color: var(--primary-color, #007bff);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0, 123, 255, 0.2);
            }
            
            .difficulty-option.selected {
                border-color: var(--primary-color, #007bff);
                background: var(--highlight, #f8f9ff);
                color: var(--primary-color, #007bff);
            }
            
            .difficulty-icon {
                font-size: 2rem;
                margin-right: 16px;
                min-width: 40px;
                text-align: center;
            }
            
            .difficulty-content {
                flex: 1;
            }
            
            .difficulty-content h3 {
                margin: 0 0 8px 0;
                color: var(--text-color, #333);
                font-size: 1.1rem;
            }
            
            .difficulty-content p {
                margin: 0 0 8px 0;
                color: var(--text-muted, #666);
                font-size: 0.9rem;
                line-height: 1.4;
            }
            
            .difficulty-features {
                display: flex;
                flex-wrap: wrap;
                gap: 6px;
            }
            
            .feature {
                padding: 4px 8px;
                border-radius: 12px;
                font-size: 0.75rem;
                font-weight: 500;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }
            
            .feature.hint {
                background: #e8f5e8;
                color: #2d5a2d;
            }
            
            .feature.undo {
                background: #fff3cd;
                color: #856404;
            }
            
            .feature.timer {
                background: #f8d7da;
                color: #721c24;
            }
            
            .feature.moves {
                background: #d1ecf1;
                color: #0c5460;
            }
            
            .difficulty-close {
                position: absolute;
                top: 12px;
                right: 12px;
                background: none;
                border: none;
                font-size: 1.5rem;
                cursor: pointer;
                color: var(--text-muted, #999);
                width: 32px;
                height: 32px;
                display: flex;
                align-items: center;
                justify-content: center;
                border-radius: 50%;
                transition: all 0.2s ease;
            }
            
            .difficulty-close:hover {
                background: var(--cell-hover, #f0f0f0);
                color: var(--text-color, #333);
            }
            
            @media (max-width: 480px) {
                .difficulty-modal {
                    padding: 16px;
                    margin: 16px;
                }
                
                .difficulty-option {
                    padding: 12px;
                }
                
                .difficulty-icon {
                    font-size: 1.5rem;
                    margin-right: 12px;
                }
            }
        `,document.head.appendChild(t)}}class z{constructor(t,e){this.canvas=t,this.ctx=e,this.particles=[],this.isEnabled=!0,this.maxParticles=200,this.animate()}setEnabled(t){this.isEnabled=t,t||(this.particles=[])}createSparkles(t,e,s=8){if(this.isEnabled)for(let i=0;i<s;i++)this.particles.push(new I(t,e))}createConfetti(t,e,s=20){if(this.isEnabled)for(let i=0;i<s;i++)this.particles.push(new A(t,e))}createGlowTrail(t,e,s="#00ff00"){this.isEnabled&&this.particles.push(new H(t,e,s))}createScoreNumber(t,e,s,i="#00ff00"){this.isEnabled&&this.particles.push(new O(t,e,s,i))}createLevelUpEffect(t,e){this.isEnabled&&(this.createConfetti(t,e,30),this.createSparkles(t,e,15),this.particles.push(new G(t,e)))}createComboEffect(t,e,s){this.isEnabled&&(this.createSparkles(t,e,s*3),this.particles.push(new $(t,e,s)))}update(){if(this.isEnabled){for(let t=this.particles.length-1;t>=0;t--){const e=this.particles[t];e.update(),e.isDead()&&this.particles.splice(t,1)}this.particles.length>this.maxParticles&&(this.particles=this.particles.slice(-this.maxParticles))}}render(){if(this.isEnabled){this.ctx.save();for(const t of this.particles)t.render(this.ctx);this.ctx.restore()}}animate(){this.update(),this.render(),requestAnimationFrame(()=>this.animate())}clear(){this.particles=[]}}class f{constructor(t,e){this.x=t,this.y=e,this.vx=0,this.vy=0,this.life=1,this.maxLife=1,this.size=1,this.color="#ffffff",this.alpha=1}update(){this.x+=this.vx,this.y+=this.vy,this.life-=.016,this.alpha=this.life}isDead(){return this.life<=0}render(t){}}class I extends f{constructor(t,e){super(t,e),this.vx=(Math.random()-.5)*4,this.vy=(Math.random()-.5)*4,this.maxLife=.8,this.life=this.maxLife,this.size=Math.random()*3+1,this.color=`hsl(${Math.random()*60+40}, 100%, 70%)`,this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.2}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.1}render(t){t.save(),t.globalAlpha=this.alpha,t.translate(this.x,this.y),t.rotate(this.rotation),t.fillStyle=this.color,t.fillRect(-this.size/2,-this.size/2,this.size,this.size),t.restore()}}class A extends f{constructor(t,e){super(t,e),this.vx=(Math.random()-.5)*8,this.vy=Math.random()*-6-2,this.maxLife=2,this.life=this.maxLife,this.size=Math.random()*4+2,this.colors=["#ff6b6b","#4ecdc4","#45b7d1","#96ceb4","#feca57","#ff9ff3"],this.color=this.colors[Math.floor(Math.random()*this.colors.length)],this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.3}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.3,this.vx*=.98}render(t){t.save(),t.globalAlpha=this.alpha,t.translate(this.x,this.y),t.rotate(this.rotation),t.fillStyle=this.color,t.fillRect(-this.size/2,-this.size/2,this.size,this.size),t.restore()}}class H extends f{constructor(t,e,s){super(t,e),this.vx=(Math.random()-.5)*2,this.vy=(Math.random()-.5)*2,this.maxLife=.5,this.life=this.maxLife,this.size=Math.random()*6+3,this.color=s}update(){super.update(),this.size*=.98}render(t){t.save(),t.globalAlpha=this.alpha*.6,t.fillStyle=this.color,t.shadowColor=this.color,t.shadowBlur=10,t.beginPath(),t.arc(this.x,this.y,this.size,0,Math.PI*2),t.fill(),t.restore()}}class O extends f{constructor(t,e,s,i){super(t,e),this.vx=0,this.vy=-2,this.maxLife=1.5,this.life=this.maxLife,this.score=s,this.color=i,this.fontSize=20}update(){super.update(),this.fontSize+=.5}render(t){t.save(),t.globalAlpha=this.alpha,t.fillStyle=this.color,t.font=`bold ${this.fontSize}px Arial`,t.textAlign="center",t.shadowColor="rgba(0, 0, 0, 0.5)",t.shadowBlur=2,t.fillText(`+${this.score}`,this.x,this.y),t.restore()}}class G extends f{constructor(t,e){super(t,e),this.vx=0,this.vy=-1,this.maxLife=2,this.life=this.maxLife,this.text="LEVEL UP!",this.color="#ffd700",this.fontSize=24}update(){super.update(),this.fontSize+=.3}render(t){t.save(),t.globalAlpha=this.alpha,t.fillStyle=this.color,t.font=`bold ${this.fontSize}px Arial`,t.textAlign="center",t.shadowColor="rgba(0, 0, 0, 0.8)",t.shadowBlur=4,t.fillText(this.text,this.x,this.y),t.restore()}}class $ extends f{constructor(t,e,s){super(t,e),this.vx=0,this.vy=-1.5,this.maxLife=1.5,this.life=this.maxLife,this.text=`${s}x COMBO!`,this.color="#ff6b6b",this.fontSize=18}update(){super.update(),this.fontSize+=.2}render(t){t.save(),t.globalAlpha=this.alpha,t.fillStyle=this.color,t.font=`bold ${this.fontSize}px Arial`,t.textAlign="center",t.shadowColor="rgba(0, 0, 0, 0.8)",t.shadowBlur=3,t.fillText(this.text,this.x,this.y),t.restore()}}class U{constructor(){this.audioContext=null,this.isEnabled=!0,this.volume=.5,this.sounds={},this.init()}init(){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.createSounds()}catch(t){console.warn("Web Audio API not supported:",t),this.isEnabled=!1}}setEnabled(t){this.isEnabled=t}setVolume(t){this.volume=Math.max(0,Math.min(1,t))}createSounds(){this.audioContext&&(this.sounds={blockPlace:this.createBlockPlaceSound(),lineClear:this.createLineClearSound(),levelUp:this.createLevelUpSound(),combo:this.createComboSound(),error:this.createErrorSound(),buttonClick:this.createButtonClickSound(),blockRotate:this.createBlockRotateSound(),scoreGain:this.createScoreGainSound()})}play(t){if(!(!this.isEnabled||!this.audioContext||!this.sounds[t]))try{const e=this.sounds[t],s=this.audioContext.createBufferSource(),i=this.audioContext.createGain();s.buffer=e.buffer,s.connect(i),i.connect(this.audioContext.destination),i.gain.value=this.volume*e.volume,s.start()}catch(e){console.warn("Error playing sound:",e)}}createBlockPlaceSound(){const t=this.audioContext.createBuffer(1,this.audioContext.sampleRate*.1,this.audioContext.sampleRate),e=t.getChannelData(0);for(let s=0;s<e.length;s++){const i=s/this.audioContext.sampleRate;e[s]=Math.sin(2*Math.PI*800*i)*Math.exp(-i*10)*.3}return{buffer:t,volume:.7}}createLineClearSound(){const t=this.audioContext.createBuffer(1,this.audioContext.sampleRate*.3,this.audioContext.sampleRate),e=t.getChannelData(0);for(let s=0;s<e.length;s++){const i=s/this.audioContext.sampleRate,o=400+Math.sin(i*20)*100;e[s]=Math.sin(2*Math.PI*o*i)*Math.exp(-i*3)*.4}return{buffer:t,volume:.8}}createLevelUpSound(){const t=this.audioContext.createBuffer(1,this.audioContext.sampleRate*.5,this.audioContext.sampleRate),e=t.getChannelData(0);for(let s=0;s<e.length;s++){const i=s/this.audioContext.sampleRate,o=200+i*400;e[s]=Math.sin(2*Math.PI*o*i)*Math.exp(-i*2)*.5}return{buffer:t,volume:.9}}createComboSound(){const t=this.audioContext.createBuffer(1,this.audioContext.sampleRate*.2,this.audioContext.sampleRate),e=t.getChannelData(0);for(let s=0;s<e.length;s++){const i=s/this.audioContext.sampleRate,o=600+Math.sin(i*30)*200;e[s]=Math.sin(2*Math.PI*o*i)*Math.exp(-i*5)*.3}return{buffer:t,volume:.6}}createErrorSound(){const t=this.audioContext.createBuffer(1,this.audioContext.sampleRate*.15,this.audioContext.sampleRate),e=t.getChannelData(0);for(let s=0;s<e.length;s++){const i=s/this.audioContext.sampleRate,o=200-i*100;e[s]=Math.sin(2*Math.PI*o*i)*Math.exp(-i*8)*.4}return{buffer:t,volume:.5}}createButtonClickSound(){const t=this.audioContext.createBuffer(1,this.audioContext.sampleRate*.05,this.audioContext.sampleRate),e=t.getChannelData(0);for(let s=0;s<e.length;s++){const i=s/this.audioContext.sampleRate;e[s]=Math.sin(2*Math.PI*1e3*i)*Math.exp(-i*20)*.2}return{buffer:t,volume:.4}}createBlockRotateSound(){const t=this.audioContext.createBuffer(1,this.audioContext.sampleRate*.08,this.audioContext.sampleRate),e=t.getChannelData(0);for(let s=0;s<e.length;s++){const i=s/this.audioContext.sampleRate,o=300+Math.sin(i*50)*50;e[s]=Math.sin(2*Math.PI*o*i)*Math.exp(-i*15)*.15}return{buffer:t,volume:.3}}createScoreGainSound(){const t=this.audioContext.createBuffer(1,this.audioContext.sampleRate*.12,this.audioContext.sampleRate),e=t.getChannelData(0);for(let s=0;s<e.length;s++){const i=s/this.audioContext.sampleRate,o=500+i*200;e[s]=Math.sin(2*Math.PI*o*i)*Math.exp(-i*6)*.25}return{buffer:t,volume:.5}}resume(){this.audioContext&&this.audioContext.state==="suspended"&&this.audioContext.resume()}stop(){this.audioContext&&(this.audioContext.close(),this.init())}}class W{constructor(){this.isEnabled=!0,this.isSupported=this.checkSupport(),this.vibrationPatterns={light:[10],medium:[20],heavy:[50],success:[20,10,20],error:[100],blockPlace:[15],lineClear:[30,10,30],levelUp:[50,20,50],combo:[25,10,25,10,25],buttonClick:[5]}}checkSupport(){return"vibrate"in navigator}setEnabled(t){this.isEnabled=t}vibrate(t){if(!(!this.isEnabled||!this.isSupported))try{typeof t=="string"&&(t=this.vibrationPatterns[t]||[10]),navigator.vibrate(t)}catch(e){console.warn("Haptic feedback error:",e)}}onBlockPlace(){this.vibrate("blockPlace")}onLineClear(){this.vibrate("lineClear")}onLevelUp(){this.vibrate("levelUp")}onCombo(t){t>1&&this.vibrate("combo")}onError(){this.vibrate("error")}onButtonClick(){this.vibrate("buttonClick")}onSuccess(){this.vibrate("success")}onCustom(t){this.vibrate(t)}stop(){this.isSupported&&navigator.vibrate(0)}}class q{constructor(t,e){this.canvas=t,this.ctx=e,this.particles=new z(t,e),this.sound=new U,this.haptic=new W,this.settings={particles:!0,sound:!1,haptic:!0}}updateSettings(t){this.settings={...this.settings,...t},this.particles.setEnabled(this.settings.particles),this.sound.setEnabled(this.settings.sound),this.haptic.setEnabled(this.settings.haptic)}setVolume(t){this.sound.setVolume(t)}onBlockPlace(t,e){this.particles.createSparkles(t,e,6),this.sound.play("blockPlace"),this.haptic.onBlockPlace()}onLineClear(t,e,s){const i=s.rows.length+s.columns.length+s.squares.length;this.particles.createConfetti(t,e,i*5),this.sound.play("lineClear"),this.haptic.onLineClear()}onLevelUp(t,e){this.particles.createLevelUpEffect(t,e),this.sound.play("levelUp"),this.haptic.onLevelUp()}onCombo(t,e,s){this.particles.createComboEffect(t,e,s),this.sound.play("combo"),this.haptic.onCombo(s)}onScoreGain(t,e,s){this.particles.createScoreNumber(t,e,s,"#00ff00"),this.sound.play("scoreGain")}onError(){this.sound.play("error"),this.haptic.onError()}onButtonClick(){this.sound.play("buttonClick"),this.haptic.onButtonClick()}onBlockRotate(){this.sound.play("blockRotate")}onBlockMove(t,e,s="#00ff00"){this.particles.createGlowTrail(t,e,s)}update(){this.particles.update()}render(){this.particles.render()}clear(){this.particles.clear()}resume(){this.sound.resume()}stop(){this.particles.clear(),this.sound.stop(),this.haptic.stop()}}class N{constructor(){console.log("BlockdokuGame constructor called"),this.canvas=document.getElementById("game-board"),this.ctx=this.canvas.getContext("2d"),this.boardSize=9,this.cellSize=0,this.board=this.initializeBoard(),this.score=0,this.level=1,this.currentTheme="light",this.previousScore=0,this.previousLevel=1,this.previousCombo=0,this.pendingClears=null,this.difficulty="normal",this.enableHints=!1,this.enableTimer=!1,this.enableUndo=!1,this.moveLimit=null,this.timeLimit=null,this.blockManager=new C,this.blockPalette=new E("block-palette",this.blockManager),this.scoringSystem=new M,this.storage=new S,this.pwaInstallManager=new x,this.offlineManager=new k,this.difficultyManager=new L,this.hintSystem=new T(this,this.difficultyManager),this.timerSystem=new D(this.difficultyManager),this.difficultySelector=new R(this,this.difficultyManager),this.effectsManager=new q(this.canvas,this.ctx),this.selectedBlock=null,this.previewPosition=null,this.isDragging=!1,this.dragStartPosition=null,this.dragCurrentPosition=null,this.dragBlockElement=null,this.loadSettings(),this.init(),this.setupResizeHandler(),window.addEventListener("focus",()=>{this.loadSettings(),this.updateDifficultyButton()}),window.addEventListener("storage",t=>{t.key==="blockdoku-settings"&&(this.loadSettings(),this.updateDifficultyButton())})}resizeCanvas(){const t=this.canvas.parentElement;if(!t)return;const e=t.getBoundingClientRect(),s=Math.min(e.width,e.height);this.cellSize=Math.floor(s/this.boardSize),this.cellSize*this.boardSize,this.canvas.width=s,this.canvas.height=s,this.canvas.style.width=s+"px",this.canvas.style.height=s+"px",this.actualCellSize=s/this.boardSize,this.gridCellSize=this.cellSize,this.mouseCellSize=this.actualCellSize,this.ctx.imageSmoothingEnabled=!1,this.ctx.lineCap="square",this.ctx.lineJoin="miter"}setupResizeHandler(){window.addEventListener("resize",()=>{this.resizeCanvas(),requestAnimationFrame(()=>{this.drawBoard()})})}initializeBoard(){const t=[];for(let e=0;e<this.boardSize;e++){t[e]=[];for(let s=0;s<this.boardSize;s++)t[e][s]=0}return t}init(){console.log("Game init() called"),this.setupEventListeners(),this.registerServiceWorker(),this.generateNewBlocks(),setTimeout(()=>{this.resizeCanvas(),requestAnimationFrame(()=>{this.drawBoard(),this.updateUI()})},100),this.startGameLoop(),console.log("About to initialize PWA managers..."),this.initializePWAManagers().then(()=>{console.log("PWA managers initialization completed")}).catch(t=>{console.error("PWA managers initialization failed:",t)}),this.updateDifficultyButton()}async registerServiceWorker(){if("serviceWorker"in navigator)try{if(window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1"){console.log("PWA: Skipping Service Worker registration in development mode");return}const e=await navigator.serviceWorker.register("./sw.js");console.log("PWA: Service Worker registered successfully",e),e.addEventListener("updatefound",()=>{console.log("PWA: Service Worker update found")})}catch(t){console.log("PWA: Service Worker registration failed (this is normal in development mode)",t.message)}}async initializePWAManagers(){try{console.log("Initializing PWA managers...");const t=await v(()=>import("./install-B2AQisTF.js").then(s=>s.i),__vite__mapDeps([0,1]),import.meta.url),e=await v(()=>Promise.resolve().then(()=>P),void 0,import.meta.url);this.pwaInstallManager=new t.PWAInstallManager,this.offlineManager=new e.OfflineManager,console.log("PWA managers initialized successfully"),console.log("PWAInstallManager:",this.pwaInstallManager),console.log("OfflineManager:",this.offlineManager)}catch(t){console.error("Error initializing PWA managers:",t),this.pwaInstallManager=null,this.offlineManager=null}}startGameLoop(){const t=()=>{this.update(),this.draw(),requestAnimationFrame(t)};t()}update(){this.effectsManager.update()}draw(){this.drawBoard(),this.effectsManager.render()}setupEventListeners(){console.log("Setting up event listeners..."),this.canvas.addEventListener("click",a=>this.handleCanvasClick(a)),this.canvas.addEventListener("mousemove",a=>this.handleCanvasMouseMove(a)),this.canvas.addEventListener("mouseleave",()=>this.handleCanvasMouseLeave()),this.canvas.addEventListener("touchstart",a=>this.handleTouchStart(a),{passive:!1}),this.canvas.addEventListener("touchmove",a=>this.handleTouchMove(a),{passive:!1}),this.canvas.addEventListener("touchend",a=>this.handleTouchEnd(a),{passive:!1}),this.canvas.addEventListener("touchcancel",a=>this.handleTouchCancel(a),{passive:!1}),document.addEventListener("touchmove",a=>this.handleGlobalTouchMove(a),{passive:!1}),document.addEventListener("touchend",a=>this.handleGlobalTouchEnd(a),{passive:!1}),document.addEventListener("touchcancel",a=>this.handleGlobalTouchCancel(a),{passive:!1});const t=document.getElementById("settings-toggle");t?t.addEventListener("click",()=>{this.effectsManager.onButtonClick(),console.log("Settings button clicked - navigating to settings page"),window.location.href="settings.html"}):console.error("Settings toggle button not found!");const e=document.getElementById("new-game");e?e.addEventListener("click",()=>{this.effectsManager.onButtonClick(),this.newGame()}):console.error("New game button not found!");const s=document.getElementById("difficulty-btn");s?s.addEventListener("click",()=>{this.effectsManager.onButtonClick(),this.difficultySelector.show()}):console.error("Difficulty button not found!");const i=document.getElementById("hint-btn");i?i.addEventListener("click",()=>{this.effectsManager.onButtonClick(),this.hintSystem.showHint()}):console.error("Hint button not found!");const o=document.getElementById("close-high-scores");o&&o.addEventListener("click",()=>this.hideHighScores());const n=document.getElementById("close-difficulty");n&&n.addEventListener("click",()=>this.hideDifficultyModal());const l=document.getElementById("close-settings");l&&l.addEventListener("click",()=>this.hideSettingsModal()),document.querySelectorAll(".difficulty-option").forEach(a=>{a.addEventListener("click",r=>this.selectDifficulty(r.currentTarget.dataset.difficulty))}),document.getElementById("enable-hints").addEventListener("change",a=>this.toggleSetting("hints",a.target.checked)),document.getElementById("enable-timer").addEventListener("change",a=>this.toggleSetting("timer",a.target.checked)),document.getElementById("enable-undo").addEventListener("change",a=>this.toggleSetting("undo",a.target.checked)),document.querySelectorAll(".theme-option").forEach(a=>{a.addEventListener("click",r=>this.selectTheme(r.currentTarget.dataset.theme))}),document.addEventListener("blockSelected",a=>this.handleBlockSelected(a)),document.addEventListener("blockDragStart",a=>this.handleBlockDragStart(a))}getBlockCenterOffset(t){const e=t.length,s=t[0].length;let i=0,o=0,n=0;for(let l=0;l<e;l++)for(let a=0;a<s;a++)t[l][a]===1&&(i+=l,o+=a,n++);return n===0?{row:0,col:0}:(i=Math.round(i/n),o=Math.round(o/n),{row:i,col:o})}getBlockDragOffset(t){const e=this.getBlockCenterOffset(t);return{row:e.row-1.5,col:e.col}}getBlockPreviewOffset(t){const e=this.getBlockCenterOffset(t);return{row:e.row-1.5,col:e.col}}getBlockPlacementOffset(t){return this.getBlockCenterOffset(t)}handleCanvasClick(t){if(!this.selectedBlock)return;const e=this.canvas.getBoundingClientRect(),s=t.clientX-e.left,i=t.clientY-e.top,o=Math.floor(s/this.mouseCellSize),n=Math.floor(i/this.mouseCellSize),l=this.getBlockCenterOffset(this.selectedBlock.shape),a=n-l.row,r=o-l.col;this.canPlaceBlock(a,r)&&this.placeBlock(a,r)}handleCanvasMouseMove(t){if(!this.selectedBlock)return;const e=this.canvas.getBoundingClientRect(),s=t.clientX-e.left,i=t.clientY-e.top,o=Math.floor(s/this.mouseCellSize),n=Math.floor(i/this.mouseCellSize),l=this.getBlockCenterOffset(this.selectedBlock.shape),a=n-l.row,r=o-l.col;this.previewPosition={row:a,col:r},this.drawBoard()}handleCanvasMouseLeave(){this.previewPosition=null,this.drawBoard()}handleTouchStart(t){if(t.preventDefault(),!this.selectedBlock)return;const e=t.touches[0],s=this.canvas.getBoundingClientRect(),i=e.clientX-s.left,o=e.clientY-s.top;this.isDragging=!0,this.dragStartPosition={x:i,y:o},this.dragCurrentPosition={x:i,y:o},this.createDragElement();const n=Math.floor(i/this.mouseCellSize),l=Math.floor(o/this.mouseCellSize),a=this.getBlockPreviewOffset(this.selectedBlock.shape),r=l-a.row,c=n-a.col;this.previewPosition={row:r,col:c},this.drawBoard()}handleTouchMove(t){if(!this.isDragging||!this.selectedBlock)return;t.preventDefault();const e=t.touches[0],s=this.canvas.getBoundingClientRect(),i=e.clientX-s.left,o=e.clientY-s.top;this.dragCurrentPosition={x:e.clientX,y:e.clientY},this.updateDragElement(e.clientX,e.clientY);const n=Math.floor(i/this.mouseCellSize),l=Math.floor(o/this.mouseCellSize),a=this.getBlockPreviewOffset(this.selectedBlock.shape),r=l-a.row,c=n-a.col;this.previewPosition={row:r,col:c},this.drawBoard()}handleTouchEnd(t){if(t.preventDefault(),!this.isDragging||!this.selectedBlock)return;const e=t.changedTouches[0],s=this.canvas.getBoundingClientRect(),i=e.clientX-s.left,o=e.clientY-s.top,n=Math.floor(i/this.mouseCellSize),l=Math.floor(o/this.mouseCellSize),a=this.getBlockPlacementOffset(this.selectedBlock.shape),r=l-a.row,c=n-a.col;this.canPlaceBlock(r,c)?this.placeBlock(r,c):this.effectsManager.onError(),this.cleanupDrag()}handleTouchCancel(t){t.cancelable&&t.preventDefault(),this.cleanupDrag()}handleGlobalTouchMove(t){if(!this.isDragging||!this.selectedBlock)return;t.preventDefault();const e=t.touches[0];this.dragCurrentPosition={x:e.clientX,y:e.clientY},this.updateDragElement(e.clientX,e.clientY);const s=this.canvas.getBoundingClientRect(),i=e.clientX-s.left,o=e.clientY-s.top;if(i>=0&&i<=s.width&&o>=0&&o<=s.height){const n=Math.floor(i/this.mouseCellSize),l=Math.floor(o/this.mouseCellSize),a=this.getBlockCenterOffset(this.selectedBlock.shape),r=l-a.row,c=n-a.col;this.previewPosition={row:r,col:c},this.drawBoard()}else this.previewPosition=null,this.drawBoard()}handleGlobalTouchEnd(t){if(!this.isDragging||!this.selectedBlock)return;t.preventDefault();const e=t.changedTouches[0],s=this.canvas.getBoundingClientRect(),i=e.clientX-s.left,o=e.clientY-s.top;if(i>=0&&i<=s.width&&o>=0&&o<=s.height){const n=Math.floor(i/this.mouseCellSize),l=Math.floor(o/this.mouseCellSize),a=this.getBlockPlacementOffset(this.selectedBlock.shape),r=l-a.row,c=n-a.col;this.canPlaceBlock(r,c)?this.placeBlock(r,c):this.effectsManager.onError()}this.cleanupDrag()}handleGlobalTouchCancel(t){t.cancelable&&t.preventDefault(),this.cleanupDrag()}createDragElement(){this.dragBlockElement&&this.dragBlockElement.remove(),this.dragBlockElement=document.createElement("div"),this.dragBlockElement.className="drag-block-element",this.dragBlockElement.style.position="fixed",this.dragBlockElement.style.pointerEvents="none",this.dragBlockElement.style.zIndex="1000",this.dragBlockElement.style.opacity="0.8",this.dragBlockElement.style.transform="translate(-50%, -50%)";const t=document.createElement("canvas"),e=40;t.width=e,t.height=e;const s=t.getContext("2d");this.drawBlockOnCanvas(s,this.selectedBlock,e),this.dragBlockElement.appendChild(t),document.body.appendChild(this.dragBlockElement)}updateDragElement(t,e){this.dragBlockElement&&(this.dragBlockElement.style.left=`${t}px`,this.dragBlockElement.style.top=`${e}px`)}drawBlockOnCanvas(t,e,s){const i=s/Math.max(e.shape.length,e.shape[0].length);t.fillStyle=e.color,t.strokeStyle=this.darkenColor(e.color),t.lineWidth=1;for(let o=0;o<e.shape.length;o++)for(let n=0;n<e.shape[o].length;n++)if(e.shape[o][n]===1){const l=n*i,a=o*i;t.fillRect(l,a,i,i),t.strokeRect(l,a,i,i)}}darkenColor(t){const e=t.replace("#",""),s=Math.max(0,parseInt(e.substr(0,2),16)-30),i=Math.max(0,parseInt(e.substr(2,2),16)-30),o=Math.max(0,parseInt(e.substr(4,2),16)-30);return`#${s.toString(16).padStart(2,"0")}${i.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}`}cleanupDrag(){this.isDragging=!1,this.dragStartPosition=null,this.dragCurrentPosition=null,this.previewPosition=null,this.dragBlockElement&&(this.dragBlockElement.remove(),this.dragBlockElement=null),this.drawBoard()}handleBlockSelected(t){this.selectedBlock=t.detail.block,this.previewPosition=null,this.drawBoard()}handleBlockDragStart(t){const{block:e,touch:s}=t.detail;this.selectedBlock=e,this.isDragging=!0,this.dragStartPosition={x:s.clientX,y:s.clientY},this.dragCurrentPosition={x:s.clientX,y:s.clientY},this.createDragElement();const i=this.canvas.getBoundingClientRect(),o=s.clientX-i.left,n=s.clientY-i.top,l=Math.floor(o/this.mouseCellSize),a=Math.floor(n/this.mouseCellSize),r=this.getBlockPreviewOffset(e.shape),c=a-r.row,u=l-r.col;this.previewPosition={row:c,col:u},this.drawBoard()}canPlaceBlock(t,e){return this.selectedBlock?this.blockManager.canPlaceBlock(this.selectedBlock,t,e,this.board):!1}generateNewBlocks(){const t=this.blockManager.generateRandomBlocks(3,"all",this.difficultyManager);this.blockPalette.updateBlocks(t),this.autoSelectNextBlock()}autoSelectNextBlock(){if(this.blockManager.currentBlocks.length>0){const t=this.blockManager.currentBlocks[0];this.selectedBlock=t,this.blockPalette.selectBlockById(t.id)}}toggleCell(t,e){this.board[t][e]=this.board[t][e]===0?1:0}drawBoard(){if(this.cellSize===0||this.canvas.width===0)return;const t=this.ctx,e=this.actualCellSize||this.cellSize;t.clearRect(0,0,this.canvas.width,this.canvas.height),t.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--board-bg"),t.fillRect(0,0,this.canvas.width,this.canvas.height),t.strokeStyle=getComputedStyle(document.documentElement).getPropertyValue("--grid-line"),t.lineWidth=1;const s=this.canvas.width,i=this.canvas.height;for(let o=0;o<=this.boardSize;o++){const n=Math.round(o*e);t.beginPath(),t.moveTo(n,0),t.lineTo(n,i),t.stroke()}for(let o=0;o<=this.boardSize;o++){const n=Math.round(o*e);t.beginPath(),t.moveTo(0,n),t.lineTo(s,n),t.stroke()}t.lineWidth=2;for(let o=0;o<=3;o++){const n=Math.round(o*3*e),l=Math.round(o*3*e);t.beginPath(),t.moveTo(n,0),t.lineTo(n,i),t.stroke(),t.beginPath(),t.moveTo(0,l),t.lineTo(s,l),t.stroke()}t.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--block-color");for(let o=0;o<this.boardSize;o++)for(let n=0;n<this.boardSize;n++)if(this.board[o][n]===1){const l=Math.round(n*e)+1,a=Math.round(o*e)+1,r=Math.round(e)-2;t.fillRect(l,a,r,r),t.strokeStyle=getComputedStyle(document.documentElement).getPropertyValue("--block-border"),t.lineWidth=1,t.strokeRect(l,a,r,r)}this.selectedBlock&&this.previewPosition&&this.drawPreviewBlock(),this.difficultyManager.isHintsEnabled()&&this.hintSystem.drawHints(t),this.pendingClears&&this.drawClearingBlockGlow(this.pendingClears)}toggleTheme(){const t=["light","dark","wood"],s=(t.indexOf(this.currentTheme)+1)%t.length;this.applyTheme(t[s]),this.drawBoard()}selectTheme(t){this.applyTheme(t)}drawPreviewBlock(){if(!this.selectedBlock||!this.previewPosition)return;const t=this.ctx,e=this.actualCellSize||this.cellSize,s=this.selectedBlock.shape,i=this.previewPosition.row,o=this.previewPosition.col,n=this.canPlaceBlock(i,o);t.fillStyle=n?this.selectedBlock.color+"80":"#ff000080",t.strokeStyle=n?this.selectedBlock.color:"#ff0000",t.lineWidth=2;for(let l=0;l<s.length;l++)for(let a=0;a<s[l].length;a++)if(s[l][a]===1){const r=o+a,c=i+l;if(r>=0&&r<this.boardSize&&c>=0&&c<this.boardSize){const u=Math.round(r*e)+1,p=Math.round(c*e)+1,d=Math.round(e)-2;t.fillRect(u,p,d,d),t.strokeRect(u,p,d,d)}}}checkLineClears(){const t=this.scoringSystem.checkAndClearLines(this.board);(t.rows.length>0||t.columns.length>0||t.squares.length>0)&&(this.showImmediateClearFeedback(t),this.startLineClearAnimation(t))}startLineClearAnimation(t){setTimeout(()=>{this.highlightClearingBlocks(t)},200),setTimeout(()=>{this.completeLineClear(t)},1250)}showImmediateClearFeedback(t){this.pendingClears=t,this.ctx.save(),this.ctx.fillStyle="#00ff00",this.ctx.globalAlpha=.2,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,this.ctx.restore(),this.canvas.style.border="1px solid #00ff00",this.canvas.style.boxShadow="0 0 5px #00ff00",setTimeout(()=>{this.canvas.style.border="",this.canvas.style.boxShadow=""},300),this.drawBoard();const e=this.canvas.width/2,s=this.canvas.height/2;this.showQuickClearNotification(e,s,t)}drawClearingBlockGlow(t){this.ctx.save();const e=this.actualCellSize||this.cellSize;this.ctx.shadowColor="#00ff00",this.ctx.shadowBlur=4,this.ctx.strokeStyle="#00ff00",this.ctx.lineWidth=1.5,this.ctx.globalAlpha=.4,t.rows.forEach(s=>{for(let i=0;i<this.boardSize;i++)if(this.board[s][i]===1){const o=i*e,n=s*e;this.ctx.strokeRect(o+1,n+1,e-2,e-2)}}),t.columns.forEach(s=>{for(let i=0;i<this.boardSize;i++)if(this.board[i][s]===1){const o=s*e,n=i*e;this.ctx.strokeRect(o+1,n+1,e-2,e-2)}}),t.squares.forEach(s=>{const i=s.row,o=s.col;for(let n=0;n<3;n++)for(let l=0;l<3;l++){const a=i+n,r=o+l;if(this.board[a][r]===1){const c=r*e,u=a*e;this.ctx.strokeRect(c+1,u+1,e-2,e-2)}}}),this.ctx.shadowBlur=0,this.ctx.strokeStyle="#ffffff",this.ctx.lineWidth=.8,this.ctx.globalAlpha=.6,t.rows.forEach(s=>{for(let i=0;i<this.boardSize;i++)if(this.board[s][i]===1){const o=i*e,n=s*e;this.ctx.strokeRect(o+3,n+3,e-6,e-6)}}),t.columns.forEach(s=>{for(let i=0;i<this.boardSize;i++)if(this.board[i][s]===1){const o=s*e,n=i*e;this.ctx.strokeRect(o+3,n+3,e-6,e-6)}}),t.squares.forEach(s=>{const i=s.row,o=s.col;for(let n=0;n<3;n++)for(let l=0;l<3;l++){const a=i+n,r=o+l;if(this.board[a][r]===1){const c=r*e,u=a*e;this.ctx.strokeRect(c+3,u+3,e-6,e-6)}}}),this.ctx.restore()}showQuickClearNotification(t,e,s){this.ctx.save();const i=s.rows.length+s.columns.length+s.squares.length;let o="";i===1?s.rows.length>0?o="ROW!":s.columns.length>0?o="COLUMN!":s.squares.length>0&&(o="SQUARE!"):o=`${i} CLEARS!`,this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillRect(t-80,e-20,160,40),this.ctx.strokeStyle="#00ff00",this.ctx.lineWidth=3,this.ctx.strokeRect(t-80,e-20,160,40),this.ctx.fillStyle="#00ff00",this.ctx.font="bold 24px Arial",this.ctx.textAlign="center",this.ctx.fillText(o,t,e+8),this.ctx.restore(),setTimeout(()=>{this.drawBoard()},400)}highlightClearingBlocks(t){this.drawBoard();const e=this.ctx,s=this.actualCellSize||this.cellSize;e.save(),e.globalAlpha=.7,t.rows.forEach(i=>{e.fillStyle="#ffff00",e.fillRect(0,i*s,this.canvas.width,s)}),t.columns.forEach(i=>{e.fillStyle="#ffff00",e.fillRect(i*s,0,s,this.canvas.height)}),t.squares.forEach(i=>{e.fillStyle="#ffff00";const o=i.col*3*s,n=i.row*3*s;e.fillRect(o,n,3*s,3*s)}),e.restore()}completeLineClear(t){this.pendingClears=null;const e=this.scoringSystem.clearLines(this.board,t);this.board=e.board;const s=this.scoringSystem.getScore(),i=this.scoringSystem.getCombo();this.score=this.difficultyManager.calculateScore(s,i),this.level=this.scoringSystem.getLevel(),this.createLineClearEffect(t);const o=this.canvas.width/2,n=this.canvas.height/2;this.effectsManager.onLineClear(o,n,t),this.createScorePopup(o,n,e.scoreGained),i>1&&(this.createComboEffect(i,o,n+50),this.effectsManager.onCombo(o,n+50,i)),this.updateUI(),setTimeout(()=>{this.checkLineClears()},200)}newGame(){this.score>0&&this.checkHighScore(),this.board=this.initializeBoard(),this.scoringSystem.reset(),this.score=0,this.level=1,this.selectedBlock=null,this.previewPosition=null,this.previousScore=0,this.previousLevel=1,this.previousCombo=0,this.generateNewBlocks(),this.drawBoard(),this.updateUI(),this.storage.clearGameState()}restartWithDifficulty(t){console.log(`Restarting game with difficulty: ${t}`),this.difficultyManager.setDifficulty(t),this.updateDifficultyButton(),this.timerSystem.initialize(),this.hintSystem.reset(),this.newGame()}updateUI(){const t=document.getElementById("score"),e=document.getElementById("level"),s=document.getElementById("combo"),i=this.scoringSystem.getCombo();this.previousScore===0&&this.score>0?this.animateFirstScore(t):this.score>this.previousScore&&this.animateScoreIncrease(t),this.level>this.previousLevel&&this.animateLevelUp(e),i>this.previousCombo&&i>1&&this.animateComboHit(s),t.textContent=this.score,e.textContent=this.level,s.textContent=i,this.previousScore=this.score,this.previousLevel=this.level,this.previousCombo=i,this.updateHintControls()}updateHintControls(){const t=document.getElementById("hint-controls"),e=document.getElementById("hint-btn");if(t&&e){const s=this.difficultyManager.isHintsEnabled();if(t.style.display=s?"block":"none",s){const i=this.hintSystem.getHintStatus();e.disabled=!i.available,e.textContent=i.available?"💡 Hint":`💡 Hint (${Math.ceil(i.cooldownRemaining/1e3)}s)`}}}updateDifficultyButton(){const t=document.getElementById("difficulty-btn");if(t){const e=this.difficultyManager.getCurrentDifficulty(),s=this.difficultyManager.getDifficultyInfo();t.classList.remove("easy","normal","hard","expert"),t.classList.add(e),t.textContent=s.name,t.title=`Current difficulty: ${s.name} - ${s.description}`}}createLineClearEffect(t){this.ctx.fillStyle="#ffff00",this.ctx.globalAlpha=.8,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,setTimeout(()=>{this.ctx.fillStyle="#ffffff",this.ctx.globalAlpha=.6,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,setTimeout(()=>{this.drawBoard()},150)},100)}createScorePopup(t,e,s){this.ctx.save(),this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(t-60,e-20,120,40),this.ctx.strokeStyle="#00ff00",this.ctx.lineWidth=2,this.ctx.strokeRect(t-60,e-20,120,40),this.ctx.fillStyle="#00ff00",this.ctx.font="bold 28px Arial",this.ctx.textAlign="center",this.ctx.fillText(`+${s}`,t,e+8),this.ctx.restore();let i=0;const o=()=>{i<45?(this.ctx.save(),this.ctx.globalAlpha=1-i/45,this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(t-60,e-20-i*2,120,40),this.ctx.strokeStyle="#00ff00",this.ctx.lineWidth=2,this.ctx.strokeRect(t-60,e-20-i*2,120,40),this.ctx.fillStyle="#00ff00",this.ctx.font="bold 28px Arial",this.ctx.textAlign="center",this.ctx.fillText(`+${s}`,t,e+8-i*2),this.ctx.restore(),i++,requestAnimationFrame(o)):this.drawBoard()};setTimeout(()=>{requestAnimationFrame(o)},200)}createComboEffect(t,e,s){this.ctx.save(),this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillRect(e-80,s-15,160,30),this.ctx.strokeStyle="#ff6600",this.ctx.lineWidth=2,this.ctx.strokeRect(e-80,s-15,160,30),this.ctx.fillStyle="#ff6600",this.ctx.font="bold 24px Arial",this.ctx.textAlign="center",this.ctx.fillText(`${t}x COMBO!`,e,s+5),this.ctx.restore();let i=0;const o=()=>{if(i<60){this.ctx.save();const n=1+Math.sin(i*.3)*.2;this.ctx.scale(n,n),this.ctx.globalAlpha=1-i/60,this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillRect((e-80)/n,(s-15)/n,160/n,30/n),this.ctx.strokeStyle="#ff6600",this.ctx.lineWidth=2,this.ctx.strokeRect((e-80)/n,(s-15)/n,160/n,30/n),this.ctx.fillStyle="#ff6600",this.ctx.font="bold 24px Arial",this.ctx.textAlign="center",this.ctx.fillText(`${t}x COMBO!`,e/n,(s+5)/n),this.ctx.restore(),i++,requestAnimationFrame(o)}else this.drawBoard()};setTimeout(()=>{requestAnimationFrame(o)},300)}animateFirstScore(t){t.style.transition="all 0.6s ease-out",t.style.transform="scale(1.5)",t.style.color="#00ff00",t.style.textShadow="0 0 10px #00ff00",setTimeout(()=>{t.style.transform="scale(1)",t.style.color="",t.style.textShadow=""},600)}animateScoreIncrease(t){t.style.transition="all 0.3s ease-out",t.style.transform="scale(1.2)",t.style.color="#ffff00",setTimeout(()=>{t.style.transform="scale(1)",t.style.color=""},300)}animateLevelUp(t){t.style.transition="all 0.8s ease-out",t.style.transform="scale(1.4) rotate(5deg)",t.style.color="#ff6600",t.style.textShadow="0 0 15px #ff6600";const e=this.canvas.width/2,s=this.canvas.height/2;this.effectsManager.onLevelUp(e,s),setTimeout(()=>{t.style.transform="scale(1) rotate(0deg)",t.style.color="",t.style.textShadow=""},800)}animateComboHit(t){t.style.transition="all 0.5s ease-out",t.style.transform="scale(1.3)",t.style.color="#ff0066",t.style.textShadow="0 0 12px #ff0066";let e=0;const s=()=>{e<3?(t.style.transform=e%2===0?"scale(1.3)":"scale(1.1)",e++,setTimeout(s,150)):(t.style.transform="scale(1)",t.style.color="",t.style.textShadow="")};setTimeout(s,200)}loadSettings(){const t=this.storage.loadSettings();this.currentTheme=t.theme,this.applyTheme(t.theme)}loadGameState(){const t=this.storage.loadGameState();t&&(this.board=t.board||this.initializeBoard(),this.score=t.score||0,this.level=t.level||1,this.scoringSystem.score=this.score,this.scoringSystem.level=this.level,t.currentBlocks&&(this.blockManager.currentBlocks=t.currentBlocks,this.blockPalette.updateBlocks(t.currentBlocks)),t.selectedBlock&&(this.selectedBlock=t.selectedBlock))}saveGameState(){const t={board:this.board,score:this.score,level:this.level,currentBlocks:this.blockManager.currentBlocks,selectedBlock:this.selectedBlock};this.storage.saveGameState(t)}loadSettings(){if(this.storage){const t=this.storage.loadSettings();this.currentTheme=t.theme||"light",this.soundEnabled=t.soundEnabled===!0,this.animationsEnabled=t.animationsEnabled!==!1,this.difficulty=t.difficulty||"normal",this.autoSave=t.autoSave!==!1,this.enableHints=t.enableHints||!1,this.enableTimer=t.enableTimer||!1,this.enableUndo=t.enableUndo||!1,this.showPoints=t.showPoints||!1,this.particlesEnabled=t.particlesEnabled!==!1,this.hapticEnabled=t.hapticEnabled!==!1,this.applyTheme(this.currentTheme),this.difficultyManager&&this.difficultyManager.setDifficulty(this.difficulty),this.applyEffectsSettings(),this.updateBlockPointsDisplay()}}saveSettings(){const t={theme:this.currentTheme,soundEnabled:this.soundEnabled,animationsEnabled:this.animationsEnabled,difficulty:this.difficulty,autoSave:this.autoSave,enableHints:this.enableHints,enableTimer:this.enableTimer,enableUndo:this.enableUndo,showPoints:this.showPoints,particlesEnabled:this.particlesEnabled,hapticEnabled:this.hapticEnabled};this.storage&&this.storage.saveSettings(t)}updateBlockPointsDisplay(){const t=this.showPoints||!1;document.querySelectorAll(".block-info").forEach(s=>{t?s.classList.add("show-points"):s.classList.remove("show-points")})}applyEffectsSettings(){this.effectsManager&&this.effectsManager.updateSettings({particles:this.particlesEnabled!==!1,sound:this.soundEnabled!==!1,haptic:this.hapticEnabled!==!1})}applyTheme(t){this.currentTheme=t;const e=document.getElementById("theme-css");e.href=`css/themes/${t}.css`,this.saveSettings()}checkHighScore(){const t=this.getStats();return this.storage.isHighScore(t.score)?(this.storage.saveHighScore(t),this.storage.saveStatistics(t),!0):!1}getHighScores(){return this.storage.getHighScores()}getStatistics(){return this.storage.loadStatistics()}checkGameOver(){if(this.blockManager.currentBlocks.length!==0){for(let t of this.blockManager.currentBlocks)for(let e=0;e<this.boardSize;e++)for(let s=0;s<this.boardSize;s++)if(this.blockManager.canPlaceBlock(t,e,s,this.board))return;this.gameOver()}}gameOver(){console.log("Game Over! Final Score:",this.score);const t=this.getStats();this.checkHighScore(),this.showGameOverModal(t),this.saveGameState()}showGameOverModal(t){const e=document.createElement("div");e.style.cssText=`
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0, 0, 0, 0.9);
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            z-index: 1000;
            font-family: Arial, sans-serif;
        `;const s=this.storage.isHighScore(t.score);e.innerHTML=`
            <h2>Game Over!</h2>
            <p>Final Score: ${t.score}</p>
            <p>Lines Cleared: ${t.linesCleared}</p>
            <p>Max Combo: ${t.maxCombo}</p>
            ${s?'<p style="color: #ffd700;">🎉 New High Score! 🎉</p>':""}
            <button onclick="this.parentElement.remove(); game.newGame();" 
                    style="margin: 10px; padding: 10px 20px; background: #4CAF50; color: white; border: none; border-radius: 5px; cursor: pointer;">
                New Game
            </button>
            <button onclick="this.parentElement.remove();" 
                    style="margin: 10px; padding: 10px 20px; background: #f44336; color: white; border: none; border-radius: 5px; cursor: pointer;">
                Close
            </button>
        `,document.body.appendChild(e)}getStats(){return{score:this.score,level:this.level,linesCleared:this.scoringSystem.getLinesCleared(),combo:this.scoringSystem.getCombo(),maxCombo:this.scoringSystem.getMaxCombo()}}showHighScores(){const t=document.getElementById("high-scores-modal"),e=document.getElementById("high-scores-list"),s=document.getElementById("statistics-display"),i=this.getHighScores();i.length===0?e.innerHTML="<p>No high scores yet. Play a game to set your first record!</p>":e.innerHTML=i.map((n,l)=>`
                <div class="score-item">
                    <span class="rank">#${l+1}</span>
                    <span class="score-value">${n.score.toLocaleString()}</span>
                    <span class="score-details">Level ${n.level} • ${n.linesCleared} lines • ${n.date}</span>
                </div>
            `).join("");const o=this.getStatistics();s.innerHTML=`
            <div class="stat-item">
                <span class="stat-label">Games Played:</span>
                <span class="stat-value">${o.gamesPlayed}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Score:</span>
                <span class="stat-value">${o.totalScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Best Score:</span>
                <span class="stat-value">${o.bestScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Lines:</span>
                <span class="stat-value">${o.totalLinesCleared}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Max Combo:</span>
                <span class="stat-value">${o.maxCombo}</span>
            </div>
        `,t.style.display="block"}hideHighScores(){const t=document.getElementById("high-scores-modal");t.style.display="none"}loadHighScores(){const t=document.getElementById("high-scores-list"),e=document.getElementById("statistics-display");if(!t||!e)return;const s=this.getHighScores();s.length===0?t.innerHTML="<p>No high scores yet. Play a game to set your first record!</p>":t.innerHTML=s.map((o,n)=>`
                <div class="score-item">
                    <span class="rank">#${n+1}</span>
                    <span class="score-value">${o.score.toLocaleString()}</span>
                    <span class="score-details">Level ${o.level} • ${o.linesCleared} lines • ${o.date}</span>
                </div>
            `).join("");const i=this.getStatistics();e.innerHTML=`
            <div class="stat-item">
                <span class="stat-label">Games Played:</span>
                <span class="stat-value">${i.gamesPlayed}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Score:</span>
                <span class="stat-value">${i.totalScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Best Score:</span>
                <span class="stat-value">${i.bestScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Lines:</span>
                <span class="stat-value">${i.totalLines}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Max Combo:</span>
                <span class="stat-value">${i.maxCombo}</span>
            </div>
        `}showDifficultyModal(){const t=document.getElementById("difficulty-modal");this.updateDifficultyUI(),t.style.display="block"}hideDifficultyModal(){const t=document.getElementById("difficulty-modal");t.style.display="none"}showSettingsModal(){console.log("showSettingsModal called");const t=document.getElementById("settings-modal");if(!t){console.error("Settings modal not found!");return}console.log("Settings modal found, showing..."),this.pwaInstallManager?(this.pwaInstallManager.createInstallButton(),this.pwaInstallManager.showInstallButton()):console.log("PWA Install Manager not available"),this.updateThemeUI(),this.updateDifficultyUI(),this.loadHighScores(),t.style.display="block",console.log("Settings modal should now be visible")}hideSettingsModal(){const t=document.getElementById("settings-modal");t.style.display="none"}updateDifficultyUI(){document.querySelectorAll(".difficulty-option").forEach(t=>{t.classList.remove("selected"),t.dataset.difficulty===this.difficulty&&t.classList.add("selected")}),document.getElementById("enable-hints").checked=this.enableHints,document.getElementById("enable-timer").checked=this.enableTimer,document.getElementById("enable-undo").checked=this.enableUndo}selectDifficulty(t){this.difficulty=t,this.difficultyManager&&this.difficultyManager.setDifficulty(t),this.applyDifficultySettings(),this.updateDifficultyUI(),this.updateDifficultyButton(),this.saveSettings()}selectTheme(t){this.currentTheme=t,this.applyTheme(t),this.updateThemeUI(),this.saveSettings()}applyTheme(t){const e=document.getElementById("theme-css");e&&(e.href=`css/themes/${t}.css`)}updateThemeUI(){document.querySelectorAll(".theme-option").forEach(t=>{t.classList.remove("selected"),t.dataset.theme===this.currentTheme&&t.classList.add("selected")})}toggleSetting(t,e){switch(t){case"hints":this.enableHints=e;break;case"timer":this.enableTimer=e;break;case"undo":this.enableUndo=e;break}this.saveSettings()}applyDifficultySettings(){switch(this.difficulty){case"easy":this.enableHints=!0,this.enableTimer=!1,this.enableUndo=!0,this.moveLimit=null,this.timeLimit=null;break;case"normal":this.enableHints=!1,this.enableTimer=!1,this.enableUndo=!1,this.moveLimit=null,this.timeLimit=null;break;case"hard":this.enableHints=!1,this.enableTimer=!1,this.enableUndo=!1,this.moveLimit=50,this.timeLimit=null;break;case"expert":this.enableHints=!1,this.enableTimer=!0,this.enableUndo=!1,this.moveLimit=30,this.timeLimit=300;break}}generateNewBlocks(){let t=3,e="all";switch(this.difficulty){case"easy":t=3,e="large";break;case"normal":t=3,e="all";break;case"hard":t=4,e="small";break;case"expert":t=5,e="complex";break}const s=this.blockManager.generateRandomBlocks(t,e,this.difficultyManager);this.blockPalette.updateBlocks(s),this.updateBlockPointsDisplay(),this.autoSelectNextBlock()}placeBlock(t,e){if(!this.canPlaceBlock(t,e))return;this.board=this.blockManager.placeBlock(this.selectedBlock,t,e,this.board);const s=this.canvas.width/2,i=this.canvas.height/2;this.effectsManager.onBlockPlace(s,i),this.blockManager.removeBlock(this.selectedBlock.id),this.selectedBlock=null,this.previewPosition=null,this.blockPalette.updateBlocks(this.blockManager.currentBlocks),this.drawBoard(),this.updateUI(),this.checkLineClears(),this.autoSave&&this.saveGameState(),this.blockManager.currentBlocks.length===0&&this.generateNewBlocks(),this.checkGameOver(),this.autoSelectNextBlock()}checkGameOver(){if(this.blockManager.currentBlocks.length!==0){for(let t of this.blockManager.currentBlocks)for(let e=0;e<this.boardSize;e++)for(let s=0;s<this.boardSize;s++)if(this.blockManager.canPlaceBlock(t,e,s,this.board))return;this.gameOver()}}}function y(){window.game=new N}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",y):y();
