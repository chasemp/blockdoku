import"./wood-BSoGWpSl.js";import{G as h,C as m,S as g,P as f}from"./sound-manager-4Y58xrRc.js";import{b as u}from"./build-info-Dwp5dZmk.js";class p{constructor(){this.storage=new h,this.currentTheme="wood",this.currentDifficulty="normal",this.settings=this.storage.loadSettings(),this.pwaInstallManager=null,this.confirmationDialog=new m,this.soundManager=new g,this.init()}init(){this.loadSettings(),this.setupEventListeners(),this.updateUI(),this.updateBuildInfo(),this.initializePWA()}initializePWA(){try{this.pwaInstallManager=new f,console.log("PWA Install Manager initialized in settings")}catch(e){console.error("Failed to initialize PWA Install Manager:",e)}}loadSettings(){this.currentTheme=this.settings.theme||"wood",this.currentDifficulty=this.settings.difficulty||"normal",this.applyTheme(this.currentTheme),this.loadEffectsSettings(),this.updateDifficultyUI()}loadEffectsSettings(){const e=document.getElementById("sound-enabled");e&&(e.checked=this.settings.soundEnabled===!0);const t=document.getElementById("animations-enabled");t&&(t.checked=this.settings.animationsEnabled!==!1);const a=document.getElementById("particles-enabled");a&&(a.checked=this.settings.particlesEnabled!==!1);const o=document.getElementById("haptic-enabled");o&&(o.checked=this.settings.hapticEnabled!==!1);const c=document.getElementById("enable-hints");c&&(c.checked=this.settings.enableHints===!0);const s=document.getElementById("enable-timer");s&&(s.checked=this.settings.enableTimer===!0);const i=document.getElementById("auto-save");i&&(i.checked=this.settings.autoSave!==!1);const n=document.getElementById("show-points");n&&(n.checked=this.settings.showPoints===!0);const l=document.getElementById("show-high-score");l&&(l.checked=this.settings.showHighScore===!0);const d=document.getElementById("combo-streak"),r=document.getElementById("combo-cumulative");d&&r&&((this.settings.comboDisplayMode||"streak")==="cumulative"?r.checked=!0:d.checked=!0)}setupEventListeners(){document.querySelectorAll(".nav-item").forEach(s=>{const i=n=>{n.preventDefault(),this.showSection(s.dataset.section)};s.addEventListener("click",i),s.addEventListener("touchstart",n=>{n.preventDefault(),i(n)},{passive:!1})}),document.querySelectorAll(".theme-option").forEach(s=>{const i=n=>{this.selectTheme(n.currentTarget.dataset.theme)};s.addEventListener("click",i),s.addEventListener("touchstart",n=>{n.preventDefault(),i(n)},{passive:!1})}),document.querySelectorAll(".difficulty-option").forEach(s=>{const i=async n=>{await this.selectDifficulty(n.currentTarget.dataset.difficulty)};s.addEventListener("click",i),s.addEventListener("touchstart",async n=>{n.preventDefault(),await i(n)},{passive:!1})}),document.getElementById("enable-hints").addEventListener("change",s=>{this.updateSetting("enableHints",s.target.checked)}),document.getElementById("enable-timer").addEventListener("change",s=>{this.updateSetting("enableTimer",s.target.checked)}),document.getElementById("sound-enabled").addEventListener("change",s=>{this.updateSetting("soundEnabled",s.target.checked)}),document.getElementById("animations-enabled").addEventListener("change",s=>{this.updateSetting("animationsEnabled",s.target.checked)}),document.getElementById("auto-save").addEventListener("change",s=>{this.updateSetting("autoSave",s.target.checked)}),document.getElementById("show-points").addEventListener("change",s=>{this.updateSetting("showPoints",s.target.checked),this.updateBlockPointsDisplay()});const e=document.getElementById("show-high-score");e&&e.addEventListener("change",s=>{this.updateSetting("showHighScore",s.target.checked)});const t=document.getElementById("combo-streak"),a=document.getElementById("combo-cumulative");t&&a&&(t.addEventListener("change",s=>{s.target.checked&&this.updateSetting("comboDisplayMode","streak")}),a.addEventListener("change",s=>{s.target.checked&&this.updateSetting("comboDisplayMode","cumulative")})),document.getElementById("particles-enabled").addEventListener("change",s=>{this.updateSetting("particlesEnabled",s.target.checked)}),document.getElementById("haptic-enabled").addEventListener("change",s=>{this.updateSetting("hapticEnabled",s.target.checked)});const o=document.getElementById("share-button");o&&o.addEventListener("click",()=>{this.shareGame()});const c=document.getElementById("reset-stats");c&&c.addEventListener("click",async()=>{if(await this.confirmationDialog.show("This will permanently delete your game statistics (games played, totals, best score). Your high scores and settings will not be affected. Continue?")){this.storage.clearStatistics();try{this.loadHighScores()}catch{}this.showNotification("Statistics reset")}})}showSection(e){document.querySelectorAll(".nav-item").forEach(t=>{t.classList.remove("active")}),document.querySelector(`[data-section="${e}"]`).classList.add("active"),document.querySelectorAll(".settings-section").forEach(t=>{t.classList.remove("active")}),document.getElementById(`${e}-section`).classList.add("active"),e==="scores"?this.loadHighScores():e==="sounds"&&this.loadSoundCustomization()}loadSoundCustomization(){const e=document.getElementById("sound-customization-container");if(!e)return;this.soundManager.setEnabled(!0);const t=this.soundManager.getSoundEffects(),a=this.soundManager.getAvailablePresets(),o=this.soundManager.customSoundMappings||{};let c="";for(const[i,n]of Object.entries(t)){const l=o[i]||"default";c+=`
                <div class="sound-effect-item">
                    <div class="sound-effect-info">
                        <h4>${n.name}</h4>
                        <p>${n.description}</p>
                    </div>
                    <select class="sound-preset-select" data-sound="${i}">
                        <option value="default" ${l==="default"?"selected":""}>Default</option>
                        ${Object.entries(a).map(([d,r])=>d!=="default"?`<option value="${d}" ${l===d?"selected":""}>${r.name}</option>`:"").join("")}
                    </select>
                    <button class="sound-preview-btn" data-sound="${i}">
                        ðŸ”Š Preview
                    </button>
                </div>
            `}c+=`
            <button class="sound-reset-all-btn" id="reset-all-sounds">
                Reset All to Default
            </button>
        `,e.innerHTML=c,e.querySelectorAll(".sound-preset-select").forEach(i=>{i.addEventListener("change",n=>{const l=n.target.dataset.sound,d=n.target.value;this.soundManager.setCustomSound(l,d)})}),e.querySelectorAll(".sound-preview-btn").forEach(i=>{i.addEventListener("click",n=>{const l=n.currentTarget.dataset.sound;this.soundManager.play(l)})});const s=document.getElementById("reset-all-sounds");s&&s.addEventListener("click",async()=>{await this.confirmationDialog.show("Reset all sound effects to their default sounds?")&&this.resetAllSounds()})}resetAllSounds(){this.soundManager.customSoundMappings={},this.soundManager.saveSoundMappings(),this.soundManager.createSounds(),this.loadSoundCustomization(),this.showNotification("All sounds reset to default")}selectTheme(e){this.currentTheme=e,this.applyTheme(e),this.updateThemeUI(),this.updateDifficultyUI(),this.saveSettings()}applyTheme(e){let t=document.getElementById("theme-css");t||(t=document.createElement("link"),t.rel="stylesheet",t.id="theme-css",document.head.appendChild(t)),t.href=`css/themes/${e}.css`;try{Array.from(document.querySelectorAll('link[rel="stylesheet"]')).filter(s=>(s.getAttribute("href")||"").includes("/assets/wood-")||(s.href||"").includes("/assets/wood-")).forEach(s=>{s.disabled=e!=="wood"})}catch{}const a=document.getElementById("theme-css-light"),o=document.getElementById("theme-css-dark");a&&(a.media="all"),o&&(o.media="all"),document.documentElement.setAttribute("data-theme",e),document.body.className=document.body.className.replace(/light-theme|dark-theme|wood-theme/g,""),document.body.classList.add(`${e}-theme`)}async selectDifficulty(e){var o;const t=localStorage.getItem(((o=this.storage)==null?void 0:o.storageKey)||"blockdoku_game_data");let a=!1;if(t)try{const c=JSON.parse(t);a=c.score>0||c.board.some(s=>s.some(i=>i===1))}catch{a=!1}if(a&&!await this.confirmationDialog.show(`Changing difficulty to ${e.toUpperCase()} will reset your current game and you'll lose your progress. Are you sure you want to continue?`)){this.updateDifficultyUI();return}this.currentDifficulty=e,this.updateDifficultyUI(),this.saveSettings(),window.parent&&window.parent!==window?window.parent.postMessage({type:"difficultyChanged",difficulty:e},"*"):localStorage.setItem("blockdoku_pending_difficulty",e)}updateSetting(e,t){this.settings[e]=t,this.saveSettings()}updateUI(){this.updateThemeUI(),this.updateDifficultyUI(),this.updateGameSettingsUI()}updateThemeUI(){document.querySelectorAll(".theme-option").forEach(e=>{e.classList.remove("selected"),e.dataset.theme===this.currentTheme&&e.classList.add("selected")})}updateDifficultyUI(){document.querySelectorAll(".difficulty-option").forEach(e=>{if(e.classList.remove("selected"),e.dataset.difficulty===this.currentDifficulty)if(e.classList.add("selected"),this.currentTheme==="light"){e.style.color="white",e.style.textShadow="0 1px 2px rgba(0, 0, 0, 0.7)";const t=e.querySelector("h4");t&&(t.style.color="white",t.style.textShadow="0 1px 2px rgba(0, 0, 0, 0.7)");const a=e.querySelector("p");a&&(a.style.color="white",a.style.textShadow="0 1px 2px rgba(0, 0, 0, 0.7)")}else{e.style.color="",e.style.textShadow="";const t=e.querySelector("h4");t&&(t.style.color="",t.style.textShadow="");const a=e.querySelector("p");a&&(a.style.color="",a.style.textShadow="")}})}updateGameSettingsUI(){document.getElementById("enable-hints").checked=this.settings.enableHints||!1,document.getElementById("enable-timer").checked=this.settings.enableTimer||!1,document.getElementById("auto-save").checked=this.settings.autoSave!==!1,document.getElementById("show-points").checked=this.settings.showPoints||!1,this.loadEffectsSettings()}updateBlockPointsDisplay(){const e=this.settings.showPoints||!1;document.querySelectorAll(".block-info").forEach(a=>{e?a.classList.add("show-points"):a.classList.remove("show-points")})}updateBuildInfo(){const e=()=>{if(u.isLoaded()){const t=document.getElementById("version-display"),a=document.getElementById("build-info");t&&(t.textContent=u.getDisplayVersion()),a&&(a.textContent=`Build: ${u.getBuildId()} (${u.getFormattedBuildDate()})`)}else setTimeout(e,100)};e()}loadHighScores(){const e=document.getElementById("high-scores-list"),t=document.getElementById("statistics-display"),a=this.storage.getHighScores(),o=this.storage.loadStatistics();a.length===0?e.innerHTML="<p>No high scores yet. Play a game to set your first record!</p>":e.innerHTML=a.map((c,s)=>`
                <div class="score-item">
                    <div class="rank">#${s+1}</div>
                    <div class="score-value">${c.score}</div>
                    <div class="score-details">${(c.difficulty||"normal").toUpperCase()} â€¢ Level ${c.level} â€¢ ${new Date(c.date).toLocaleDateString()}</div>
                </div>
            `).join(""),t.innerHTML=`
            <div class="stat-item">
                <span class="stat-label">Games Played:</span>
                <span class="stat-value">${o.gamesPlayed}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Score:</span>
                <span class="stat-value">${o.totalScore}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Best Score:</span>
                <span class="stat-value">${o.bestScore}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Lines:</span>
                <span class="stat-value">${o.totalLinesCleared}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Max Combo:</span>
                <span class="stat-value">${o.maxCombo}</span>
            </div>
        `}saveSettings(){const e={...this.settings,theme:this.currentTheme,difficulty:this.currentDifficulty};this.storage.saveSettings(e)}shareGame(){const e="https://blockdoku.523.life",t="Blockdoku - A Progressive Web App Puzzle Game";navigator.share?navigator.share({title:t,text:"Check out this awesome Blockdoku puzzle game!",url:e}).catch(o=>{console.log("Error sharing:",o),this.fallbackShare(e,t)}):this.fallbackShare(e,t)}fallbackShare(e,t){navigator.clipboard.writeText(e).then(()=>{this.showNotification("Game URL copied to clipboard!")}).catch(()=>{alert(`Share this game: ${e}`)})}showNotification(e){const t=document.createElement("div");t.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            background: var(--primary-color, #007bff);
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            font-weight: 500;
            animation: slideIn 0.3s ease;
        `,t.textContent=e;const a=document.createElement("style");a.textContent=`
            @keyframes slideIn {
                from { transform: translateX(100%); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }
        `,document.head.appendChild(a),document.body.appendChild(t),setTimeout(()=>{t.remove(),a.remove()},3e3)}}document.addEventListener("DOMContentLoaded",()=>{new p});
