const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./sound-manager-BRLdBeEu.js","./sound-manager-B89XSKqS.css"])))=>i.map(i=>d[i]);
import"./wood-BSoGWpSl.js";import{C as A,S as G,G as $,P as O}from"./sound-manager-BRLdBeEu.js";const H="modulepreload",q=function(m,t){return new URL(m,t).href},L={},I=function(t,e,i){let s=Promise.resolve();if(e&&e.length>0){const a=document.getElementsByTagName("link"),l=document.querySelector("meta[property=csp-nonce]"),n=(l==null?void 0:l.nonce)||(l==null?void 0:l.getAttribute("nonce"));s=Promise.allSettled(e.map(r=>{if(r=q(r,i),r in L)return;L[r]=!0;const c=r.endsWith(".css"),h=c?'[rel="stylesheet"]':"";if(!!i)for(let f=a.length-1;f>=0;f--){const g=a[f];if(g.href===r&&(!c||g.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${r}"]${h}`))return;const d=document.createElement("link");if(d.rel=c?"stylesheet":H,c||(d.as="script"),d.crossOrigin="",d.href=r,n&&d.setAttribute("nonce",n),document.head.appendChild(d),c)return new Promise((f,g)=>{d.addEventListener("load",f),d.addEventListener("error",()=>g(new Error(`Unable to preload CSS for ${r}`)))})}))}function o(a){const l=new Event("vite:preloadError",{cancelable:!0});if(l.payload=a,window.dispatchEvent(l),!l.defaultPrevented)throw a}return s.then(a=>{for(const l of a||[])l.status==="rejected"&&o(l.reason);return t().catch(o)})};class W{constructor(){this.blockShapes=this.defineBlockShapes(),this.currentBlocks=[],this.selectedBlock=null,this.selectedBlockPosition=null}defineBlockShapes(){return{single:{name:"Single",shape:[[1]],color:"#007bff",points:1},line2:{name:"Line 2",shape:[[1,1]],color:"#28a745",points:2},line3:{name:"Line 3",shape:[[1,1,1]],color:"#28a745",points:3},l2x2:{name:"L 2x2",shape:[[1,0],[1,1]],color:"#dc3545",points:3},l3x2:{name:"L 3x2",shape:[[1,0],[1,0],[1,1]],color:"#dc3545",points:4},t3x2:{name:"T 3x2",shape:[[1,1,1],[0,1,0]],color:"#ffc107",points:4},square2x2:{name:"Square 2x2",shape:[[1,1],[1,1]],color:"#6f42c1",points:4},z3x2:{name:"Z 3x2",shape:[[1,1,0],[0,1,1]],color:"#fd7e14",points:4}}}generateRandomBlocks(t=3,e="all",i=null){let s=Object.keys(this.blockShapes);if(i){const o=i.getAllowedShapes(),a=i.getBlockSizeRange();o!=="all"&&(s=s.filter(l=>o.includes(l))),s=s.filter(l=>{const n=this.blockShapes[l].shape,r=Math.max(n.length,n[0].length);return r>=a[0]&&r<=a[1]})}else e==="large"?s=s.filter(o=>{const a=this.blockShapes[o].shape;return Math.max(a.length,a[0].length)>=3}):e==="small"?s=s.filter(o=>{const a=this.blockShapes[o].shape;return Math.max(a.length,a[0].length)<=3}):e==="complex"&&(s=s.filter(o=>(this.blockShapes[o].shape,o.includes("L")||o.includes("T")||o.includes("Z")||o.includes("U")||o.includes("Cross")||o.includes("Plus"))));s.length===0&&(s=Object.keys(this.blockShapes)),this.currentBlocks=[];for(let o=0;o<t;o++){const a=s[Math.floor(Math.random()*s.length)],l={...this.blockShapes[a],id:`block_${o}_${Date.now()}`,rotation:0};this.currentBlocks.push(l)}return this.currentBlocks}rotateBlock(t){return t?{...t,shape:this.rotateMatrix(t.shape),rotation:(t.rotation+90)%360}:null}rotateMatrix(t){const e=t.length,i=t[0].length,s=[];for(let o=0;o<i;o++){s[o]=[];for(let a=0;a<e;a++)s[o][a]=t[e-1-a][o]}return s}canPlaceBlock(t,e,i,s){if(!t||!s||!Array.isArray(s)||s.length===0)return console.warn("canPlaceBlock: Invalid inputs",{block:t,board:s}),!1;const o=t.shape;if(!o||!Array.isArray(o)||o.length===0)return console.warn("canPlaceBlock: Invalid block shape",{block:t,shape:o}),!1;const a=s.length;if(e<0||i<0||e+o.length>a||i+o[0].length>a)return!1;for(let l=0;l<o.length;l++)for(let n=0;n<o[l].length;n++)if(o[l][n]===1&&(e+l>=a||i+n>=a||!s[e+l]||s[e+l][i+n]===1))return!1;return!0}placeBlock(t,e,i,s){const o=t.shape,a=s.map(l=>[...l]);for(let l=0;l<o.length;l++)for(let n=0;n<o[l].length;n++)o[l][n]===1&&(a[e+l][i+n]=1);return a}removeBlock(t){this.currentBlocks=this.currentBlocks.filter(e=>e.id!==t)}getBlockById(t){return this.currentBlocks.find(e=>e.id===t)}clearSelection(){this.selectedBlock=null,this.selectedBlockPosition=null}}class U{constructor(t,e){this.container=document.getElementById(t),this.blockManager=e,this.selectedBlock=null,this.blockElements=new Map,this._placeabilityTimeout=null,this.lastTapTime=null,this.init()}init(){this.render(),this.setupEventListeners()}render(){this.container&&(this.container.innerHTML=`
            <div class="block-palette">
                <h3>Available Blocks</h3>
                <div class="blocks-container" id="blocks-container">
                    <!-- Blocks will be rendered here -->
                </div>
            </div>
            <button id="rotate-selected" class="rotate-selected-btn" title="Rotate selected block">
                <span>↻</span>
            </button>
        `)}updateBlocks(t){const e=document.getElementById("blocks-container");e&&(e.innerHTML="",this.blockElements.clear(),t.forEach(i=>{const s=this.createBlockElement(i);e.appendChild(s),this.blockElements.set(i.id,s)}))}createBlockElement(t){const e=document.createElement("div");e.className="block-item",e.dataset.blockId=t.id,e.title=`Click to select, double-click to rotate: ${t.name} (${t.points} pts)`;const i=document.createElement("div");i.className="block-shape";const s=30,o=document.createElement("div");o.className="block-preview",o.style.width=`${t.shape[0].length*s}px`,o.style.height=`${t.shape.length*s}px`;const a=document.createElement("canvas");a.width=t.shape[0].length*s,a.height=t.shape.length*s;const l=a.getContext("2d");l.fillStyle=t.color,l.strokeStyle=this.darkenColor(t.color),l.lineWidth=2;for(let n=0;n<t.shape.length;n++)for(let r=0;r<t.shape[n].length;r++)if(t.shape[n][r]===1){const c=r*s,h=n*s;l.fillRect(c,h,s,s),l.strokeRect(c,h,s,s)}return o.appendChild(a),i.appendChild(o),e.appendChild(i),e}setupEventListeners(){document.addEventListener("click",t=>{if(t.target.closest(".block-item")){const i=t.target.closest(".block-item").dataset.blockId;this.selectBlock(i)}t.target.closest("#rotate-selected")&&(t.preventDefault(),this.selectedBlock&&this.rotateBlock(this.selectedBlock.id))}),document.addEventListener("dblclick",t=>{if(t.target.closest(".block-item")){t.preventDefault();const i=t.target.closest(".block-item").dataset.blockId;this.rotateBlock(i)}}),document.addEventListener("touchstart",t=>{if(t.target.closest(".block-item")){const e=t.target.closest(".block-item"),i=e.dataset.blockId;this.touchStart=t.touches[0],this.touchStartTime=Date.now(),this.touchStartBlockId=i,e.style.transform="scale(0.95)",e.style.transition="transform 0.1s ease"}},{passive:!0}),document.addEventListener("touchmove",t=>{if(this.touchStart&&this.touchStartBlockId){const e=t.touches[0],i=Math.abs(e.clientX-this.touchStart.clientX),s=Math.abs(e.clientY-this.touchStart.clientY),o=Date.now()-this.touchStartTime;if((i>5||s>5||o>100)&&(t.preventDefault(),!this.isDragging)){this.isDragging=!0,this.startDragFromPalette(e);const a=document.querySelector(`[data-block-id="${this.touchStartBlockId}"]`);a&&a.classList.add("dragging")}}},{passive:!1}),document.addEventListener("touchend",t=>{if(this.touchStart){const e=document.querySelector(`[data-block-id="${this.touchStartBlockId}"]`),i=t.changedTouches[0],s=Date.now()-this.touchStartTime,o=Math.abs(i.clientX-this.touchStart.clientX),a=Math.abs(i.clientY-this.touchStart.clientY);o<5&&a<5&&s<200&&(this.lastTapTime&&Date.now()-this.lastTapTime<300?(t.preventDefault(),this.rotateBlock(this.touchStartBlockId),this.lastTapTime=null):(this.selectBlock(this.touchStartBlockId),this.lastTapTime=Date.now())),e&&(e.classList.remove("dragging"),e.style.transform="",e.style.transition=""),this.touchStart=null,this.touchStartTime=null,this.touchStartBlockId=null,this.isDragging=!1}},{passive:!1}),document.addEventListener("touchcancel",t=>{if(this.touchStart){const e=document.querySelector(`[data-block-id="${this.touchStartBlockId}"]`);e&&(e.classList.remove("dragging"),e.style.transform="",e.style.transition=""),this.touchStart=null,this.touchStartTime=null,this.touchStartBlockId=null,this.isDragging=!1,this.lastTapTime=null}},{passive:!0})}startDragFromPalette(t){const e=new CustomEvent("blockDragStart",{detail:{block:this.selectedBlock,touch:t}});document.dispatchEvent(e)}selectBlock(t){if(this.clearSelection(),this.selectedBlock=this.blockManager.getBlockById(t),this.selectedBlock){const e=this.blockElements.get(t);e&&e.classList.add("selected")}this.updateRotateButton(),this.dispatchSelectionEvent()}selectBlockById(t){this.selectBlock(t)}rotateBlock(t){const e=this.blockManager.getBlockById(t);if(!e)return;const i=this.blockManager.rotateBlock(e);if(i){const s=this.blockManager.currentBlocks.findIndex(o=>o.id===t);s!==-1&&(this.blockManager.currentBlocks[s]=i,this.updateBlocks(this.blockManager.currentBlocks),this.selectedBlock&&this.selectedBlock.id===t&&(this.selectedBlock=i,this.dispatchSelectionEvent()),this.game&&this.game.effectsManager&&this.game.effectsManager.onBlockRotate())}}clearSelection(){this.selectedBlock=null,this.blockElements.forEach(t=>{t.classList.remove("selected")}),this.updateRotateButton()}dispatchSelectionEvent(){const t=new CustomEvent("blockSelected",{detail:{block:this.selectedBlock}});document.dispatchEvent(t)}darkenColor(t){const e=t.replace("#",""),i=parseInt(e.substr(0,2),16),s=parseInt(e.substr(2,2),16),o=parseInt(e.substr(4,2),16),a=Math.max(0,i-30),l=Math.max(0,s-30),n=Math.max(0,o-30);return`rgb(${a}, ${l}, ${n})`}updateRotateButton(){const t=document.getElementById("rotate-selected");t&&(this.selectedBlock?(t.disabled=!1,t.classList.remove("disabled")):(t.disabled=!0,t.classList.add("disabled")))}getSelectedBlock(){return this.selectedBlock}setPlaceability(t,e={}){const{highlightLast:i=!1,durationMs:s=1250}=e;this._placeabilityTimeout&&(clearTimeout(this._placeabilityTimeout),this._placeabilityTimeout=null);let o=[];if(Object.keys(t||{}).forEach(a=>{t[a]&&o.push(a)}),this.blockElements.forEach((a,l)=>{const n=!!t[l];a.classList.toggle("unplaceable",!n),a.classList.toggle("placeable",n),a.classList.remove("last-playable")}),i&&o.length===1){const a=o[0],l=this.blockElements.get(a);l&&l.classList.add("last-playable")}this._placeabilityTimeout=setTimeout(()=>{this.clearPlaceability()},s)}showPreGameOverIndicator(t=1250){if(!this.container)return;const e=this.container.querySelector(".block-palette");e&&e.classList.add("pre-game-over"),this.blockElements.forEach(i=>{i.classList.add("unplaceable"),i.classList.remove("last-playable")}),this._placeabilityTimeout&&clearTimeout(this._placeabilityTimeout),this._placeabilityTimeout=setTimeout(()=>{this.clearPlaceability()},t)}clearPlaceability(){const t=this.container?this.container.querySelector(".block-palette"):null;t&&t.classList.remove("pre-game-over"),this.blockElements.forEach(e=>{e.classList.remove("unplaceable"),e.classList.remove("placeable"),e.classList.remove("last-playable")}),this._placeabilityTimeout&&(clearTimeout(this._placeabilityTimeout),this._placeabilityTimeout=null)}}class N{constructor(){this.score=0,this.level=1,this.linesCleared=0,this.combo=0,this.maxCombo=0,this.rowsClearedCount=0,this.columnsClearedCount=0,this.squaresClearedCount=0,this.comboActivations=0,this.pointsBreakdown={linePoints:0,squarePoints:0,comboBonusPoints:0},this.basePoints={single:1,line:15,square:20,combo:5},this.levelProgression={baseRange:100,stepIncrease:.05,roundingMode:"round"}}checkForCompletedLines(t){const e={rows:[],columns:[],squares:[]};for(let i=0;i<t.length;i++)this.isRowComplete(t,i)&&e.rows.push(i);for(let i=0;i<t[0].length;i++)this.isColumnComplete(t,i)&&e.columns.push(i);for(let i=0;i<3;i++)for(let s=0;s<3;s++)this.isSquareComplete(t,i,s)&&e.squares.push({row:i,col:s});return e}checkAndClearLines(t,e=1){const i=this.checkForCompletedLines(t);return this.applyClears(t,i,e)}isRowComplete(t,e){return t[e].every(i=>i===1)}isColumnComplete(t,e){return t.every(i=>i[e]===1)}isSquareComplete(t,e,i){const s=e*3,o=i*3;for(let a=s;a<s+3;a++)for(let l=o;l<o+3;l++)if(t[a][l]!==1)return!1;return!0}applyClears(t,e,i=1){console.log("ScoringSystem.applyClears called with:",{board:t,clearedLines:e});let s=t.map(r=>[...r]),o=0;e.rows.forEach(r=>{console.log(`Clearing row ${r}`),s[r]=new Array(t[0].length).fill(0),o++}),e.columns.forEach(r=>{console.log(`Clearing column ${r}`);for(let c=0;c<t.length;c++)s[c][r]=0;o++}),e.squares.forEach(r=>{console.log(`Clearing square at row ${r.row}, col ${r.col}`);const c=r.row*3,h=r.col*3;for(let u=c;u<c+3;u++)for(let d=h;d<h+3;d++)s[u][d]=0;o++}),console.log(`Total cleared: ${o}`);const a=[];e.rows.length>0&&a.push("row"),e.columns.length>0&&a.push("column"),e.squares.length>0&&a.push("square");const l=e.rows.length+e.columns.length+e.squares.length,n=a.length>=2||l>=2;return o>0?(this.rowsClearedCount+=e.rows.length,this.columnsClearedCount+=e.columns.length,this.squaresClearedCount+=e.squares.length,this.calculateScore(e,n,i),this.linesCleared+=o,n?(this.combo++,this.maxCombo=Math.max(this.maxCombo,this.combo),this.comboActivations++):this.combo=0):this.combo=0,{board:s,clearedCount:o,scoreGained:this.getLastScoreGained(),isCombo:n,comboTypes:a,clearedLines:e}}calculateScore(t,e=!1,i=1){let s=0;const o=(t.rows.length+t.columns.length)*this.basePoints.line,a=t.squares.length*this.basePoints.square;s+=o,s+=a,this.pointsBreakdown.linePoints+=o,this.pointsBreakdown.squarePoints+=a;const l=t.rows.length+t.columns.length+t.squares.length;if(e){const n=20*(l-1);s+=n,this.pointsBreakdown.comboBonusPoints+=n}s*=this.level,s=Math.floor(s*i),this.score+=s,this.lastScoreGained=s,this.updateLevelFromScore()}addPlacementPoints(t,e=1){const i=Math.max(0,t|0);if(i===0)return;const s=Math.floor(i*e);this.score+=s,this.lastScoreGained=s,this.updateLevelFromScore()}getLastScoreGained(){return this.lastScoreGained||0}getScore(){return this.score}getLevel(){return this.level}getCombo(){return this.combo}getMaxCombo(){return this.maxCombo}getComboTotal(){return this.comboActivations}getLinesCleared(){return this.linesCleared}reset(){this.score=0,this.level=1,this.linesCleared=0,this.combo=0,this.maxCombo=0,this.lastScoreGained=0,this.rowsClearedCount=0,this.columnsClearedCount=0,this.squaresClearedCount=0,this.comboActivations=0,this.pointsBreakdown={linePoints:0,squarePoints:0,comboBonusPoints:0}}applyRounding(t,e){switch(e){case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);case"round":return Math.round(t);default:return t}}getLevelThreshold(t){if(t<=1)return 0;const e=this.levelProgression.baseRange,i=this.levelProgression.stepIncrease,s=this.levelProgression.roundingMode;let o=101,a=e;for(let l=2;l<t;l++)a=this.applyRounding(a*(1+i),s),o+=a;return o}updateLevelFromScore(){let t=1;const e=200;for(let i=2;i<=e;i++){const s=this.getLevelThreshold(i);if(this.score>=s){t=i;continue}break}t>this.level&&(this.level=t)}getStats(){return{score:this.score,level:this.level,linesCleared:this.linesCleared,combo:this.combo,maxCombo:this.maxCombo,rowClears:this.rowsClearedCount,columnClears:this.columnsClearedCount,squareClears:this.squaresClearedCount,comboActivations:this.comboActivations,breakdownBase:{linePoints:this.pointsBreakdown.linePoints,squarePoints:this.pointsBreakdown.squarePoints,comboBonusPoints:this.pointsBreakdown.comboBonusPoints}}}}class D{constructor(){this.isOnline=navigator.onLine,this.offlineIndicator=null,this.init()}init(){this.setupEventListeners(),this.createOfflineIndicator(),this.updateOfflineStatus()}setupEventListeners(){window.addEventListener("online",()=>{console.log("PWA: Back online"),this.isOnline=!0,this.updateOfflineStatus()}),window.addEventListener("offline",()=>{console.log("PWA: Gone offline"),this.isOnline=!1,this.updateOfflineStatus()}),document.addEventListener("visibilitychange",()=>{document.hidden?this.handleAppBlur():this.handleAppFocus()})}createOfflineIndicator(){this.offlineIndicator=document.createElement("div"),this.offlineIndicator.id="offline-indicator",this.offlineIndicator.className="offline-indicator",this.offlineIndicator.innerHTML="📡 Offline Mode",this.offlineIndicator.style.cssText=`
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            background: #ff6b35;
            color: white;
            text-align: center;
            padding: 0.5rem;
            font-size: 0.9rem;
            font-weight: 500;
            z-index: 1000;
            transform: translateY(-100%);
            transition: transform 0.3s ease;
        `,document.body.appendChild(this.offlineIndicator)}updateOfflineStatus(){this.offlineIndicator&&(this.isOnline?(this.offlineIndicator.style.transform="translateY(-100%)",this.offlineIndicator.innerHTML="📡 Offline Mode"):(this.offlineIndicator.style.transform="translateY(0)",this.offlineIndicator.innerHTML="📡 Offline Mode - Game works without internet!"))}handleAppBlur(){console.log("PWA: App blurred")}handleAppFocus(){console.log("PWA: App focused")}isStandalone(){return window.matchMedia("(display-mode: standalone)").matches||window.navigator.standalone===!0}getStatus(){return{isOnline:this.isOnline,isStandalone:this.isStandalone(),supportsOffline:"serviceWorker"in navigator}}}const F=Object.freeze(Object.defineProperty({__proto__:null,OfflineManager:D},Symbol.toStringTag,{value:"Module"}));class j{constructor(){this.currentDifficulty="normal",this.difficultySettings=this.initializeDifficultySettings(),this.gameRules=this.initializeGameRules()}initializeDifficultySettings(){return{easy:{name:"Easy",description:"Larger blocks, slower pace, hints available",blockSizeRange:[2,4],allowedShapes:["square2x2","square3x3","l2x2","line2","line3"],scoreMultiplier:1.5,timeLimit:null,hintsEnabled:!0,blockGenerationDelay:2e3,visualHints:!0},normal:{name:"Normal",description:"Standard block variety, moderate pace",blockSizeRange:[1,5],allowedShapes:"all",scoreMultiplier:1,timeLimit:null,hintsEnabled:!1,blockGenerationDelay:1500,visualHints:!1},hard:{name:"Hard",description:"Smaller blocks, faster pace, no hints",blockSizeRange:[1,3],allowedShapes:["single","line2","line3","l2x2","t3x2","z3x2"],scoreMultiplier:.8,timeLimit:null,hintsEnabled:!1,blockGenerationDelay:1e3,visualHints:!1},expert:{name:"Expert",description:"Complex shapes, time pressure, limited moves",blockSizeRange:[1,4],allowedShapes:"all",scoreMultiplier:.5,timeLimit:300,hintsEnabled:!1,blockGenerationDelay:800,visualHints:!1,moveLimit:50}}}initializeGameRules(){return{basePoints:{single:10,line:100,combo:50},levelThresholds:{easy:[100,300,600,1e3,1500,2200,3e3,4e3,5200,6600],normal:[200,500,900,1400,2e3,2700,3500,4400,5400,6500],hard:[150,400,700,1100,1600,2200,2900,3700,4600,5600],expert:[100,250,450,700,1e3,1350,1750,2200,2700,3250]},comboThresholds:{easy:2,normal:3,hard:4,expert:5}}}setDifficulty(t){return this.difficultySettings[t]?(this.currentDifficulty=t,!0):!1}getCurrentDifficulty(){return this.currentDifficulty}getDifficultySettings(){return this.difficultySettings[this.currentDifficulty]}getScoreMultiplier(){return this.difficultySettings[this.currentDifficulty].scoreMultiplier}getTimeLimit(){return this.difficultySettings[this.currentDifficulty].timeLimit}isHintsEnabled(){return this.difficultySettings[this.currentDifficulty].hintsEnabled}getBlockGenerationDelay(){return this.difficultySettings[this.currentDifficulty].blockGenerationDelay}hasVisualHints(){return this.difficultySettings[this.currentDifficulty].visualHints}getMoveLimit(){return this.difficultySettings[this.currentDifficulty].moveLimit||null}getAllowedShapes(){return this.difficultySettings[this.currentDifficulty].allowedShapes}getBlockSizeRange(){return this.difficultySettings[this.currentDifficulty].blockSizeRange}getLevelThresholds(){return this.gameRules.levelThresholds[this.currentDifficulty]}getComboThreshold(){return this.gameRules.comboThresholds[this.currentDifficulty]}calculateScore(t,e=1){const i=this.getScoreMultiplier();return Math.floor(t*i)}shouldGenerateNewBlocks(t,e){const i=this.getLevelThresholds();return e<=i.length&&t>=i[e-1]}getDifficultyInfo(){const t=this.getDifficultySettings();return{name:t.name,description:t.description,features:{hints:t.hintsEnabled,timer:t.timeLimit!==null,moveLimit:t.moveLimit!==null}}}getAvailableDifficulties(){return Object.keys(this.difficultySettings).map(t=>({key:t,...this.difficultySettings[t]}))}reset(){this.currentDifficulty="normal"}}class Y{constructor(t,e){this.game=t,this.difficultyManager=e,this.hintsActive=!1,this.validPositions=[],this.hintCooldown=0,this.lastHintTime=0,this.hintDuration=5e3,this.cooldownDuration=1e4}update(t){this.hintCooldown>0&&(this.hintCooldown-=t)}isHintAvailable(){return this.difficultyManager.isHintsEnabled()&&this.game.enableHints&&this.hintCooldown<=0&&this.game.selectedBlock!==null}showHint(){return this.isHintAvailable()?(this.hintsActive=!0,this.lastHintTime=Date.now(),this.hintCooldown=this.cooldownDuration,this.findValidPositions(),setTimeout(()=>{this.hideHints()},this.hintDuration),!0):!1}hideHints(){this.hintsActive=!1,this.validPositions=[],this.game.drawBoard()}findValidPositions(){if(!this.game.selectedBlock)return;this.validPositions=[];const t=this.game.selectedBlock;this.game.board;const e=this.game.boardSize;for(let i=0;i<e;i++)for(let s=0;s<e;s++)this.game.canPlaceBlock(i,s)&&this.validPositions.push({row:i,col:s});this.validPositions.sort((i,s)=>{const o=this.calculatePositionScore(i.row,i.col,t);return this.calculatePositionScore(s.row,s.col,t)-o})}calculatePositionScore(t,e,i){let s=0;const o=this.simulateBlockPlacement(t,e,i),a=this.game.scoringSystem.checkAndClearLines(o);s+=(a.rows.length+a.columns.length+a.squares.length)*100,(a.rows.length>1||a.columns.length>1||a.squares.length>1)&&(s+=200);const l=this.game.boardSize/2,n=this.game.boardSize/2,r=Math.abs(t-l)+Math.abs(e-n);return s+=(this.game.boardSize-r)*10,s}simulateBlockPlacement(t,e,i){const s=this.game.board.map(o=>[...o]);return this.game.blockManager.canPlaceBlock(i,t,e,s)?this.game.blockManager.placeBlock(i,t,e,s):s}drawHints(t){if(!this.hintsActive||this.validPositions.length===0)return;const e=this.game.actualCellSize||this.game.cellSize;t.save(),t.globalAlpha=.6,this.validPositions.slice(0,3).forEach((s,o)=>{const a=s.col*e,l=s.row*e;let n;switch(o){case 0:n="#00ff00";break;case 1:n="#ffff00";break;case 2:n="#ff8800";break}t.fillStyle=n,t.fillRect(a+2,l+2,e-4,e-4),t.shadowColor=n,t.shadowBlur=10,t.strokeStyle=n,t.lineWidth=2,t.strokeRect(a+2,l+2,e-4,e-4)}),t.restore()}getHintCount(){return this.validPositions.length}getBestPosition(){return this.validPositions.length>0?this.validPositions[0]:null}getHintStatus(){return{active:this.hintsActive,available:this.isHintAvailable(),cooldownRemaining:Math.max(0,this.hintCooldown),validPositions:this.validPositions.length}}forceShowHints(){this.hintsActive=!0,this.hintCooldown=0,this.findValidPositions()}reset(){this.hintsActive=!1,this.validPositions=[],this.hintCooldown=0,this.lastHintTime=0}}class _{constructor(t){this.difficultyManager=t,this.timeLimit=null,this.timeRemaining=0,this.isActive=!1,this.isPaused=!1,this.startTime=0,this.pausedTime=0,this.timeBonus=0,this.warningThreshold=30,this.criticalThreshold=10}initialize(){this.timeLimit=this.difficultyManager.getTimeLimit(),this.timeLimit&&(this.timeRemaining=this.timeLimit,this.isActive=!0)}start(){!this.isActive||this.timeLimit===null||(this.startTime=Date.now(),this.isPaused=!1,this.pausedTime=0)}pause(){!this.isActive||this.isPaused||(this.isPaused=!0,this.pausedTime=Date.now())}resume(){if(!this.isActive||!this.isPaused)return;const t=Date.now()-this.pausedTime;this.startTime+=t,this.isPaused=!1}update(){if(!this.isActive||this.isPaused||this.timeLimit===null||this.startTime===0)return!0;const t=Date.now()-this.startTime;return this.timeRemaining=Math.max(0,this.timeLimit-Math.floor(t/1e3)),this.timeRemaining>0}addTimeBonus(t){this.timeRemaining+=t,this.timeBonus+=t}getTimeRemaining(){return this.timeRemaining}getTimeBonus(){return this.timeBonus}isTimeUp(){return this.isActive&&this.timeLimit!==null&&this.startTime>0&&this.timeRemaining<=0}isWarningTime(){return this.timeRemaining<=this.warningThreshold&&this.timeRemaining>this.criticalThreshold}isCriticalTime(){return this.timeRemaining<=this.criticalThreshold}getTimeStatus(){return{remaining:this.timeRemaining,limit:this.timeLimit,isActive:this.isActive,isPaused:this.isPaused,isWarning:this.isWarningTime(),isCritical:this.isCriticalTime(),bonus:this.timeBonus}}formatTime(t){const e=Math.floor(t/60),i=t%60;return`${e}:${i.toString().padStart(2,"0")}`}getFormattedTimeRemaining(){return this.formatTime(this.timeRemaining)}getFormattedTimeLimit(){return this.formatTime(this.timeLimit)}calculateTimeBonus(t){const e=t.rows.length+t.columns.length+t.squares.length;if(e===0)return 0;let i=e*5;e>1&&(i+=(e-1)*3);const s=this.difficultyManager.getComboThreshold();return e>=s&&(i+=10),i}getTimePressureEffects(){return this.isActive?this.isCriticalTime()?{type:"critical",color:"#ff0000",intensity:1,pulse:!0}:this.isWarningTime()?{type:"warning",color:"#ff8800",intensity:.7,pulse:!1}:null:null}reset(){this.timeRemaining=this.timeLimit||0,this.isActive=this.timeLimit!==null,this.isPaused=!1,this.startTime=0,this.pausedTime=0,this.timeBonus=0}disable(){this.isActive=!1,this.timeLimit=null,this.timeRemaining=0}}class X{constructor(t,e){this.game=t,this.difficultyManager=e,this.container=null,this.isVisible=!1,this.confirmationDialog=new A}create(){this.container=document.createElement("div"),this.container.id="difficulty-selector",this.container.className="difficulty-selector";const t=document.createElement("div");t.className="difficulty-overlay";const e=()=>this.hide();t.addEventListener("click",e),t.addEventListener("touchstart",r=>{r.preventDefault(),e()},{passive:!1});const i=document.createElement("div");i.className="difficulty-modal";const s=document.createElement("div");s.className="difficulty-header",s.innerHTML="<h2>Select Difficulty</h2>";const o=document.createElement("div");o.className="difficulty-options",this.difficultyManager.getAvailableDifficulties().forEach(r=>{const c=this.createDifficultyOption(r);o.appendChild(c)});const l=document.createElement("button");l.className="difficulty-close",l.innerHTML="×";const n=()=>this.hide();l.addEventListener("click",n),l.addEventListener("touchstart",r=>{r.preventDefault(),n()},{passive:!1}),i.appendChild(s),i.appendChild(o),i.appendChild(l),this.container.appendChild(t),this.container.appendChild(i),document.body.appendChild(this.container),this.addStyles()}createDifficultyOption(t){const e=document.createElement("div");e.className="difficulty-option",e.dataset.difficulty=t.key,t.key===this.difficultyManager.getCurrentDifficulty()&&e.classList.add("selected");const i=document.createElement("div");i.className="difficulty-icon",i.innerHTML=this.getDifficultyIcon(t.key);const s=document.createElement("div");s.className="difficulty-content";const o=document.createElement("h3");o.textContent=t.name;const a=document.createElement("p");a.textContent=t.description;const l=document.createElement("div");if(l.className="difficulty-features",t.hintsEnabled){const r=document.createElement("span");r.className="feature hint",r.textContent="Hints",l.appendChild(r)}if(t.undoEnabled){const r=document.createElement("span");r.className="feature undo",r.textContent="Undo",l.appendChild(r)}if(t.timeLimit){const r=document.createElement("span");r.className="feature timer",r.textContent="Timer",l.appendChild(r)}if(t.moveLimit){const r=document.createElement("span");r.className="feature moves",r.textContent="Limited Moves",l.appendChild(r)}s.appendChild(o),s.appendChild(a),s.appendChild(l),e.appendChild(i),e.appendChild(s);const n=async()=>{await this.selectDifficulty(t.key)};return e.addEventListener("click",n),e.addEventListener("touchstart",async r=>{r.preventDefault(),await n()},{passive:!1}),e}getDifficultyIcon(t){return{easy:"😊",normal:"😐",hard:"😤",expert:"🔥"}[t]||"🎮"}async selectDifficulty(t){(this.game.score>0||this.game.board.some(i=>i.some(s=>s===1)))&&!await this.confirmationDialog.show(`Changing difficulty to ${t.toUpperCase()} will reset your current game and you'll lose your progress. Are you sure you want to continue?`)||(this.difficultyManager.setDifficulty(t),this.updateSelection(t),this.game.restartWithDifficulty(t),this.hide())}updateSelection(t){this.container.querySelectorAll(".difficulty-option").forEach(i=>{i.dataset.difficulty===t?i.classList.add("selected"):i.classList.remove("selected")})}show(){this.container||this.create(),this.container.style.display="flex",this.container.style.pointerEvents="auto",this.isVisible=!0,requestAnimationFrame(()=>{this.container.classList.add("show")})}hide(){this.container&&(this.container.classList.remove("show"),this.isVisible=!1,this.container.style.pointerEvents="none",setTimeout(()=>{this.container&&this.container.parentNode&&(this.container.parentNode.removeChild(this.container),this.container=null)},300))}addStyles(){const t=document.createElement("style");t.textContent=`
            .difficulty-selector {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                z-index: 1000;
                display: none;
                align-items: center;
                justify-content: center;
                opacity: 0;
                transition: opacity 0.3s ease;
                pointer-events: none;
            }
            
            .difficulty-selector.show {
                opacity: 1;
                pointer-events: auto;
            }
            
            .difficulty-overlay {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0.7);
                backdrop-filter: blur(5px);
                pointer-events: auto;
            }
            
            .difficulty-modal {
                position: relative;
                background: var(--card-bg, var(--header-bg, white));
                border: 2px solid var(--border-color, #e0e0e0);
                border-radius: 12px;
                padding: 24px;
                max-width: 500px;
                width: 90%;
                max-height: 80vh;
                overflow-y: auto;
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
                transform: scale(0.9);
                transition: transform 0.3s ease;
            }
            
            .difficulty-selector.show .difficulty-modal {
                transform: scale(1);
            }
            
            .difficulty-header {
                text-align: center;
                margin-bottom: 24px;
            }
            
            .difficulty-header h2 {
                margin: 0;
                color: var(--text-color, #333);
                font-size: 1.5rem;
            }
            
            .difficulty-options {
                display: grid;
                gap: 12px;
            }
            
            .difficulty-option {
                display: flex;
                align-items: center;
                padding: 16px;
                border: 2px solid var(--border-color, #e0e0e0);
                border-radius: 8px;
                cursor: pointer;
                transition: all 0.2s ease;
                background: var(--card-bg, var(--header-bg, white));
            }
            
            .difficulty-option:hover {
                border-color: var(--primary-color, #007bff);
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0, 123, 255, 0.2);
            }
            
            .difficulty-option.selected {
                border-color: var(--primary-color, #007bff);
                background: var(--primary-color, #007bff);
                color: white !important;
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7) !important;
            }
            
            .difficulty-icon {
                font-size: 2rem;
                margin-right: 16px;
                min-width: 40px;
                text-align: center;
            }
            
            .difficulty-content {
                flex: 1;
            }
            
            .difficulty-content h3 {
                margin: 0 0 8px 0;
                color: var(--text-color, #333);
                font-size: 1.1rem;
            }
            
            .difficulty-option.selected .difficulty-content h3 {
                color: white !important;
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7) !important;
            }
            
            .difficulty-content p {
                margin: 0 0 8px 0;
                color: var(--text-muted, #666);
                font-size: 0.9rem;
                line-height: 1.4;
            }
            
            .difficulty-option.selected .difficulty-content p {
                color: rgba(255, 255, 255, 0.9);
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
            }
            
            .difficulty-features {
                display: flex;
                flex-wrap: wrap;
                gap: 6px;
            }
            
            .feature {
                padding: 4px 8px;
                border-radius: 12px;
                font-size: 0.75rem;
                font-weight: 500;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }
            
            .feature.hint {
                background: #e8f5e8;
                color: #2d5a2d;
            }
            
            .feature.undo {
                background: #fff3cd;
                color: #856404;
            }
            
            .feature.timer {
                background: #f8d7da;
                color: #721c24;
            }
            
            .feature.moves {
                background: #d1ecf1;
                color: #0c5460;
            }
            
            .difficulty-close {
                position: absolute;
                top: 12px;
                right: 12px;
                background: none;
                border: none;
                font-size: 1.5rem;
                cursor: pointer;
                color: var(--text-muted, #999);
                width: 32px;
                height: 32px;
                display: flex;
                align-items: center;
                justify-content: center;
                border-radius: 50%;
                transition: all 0.2s ease;
            }
            
            .difficulty-close:hover {
                background: var(--cell-hover, #f0f0f0);
                color: var(--text-color, #333);
            }
            
            @media (max-width: 480px) {
                .difficulty-modal {
                    padding: 16px;
                    margin: 16px;
                }
                
                .difficulty-option {
                    padding: 12px;
                }
                
                .difficulty-icon {
                    font-size: 1.5rem;
                    margin-right: 12px;
                }
            }
        `,document.head.appendChild(t)}}class V{constructor(t,e){this.canvas=t,this.ctx=e,this.particles=[],this.isEnabled=!0,this.maxParticles=200,this.animate()}setEnabled(t){this.isEnabled=t,t||(this.particles=[])}getThemeColor(t){try{const e=getComputedStyle(document.documentElement).getPropertyValue(t).trim();if(!e)throw new Error(`Theme color variable '${t}' not found`);return e}catch(e){throw console.error(`Failed to get theme color '${t}':`,e),new Error(`Theme color '${t}' is required but not available`)}}createSparkles(t,e,i=8){if(this.isEnabled)for(let s=0;s<i;s++)this.particles.push(new Q(t,e))}createConfetti(t,e,i=20){if(this.isEnabled)for(let s=0;s<i;s++)this.particles.push(new K(t,e))}createGlowTrail(t,e,i=null){if(!this.isEnabled)return;const s=i||this.getThemeColor("--clear-glow-color");this.particles.push(new Z(t,e,s))}createScoreNumber(t,e,i,s=null){if(!this.isEnabled)return;const o=s||this.getThemeColor("--clear-glow-color");this.particles.push(new J(t,e,i,o))}createLevelUpEffect(t,e){this.isEnabled&&(this.createConfetti(t,e,30),this.createSparkles(t,e,15),this.particles.push(new tt(t,e)))}createComboEffect(t,e,i){this.isEnabled&&(this.createSparkles(t,e,i*3),this.particles.push(new et(t,e,i)))}update(){if(this.isEnabled){for(let t=this.particles.length-1;t>=0;t--){const e=this.particles[t];e.update(),e.isDead()&&this.particles.splice(t,1)}this.particles.length>this.maxParticles&&(this.particles=this.particles.slice(-this.maxParticles))}}render(){if(this.isEnabled){this.ctx.save();for(const t of this.particles)t.render(this.ctx);this.ctx.restore()}}animate(){this.update(),this.render(),requestAnimationFrame(()=>this.animate())}clear(){this.particles=[]}}class v{constructor(t,e){this.x=t,this.y=e,this.vx=0,this.vy=0,this.life=1,this.maxLife=1,this.size=1,this.color="#ffffff",this.alpha=1}update(){this.x+=this.vx,this.y+=this.vy,this.life-=.016,this.alpha=this.life}isDead(){return this.life<=0}render(t){}}class Q extends v{constructor(t,e){super(t,e),this.vx=(Math.random()-.5)*4,this.vy=(Math.random()-.5)*4,this.maxLife=.8,this.life=this.maxLife,this.size=Math.random()*3+1,this.color=`hsl(${Math.random()*60+40}, 100%, 70%)`,this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.2}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.1}render(t){t.save(),t.globalAlpha=this.alpha,t.translate(this.x,this.y),t.rotate(this.rotation),t.fillStyle=this.color,t.fillRect(-this.size/2,-this.size/2,this.size,this.size),t.restore()}}class K extends v{constructor(t,e){super(t,e),this.vx=(Math.random()-.5)*8,this.vy=Math.random()*-6-2,this.maxLife=2,this.life=this.maxLife,this.size=Math.random()*4+2,this.colors=["#ff6b6b","#4ecdc4","#45b7d1","#96ceb4","#feca57","#ff9ff3"],this.color=this.colors[Math.floor(Math.random()*this.colors.length)],this.rotation=Math.random()*Math.PI*2,this.rotationSpeed=(Math.random()-.5)*.3}update(){super.update(),this.rotation+=this.rotationSpeed,this.vy+=.3,this.vx*=.98}render(t){t.save(),t.globalAlpha=this.alpha,t.translate(this.x,this.y),t.rotate(this.rotation),t.fillStyle=this.color,t.fillRect(-this.size/2,-this.size/2,this.size,this.size),t.restore()}}class Z extends v{constructor(t,e,i){super(t,e),this.vx=(Math.random()-.5)*2,this.vy=(Math.random()-.5)*2,this.maxLife=.5,this.life=this.maxLife,this.size=Math.random()*6+3,this.color=i}update(){super.update(),this.size*=.98}render(t){t.save(),t.globalAlpha=this.alpha*.6,t.fillStyle=this.color,t.shadowColor=this.color,t.shadowBlur=10,t.beginPath(),t.arc(this.x,this.y,this.size,0,Math.PI*2),t.fill(),t.restore()}}class J extends v{constructor(t,e,i,s){super(t,e),this.vx=0,this.vy=-2,this.maxLife=1.5,this.life=this.maxLife,this.score=i,this.color=s,this.fontSize=20}update(){super.update(),this.fontSize+=.5}render(t){t.save(),t.globalAlpha=this.alpha,t.fillStyle=this.color,t.font=`bold ${this.fontSize}px Arial`,t.textAlign="center",t.shadowColor="rgba(0, 0, 0, 0.5)",t.shadowBlur=2,t.fillText(`+${this.score}`,this.x,this.y),t.restore()}}class tt extends v{constructor(t,e){super(t,e),this.vx=0,this.vy=-1,this.maxLife=2,this.life=this.maxLife,this.text="LEVEL UP!",this.color="#ffd700",this.fontSize=24}update(){super.update(),this.fontSize+=.3}render(t){t.save(),t.globalAlpha=this.alpha,t.fillStyle=this.color,t.font=`bold ${this.fontSize}px Arial`,t.textAlign="center",t.shadowColor="rgba(0, 0, 0, 0.8)",t.shadowBlur=4,t.fillText(this.text,this.x,this.y),t.restore()}}class et extends v{constructor(t,e,i){super(t,e),this.vx=0,this.vy=-1.5,this.maxLife=1.5,this.life=this.maxLife,this.text=`${i}x COMBO!`,this.color="#ff6b6b",this.fontSize=18}update(){super.update(),this.fontSize+=.2}render(t){t.save(),t.globalAlpha=this.alpha,t.fillStyle=this.color,t.font=`bold ${this.fontSize}px Arial`,t.textAlign="center",t.shadowColor="rgba(0, 0, 0, 0.8)",t.shadowBlur=3,t.fillText(this.text,this.x,this.y),t.restore()}}class it{constructor(){this.isEnabled=!0,this.isSupported=this.checkSupport(),this.userHasInteracted=!1,this.lastVibrationTime=0,this.vibrationThrottle=100,this.vibrationPatterns={light:[10],medium:[20],heavy:[50],success:[20,10,20],error:[100],blockPlace:[15],lineClear:[30,10,30],levelUp:[50,20,50],combo:[25,10,25,10,25],buttonClick:[5]},this.setupUserInteractionListener()}checkSupport(){return"vibrate"in navigator}setupUserInteractionListener(){const t=()=>{this.userHasInteracted=!0,document.removeEventListener("click",t),document.removeEventListener("touchstart",t),document.removeEventListener("keydown",t)};document.addEventListener("click",t,{once:!0}),document.addEventListener("touchstart",t,{once:!0}),document.addEventListener("keydown",t,{once:!0})}setEnabled(t){this.isEnabled=t}enableAfterInteraction(){this.userHasInteracted=!0}vibrate(t){if(!this.isEnabled||!this.isSupported||!this.userHasInteracted)return;const e=Date.now();if(!(e-this.lastVibrationTime<this.vibrationThrottle))try{typeof t=="string"&&(t=this.vibrationPatterns[t]||[10]),navigator.vibrate(t),this.lastVibrationTime=e}catch(i){console.warn("Haptic feedback error:",i)}}onBlockPlace(){this.vibrate("blockPlace")}onLineClear(){this.vibrate("lineClear")}onLevelUp(){this.vibrate("levelUp")}onCombo(t){t>=1&&this.vibrate("combo")}onError(){this.vibrate("error")}onButtonClick(){this.vibrate("buttonClick")}onSuccess(){this.vibrate("success")}onCustom(t){this.vibrate(t)}stop(){this.isSupported&&navigator.vibrate(0)}getStatus(){return{isEnabled:this.isEnabled,isSupported:this.isSupported,userHasInteracted:this.userHasInteracted,lastVibrationTime:this.lastVibrationTime,vibrationThrottle:this.vibrationThrottle}}}class st{constructor(t,e){this.canvas=t,this.ctx=e,this.particles=new V(t,e),this.sound=new G,this.haptic=new it,this.settings={particles:!0,sound:!1,haptic:!0}}updateSettings(t){this.settings={...this.settings,...t},this.particles.setEnabled(this.settings.particles),this.sound.setEnabled(this.settings.sound),this.haptic.setEnabled(this.settings.haptic)}setVolume(t){this.sound.setVolume(t)}getThemeColor(t){try{const e=getComputedStyle(document.documentElement).getPropertyValue(t).trim();if(!e)throw new Error(`Theme color variable '${t}' not found`);return e}catch(e){throw console.error(`Failed to get theme color '${t}':`,e),new Error(`Theme color '${t}' is required but not available`)}}onBlockPlace(t,e){this.particles.createSparkles(t,e,6),this.settings.sound&&this.sound.play("blockPlace"),this.haptic.onBlockPlace()}onLineClear(t,e,i){const s=i.rows.length+i.columns.length+i.squares.length;this.particles.createConfetti(t,e,s*5),this.settings.sound&&this.sound.play("lineClear"),this.haptic.onLineClear()}onLevelUp(t,e){this.particles.createLevelUpEffect(t,e),this.settings.sound&&this.sound.play("levelUp"),this.haptic.onLevelUp()}onCombo(t,e,i){this.particles.createComboEffect(t,e,i),this.settings.sound&&this.sound.play("combo"),this.haptic.onCombo(i)}onScoreGain(t,e,i){const s=this.getThemeColor("--clear-glow-color");this.particles.createScoreNumber(t,e,i,s),this.settings.sound&&this.sound.play("scoreGain")}onError(){this.settings.sound&&this.sound.play("error"),this.haptic.onError()}onButtonClick(){this.settings.sound&&this.sound.play("buttonClick"),this.haptic.enableAfterInteraction(),this.haptic.onButtonClick()}onBlockRotate(){this.settings.sound&&this.sound.play("blockRotate")}onBlockMove(t,e,i=null){const s=i||this.getThemeColor("--clear-glow-color");this.particles.createGlowTrail(t,e,s)}update(){this.particles.update()}render(){this.particles.render()}clear(){this.particles.clear()}resume(){this.sound.resume()}stop(){this.particles.clear(),this.sound.stop(),this.haptic.stop()}}class ot{constructor(){var t;console.log("BlockdokuGame constructor called"),this.canvas=document.getElementById("game-board"),this.ctx=this.canvas.getContext("2d"),this.boardSize=9,this.cellSize=0,console.log("About to initialize board...");try{this.board=this.initializeBoard(),console.log("Board initialized in constructor:",this.board?"SUCCESS":"FAILED","Length:",(t=this.board)==null?void 0:t.length),console.log("Board contents:",this.board)}catch(e){console.error("ERROR during board initialization:",e),this.board=null}this.score=0,this.level=1,this.currentTheme="light",this.previousScore=0,this.previousLevel=1,this.previousCombo=0,this.pendingClears=null,this.difficulty="normal",this.enableHints=!1,this.enableTimer=!1,this.moveLimit=null,this.timeLimit=null,this.blockManager=new W,this.blockPalette=new U("block-palette",this.blockManager),this.scoringSystem=new N,this.storage=new $,this.pwaInstallManager=new O,this.offlineManager=new D,this.difficultyManager=new j,this.hintSystem=new Y(this,this.difficultyManager),this.timerSystem=new _(this.difficultyManager),this.difficultySelector=new X(this,this.difficultyManager),this.effectsManager=new st(this.canvas,this.ctx),this.confirmationDialog=new A,this.preGameOverPending=!1,this.selectedBlock=null,this.previewPosition=null,this.isGameOver=!1,this.isInitialized=!1,this.comboModeActive="streak",this.comboModesUsed=new Set,this.isDragging=!1,this.dragStartPosition=null,this.dragCurrentPosition=null,this.dragBlockElement=null;try{console.log("About to load settings..."),this.loadSettings(),console.log("Settings loaded, setting isInitialized..."),this.isInitialized=!0,console.log("About to call init()..."),this.init(),console.log("Init completed, setting up resize handler..."),this.setupResizeHandler(),console.log("Constructor completed successfully")}catch(e){console.error("ERROR in constructor after board init:",e)}window.addEventListener("focus",()=>{this.loadSettings(),this.updateDifficultyButton(),this.renderPersonalBests(),this.isGameOver||(console.log("Focus event: reloading game state from settings"),this.loadGameState(),this.render())}),window.addEventListener("storage",e=>{(e.key==="blockdoku-settings"||e.key==="blockdoku_settings")&&(this.loadSettings(),this.updateDifficultyButton(),this.renderPersonalBests(),this.isGameOver||(console.log("Storage change: reloading game state after settings change"),this.loadGameState(),this.render()))})}resizeCanvas(){const t=this.canvas.parentElement;if(!t)return;const e=t.getBoundingClientRect(),i=Math.min(e.width,e.height);this.cellSize=Math.floor(i/this.boardSize),this.cellSize*this.boardSize,this.canvas.width=i,this.canvas.height=i,this.canvas.style.width=i+"px",this.canvas.style.height=i+"px",this.actualCellSize=i/this.boardSize,this.gridCellSize=this.cellSize,this.mouseCellSize=this.actualCellSize,this.ctx.imageSmoothingEnabled=!1,this.ctx.lineCap="square",this.ctx.lineJoin="miter"}initializeBoard(){console.log("initializeBoard called, boardSize:",this.boardSize);const t=[];for(let e=0;e<this.boardSize;e++){t[e]=[];for(let i=0;i<this.boardSize;i++)t[e][i]=0}return console.log("initializeBoard created board with length:",t.length),t}setupResizeHandler(){window.addEventListener("resize",()=>{this.resizeCanvas(),requestAnimationFrame(()=>{this.drawBoard()})})}init(){var t;console.log("Game init() called"),console.log("Board state at start of init():",this.board?"VALID":"UNDEFINED","Length:",(t=this.board)==null?void 0:t.length),this.setupEventListeners(),this.registerServiceWorker(),this.loadGameState(),this.generateNewBlocks(),this.timerSystem.initialize(),setTimeout(()=>{this.resizeCanvas(),requestAnimationFrame(()=>{this.drawBoard(),this.updateUI(),this.renderPersonalBests()})},100),this.isInitialized=!0,this.startGameLoop(),console.log("About to initialize PWA managers..."),this.initializePWAManagers().then(()=>{console.log("PWA managers initialization completed")}).catch(e=>{console.error("PWA managers initialization failed:",e)}),this.updateDifficultyButton(),this.renderPersonalBests()}async registerServiceWorker(){if("serviceWorker"in navigator)try{if(window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1"){console.log("PWA: Skipping Service Worker registration in development mode");return}const e=await navigator.serviceWorker.register("./sw.js");console.log("PWA: Service Worker registered successfully",e),e.addEventListener("updatefound",()=>{console.log("PWA: Service Worker update found")})}catch(t){console.log("PWA: Service Worker registration failed (this is normal in development mode)",t.message)}}async initializePWAManagers(){try{console.log("Initializing PWA managers...");const t=await I(()=>import("./sound-manager-BRLdBeEu.js").then(i=>i.i),__vite__mapDeps([0,1]),import.meta.url),e=await I(()=>Promise.resolve().then(()=>F),void 0,import.meta.url);this.pwaInstallManager=new t.PWAInstallManager,this.offlineManager=new e.OfflineManager,console.log("PWA managers initialized successfully"),console.log("PWAInstallManager:",this.pwaInstallManager),console.log("OfflineManager:",this.offlineManager)}catch(t){console.error("Error initializing PWA managers:",t),this.pwaInstallManager=null,this.offlineManager=null}}startGameLoop(){const t=()=>{this.update(),this.draw(),requestAnimationFrame(t)};t()}update(){this.isGameOver||(this.effectsManager.update(),this.hintSystem&&this.hintSystem.update(16),this.timerSystem&&(!this.timerSystem.update(16)&&this.timerSystem.isTimeUp()&&this.isInitialized&&this.handleTimeUp(),this.updateTimerDisplay()),this.updatePlaceabilityIndicators())}draw(){this.drawBoard(),this.effectsManager.render()}setupEventListeners(){console.log("Setting up event listeners..."),this.canvas.addEventListener("click",n=>this.handleCanvasClick(n)),this.canvas.addEventListener("mousemove",n=>this.handleCanvasMouseMove(n)),this.canvas.addEventListener("mouseleave",()=>this.handleCanvasMouseLeave()),this.canvas.addEventListener("touchstart",n=>this.handleTouchStart(n),{passive:!1}),this.canvas.addEventListener("touchmove",n=>this.handleTouchMove(n),{passive:!1}),this.canvas.addEventListener("touchend",n=>this.handleTouchEnd(n),{passive:!1}),this.canvas.addEventListener("touchcancel",n=>this.handleTouchCancel(n),{passive:!1}),document.addEventListener("touchmove",n=>this.handleGlobalTouchMove(n),{passive:!1}),document.addEventListener("touchend",n=>this.handleGlobalTouchEnd(n),{passive:!1}),document.addEventListener("touchcancel",n=>this.handleGlobalTouchCancel(n),{passive:!1});const t=document.getElementById("settings-toggle");if(t){const n=()=>{this.effectsManager.onButtonClick(),console.log("Settings button clicked - navigating to settings page"),this.isGameOver||(console.log("Saving game state before navigating to settings"),this.saveGameState()),window.location.href="settings.html"};t.addEventListener("click",n),t.addEventListener("touchstart",r=>{r.preventDefault(),n()},{passive:!1})}else console.error("Settings toggle button not found!");const e=document.getElementById("new-game");if(e){const n=()=>{this.effectsManager.onButtonClick(),this.newGame()};e.addEventListener("click",n),e.addEventListener("touchstart",r=>{r.preventDefault(),n()},{passive:!1})}else console.error("New game button not found!");const i=document.getElementById("difficulty-btn");if(i){const n=()=>{this.effectsManager.onButtonClick(),this.difficultySelector.show();const r=document.querySelectorAll("#difficulty-selector");r.length>1&&r.forEach((c,h)=>{h>0&&c.parentNode&&c.parentNode.removeChild(c)})};i.addEventListener("click",n),i.addEventListener("touchstart",r=>{r.preventDefault(),n()},{passive:!1})}else console.error("Difficulty button not found!");const s=document.getElementById("hint-btn");if(s){const n=()=>{this.effectsManager.onButtonClick(),this.hintSystem.showHint()};s.addEventListener("click",n),s.addEventListener("touchstart",r=>{r.preventDefault(),n()},{passive:!1})}else console.error("Hint button not found!");const o=document.getElementById("close-high-scores");o&&o.addEventListener("click",()=>this.hideHighScores());const a=document.getElementById("close-difficulty");a&&a.addEventListener("click",()=>this.hideDifficultyModal());const l=document.getElementById("close-settings");l&&l.addEventListener("click",()=>this.hideSettingsModal()),document.querySelectorAll(".difficulty-option").forEach(n=>{n.addEventListener("click",async r=>{await this.selectDifficulty(r.currentTarget.dataset.difficulty)})}),document.getElementById("enable-hints").addEventListener("change",n=>this.toggleSetting("hints",n.target.checked)),document.getElementById("enable-timer").addEventListener("change",n=>this.toggleSetting("timer",n.target.checked)),document.querySelectorAll(".theme-option").forEach(n=>{n.addEventListener("click",r=>this.selectTheme(r.currentTarget.dataset.theme))}),document.addEventListener("blockSelected",n=>this.handleBlockSelected(n)),document.addEventListener("blockDragStart",n=>this.handleBlockDragStart(n)),window.addEventListener("message",async n=>{n.data.type==="difficultyChanged"&&await this.selectDifficulty(n.data.difficulty)}),window.addEventListener("storage",n=>{(n.key==="blockdoku-settings"||n.key==="blockdoku_settings")&&(this.loadSettings(),this.updateHintControls())}),window.addEventListener("beforeunload",()=>{console.log("beforeunload event triggered, autoSave:",this.autoSave,"isGameOver:",this.isGameOver),this.autoSave&&!this.isGameOver&&this.saveGameState()}),document.addEventListener("visibilitychange",()=>{console.log("visibilitychange event triggered, hidden:",document.hidden,"autoSave:",this.autoSave,"isGameOver:",this.isGameOver),document.hidden&&this.autoSave&&!this.isGameOver&&this.saveGameState()})}getBlockCenterOffset(t){const e=t.length,i=t[0].length;let s=0,o=0,a=0;for(let l=0;l<e;l++)for(let n=0;n<i;n++)t[l][n]===1&&(s+=l,o+=n,a++);return a===0?{row:0,col:0}:(s=Math.round(s/a),o=Math.round(o/a),{row:s,col:o})}getBlockDragOffset(t){return{row:0,col:0}}getBlockPlacementOffset(t){return this.getBlockCenterOffset(t)}handleCanvasClick(t){if(this.isGameOver||!this.selectedBlock)return;const e=this.canvas.getBoundingClientRect(),i=t.clientX-e.left,s=t.clientY-e.top,o=Math.floor(i/this.mouseCellSize),a=Math.floor(s/this.mouseCellSize),l=this.getBlockCenterOffset(this.selectedBlock.shape),n=a-l.row,r=o-l.col;this.canPlaceBlock(n,r)&&this.placeBlock(n,r)}handleCanvasMouseMove(t){if(!this.selectedBlock)return;const e=this.canvas.getBoundingClientRect(),i=t.clientX-e.left,s=t.clientY-e.top,o=Math.floor(i/this.mouseCellSize),a=Math.floor(s/this.mouseCellSize),l=this.getBlockCenterOffset(this.selectedBlock.shape),n=a-l.row,r=o-l.col;this.previewPosition={row:n,col:r},this.drawBoard()}handleCanvasMouseLeave(){this.previewPosition=null,this.drawBoard()}handleTouchStart(t){if(t.preventDefault(),this.isGameOver||!this.selectedBlock)return;const e=t.touches[0],i=this.canvas.getBoundingClientRect(),s=e.clientX-i.left,o=e.clientY-i.top;this.isDragging=!0,this.dragStartPosition={x:s,y:o},this.dragCurrentPosition={x:s,y:o},this.createDragElement();const a=Math.floor(s/this.mouseCellSize),l=Math.floor(o/this.mouseCellSize),n=this.getBlockPlacementOffset(this.selectedBlock.shape),r=l-n.row,c=a-n.col;this.previewPosition={row:r,col:c},this.drawBoard()}handleTouchMove(t){if(this.isGameOver||!this.isDragging||!this.selectedBlock)return;t.preventDefault();const e=t.touches[0],i=this.canvas.getBoundingClientRect(),s=e.clientX-i.left,o=e.clientY-i.top;this.dragCurrentPosition={x:e.clientX,y:e.clientY},this.updateDragElement(e.clientX,e.clientY);const a=Math.floor(s/this.mouseCellSize),l=Math.floor(o/this.mouseCellSize),n=this.getBlockPlacementOffset(this.selectedBlock.shape),r=l-n.row,c=a-n.col;this.previewPosition={row:r,col:c},this.drawBoard()}handleTouchEnd(t){if(t.preventDefault(),this.isGameOver||!this.isDragging||!this.selectedBlock)return;const e=t.changedTouches[0],i=this.canvas.getBoundingClientRect(),s=e.clientX-i.left,o=e.clientY-i.top,a=Math.floor(s/this.mouseCellSize),l=Math.floor(o/this.mouseCellSize),n=this.getBlockPlacementOffset(this.selectedBlock.shape),r=l-n.row,c=a-n.col;this.canPlaceBlock(r,c)?this.placeBlock(r,c):this.effectsManager.onError(),this.cleanupDrag()}handleTouchCancel(t){t.cancelable&&t.preventDefault(),this.cleanupDrag()}handleGlobalTouchMove(t){if(this.isGameOver||!this.isDragging||!this.selectedBlock)return;t.preventDefault();const e=t.touches[0];this.dragCurrentPosition={x:e.clientX,y:e.clientY},this.updateDragElement(e.clientX,e.clientY);const i=this.canvas.getBoundingClientRect(),s=e.clientX-i.left,l=e.clientY-i.top-2.5*this.mouseCellSize,n=Math.floor(s/this.mouseCellSize),r=Math.floor(l/this.mouseCellSize),c=this.getBlockPlacementOffset(this.selectedBlock.shape),h=r-c.row,u=n-c.col,d=u*this.mouseCellSize,f=h*this.mouseCellSize;d>=0&&d<=i.width&&f>=0&&f<=i.height?(this.previewPosition={row:h,col:u},this.drawBoard()):(this.previewPosition=null,this.drawBoard())}handleGlobalTouchEnd(t){if(this.isGameOver||!this.isDragging||!this.selectedBlock)return;t.preventDefault();const e=t.changedTouches[0],i=this.canvas.getBoundingClientRect(),s=e.clientX-i.left,l=e.clientY-i.top-2.5*this.mouseCellSize,n=Math.floor(s/this.mouseCellSize),r=Math.floor(l/this.mouseCellSize),c=this.getBlockPlacementOffset(this.selectedBlock.shape),h=r-c.row,u=n-c.col,d=u*this.mouseCellSize,f=h*this.mouseCellSize;d>=0&&d<=i.width&&f>=0&&f<=i.height&&(this.canPlaceBlock(h,u)?this.placeBlock(h,u):this.effectsManager.onError()),this.cleanupDrag()}handleGlobalTouchCancel(t){t.cancelable&&t.preventDefault(),this.cleanupDrag()}createDragElement(){this.dragBlockElement&&this.dragBlockElement.remove(),this.dragBlockElement=null}updateDragElement(t,e){}drawBlockOnCanvas(t,e,i){const s=i/Math.max(e.shape.length,e.shape[0].length);t.fillStyle=e.color,t.strokeStyle=this.darkenColor(e.color),t.lineWidth=1;for(let o=0;o<e.shape.length;o++)for(let a=0;a<e.shape[o].length;a++)if(e.shape[o][a]===1){const l=a*s,n=o*s;t.fillRect(l,n,s,s),t.strokeRect(l,n,s,s)}}darkenColor(t){const e=t.replace("#",""),i=Math.max(0,parseInt(e.substr(0,2),16)-30),s=Math.max(0,parseInt(e.substr(2,2),16)-30),o=Math.max(0,parseInt(e.substr(4,2),16)-30);return`#${i.toString(16).padStart(2,"0")}${s.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}`}getThemeColor(t){try{const e=getComputedStyle(document.documentElement).getPropertyValue(t).trim();if(!e)throw new Error(`Theme color variable '${t}' not found`);return e}catch(e){throw console.error(`Failed to get theme color '${t}':`,e),new Error(`Theme color '${t}' is required but not available`)}}getClearGlowColor(){try{return this.getThemeColor("--clear-glow-color")}catch{return{light:"#00ff00",dark:"#ff4444",wood:"#00aaff"}[this.currentTheme]||"#00ff00"}}cleanupDrag(){this.isDragging=!1,this.dragStartPosition=null,this.dragCurrentPosition=null,this.previewPosition=null,this.dragBlockElement&&(this.dragBlockElement.remove(),this.dragBlockElement=null),this.drawBoard()}handleBlockSelected(t){this.selectedBlock=t.detail.block,this.previewPosition=null,this.drawBoard()}handleBlockDragStart(t){const{block:e,touch:i}=t.detail;this.selectedBlock=e,this.isDragging=!0,this.dragStartPosition={x:i.clientX,y:i.clientY},this.dragCurrentPosition={x:i.clientX,y:i.clientY},this.createDragElement();const s=this.canvas.getBoundingClientRect(),o=i.clientX-s.left,a=i.clientY-s.top,l=Math.floor(o/this.mouseCellSize),n=Math.floor(a/this.mouseCellSize),r=this.getBlockPlacementOffset(e.shape),c=n-r.row,h=l-r.col;this.previewPosition={row:c,col:h},this.drawBoard()}canPlaceBlock(t,e){return this.selectedBlock?(this.board||(console.error("canPlaceBlock: Board is undefined! Reinitializing..."),this.board=this.initializeBoard(),this.updatePlaceabilityIndicators()),this.blockManager.canPlaceBlock(this.selectedBlock,t,e,this.board)):!1}generateNewBlocks(){const t=this.blockManager.generateRandomBlocks(3,"all",this.difficultyManager);this.blockPalette.updateBlocks(t),this.autoSelectNextBlock()}autoSelectNextBlock(){if(this.blockManager.currentBlocks.length>0){const t=this.blockManager.currentBlocks[0];this.selectedBlock=t,this.blockPalette.selectBlockById(t.id)}}toggleCell(t,e){this.board[t][e]=this.board[t][e]===0?1:0}drawBoard(){if(this.cellSize===0||this.canvas.width===0)return;const t=this.ctx,e=this.actualCellSize||this.cellSize;t.clearRect(0,0,this.canvas.width,this.canvas.height),t.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--board-bg"),t.fillRect(0,0,this.canvas.width,this.canvas.height),t.strokeStyle=getComputedStyle(document.documentElement).getPropertyValue("--grid-line"),t.lineWidth=1;const i=this.canvas.width,s=this.canvas.height;for(let o=0;o<=this.boardSize;o++){const a=Math.round(o*e);t.beginPath(),t.moveTo(a,0),t.lineTo(a,s),t.stroke()}for(let o=0;o<=this.boardSize;o++){const a=Math.round(o*e);t.beginPath(),t.moveTo(0,a),t.lineTo(i,a),t.stroke()}t.lineWidth=2;for(let o=0;o<=3;o++){const a=Math.round(o*3*e),l=Math.round(o*3*e);t.beginPath(),t.moveTo(a,0),t.lineTo(a,s),t.stroke(),t.beginPath(),t.moveTo(0,l),t.lineTo(i,l),t.stroke()}if(!this.board||!Array.isArray(this.board)){if(console.error("EMERGENCY: drawBoard - Board is not initialized properly, reinitializing..."),this.board=this.initializeBoard(),!this.board){console.error("FATAL: Could not initialize board in drawBoard");return}this.updatePlaceabilityIndicators()}t.fillStyle=getComputedStyle(document.documentElement).getPropertyValue("--block-color");for(let o=0;o<this.boardSize;o++){if(!this.board[o]||!Array.isArray(this.board[o])){console.warn(`drawBoard: Board row ${o} is not initialized properly`);continue}for(let a=0;a<this.boardSize;a++)if(this.board[o][a]===1){const l=Math.round(a*e)+1,n=Math.round(o*e)+1,r=Math.round(e)-2;t.fillRect(l,n,r,r),t.strokeStyle=getComputedStyle(document.documentElement).getPropertyValue("--block-border"),t.lineWidth=1,t.strokeRect(l,n,r,r)}}if(this.selectedBlock&&this.previewPosition&&(this.drawPreviewBlock(),this.difficulty==="easy"||this.difficulty==="normal")){const o=this.previewPosition.row,a=this.previewPosition.col;if(this.canPlaceBlock(o,a)){const l=this.blockManager.placeBlock(this.selectedBlock,o,a,this.board),n=this.scoringSystem.checkForCompletedLines(l);(n.rows.length||n.columns.length||n.squares.length)&&this.drawClearingBlockGlow(n,{subtle:!0})}}this.difficultyManager.isHintsEnabled()&&this.hintSystem.drawHints(t),this.pendingClears&&this.drawClearingBlockGlow(this.pendingClears)}toggleTheme(){const t=["light","dark","wood"],i=(t.indexOf(this.currentTheme)+1)%t.length;this.applyTheme(t[i]),this.drawBoard()}selectTheme(t){this.applyTheme(t)}drawPreviewBlock(){if(!this.selectedBlock||!this.previewPosition)return;const t=this.ctx,e=this.actualCellSize||this.cellSize,i=this.selectedBlock.shape,s=this.previewPosition.row,o=this.previewPosition.col,a=this.canPlaceBlock(s,o);t.fillStyle=a?this.selectedBlock.color+"80":"#ff000080",t.strokeStyle=a?this.selectedBlock.color:"#ff0000",t.lineWidth=2;for(let l=0;l<i.length;l++)for(let n=0;n<i[l].length;n++)if(i[l][n]===1){const r=o+n,c=s+l;if(r>=0&&r<this.boardSize&&c>=0&&c<this.boardSize){const h=Math.round(r*e)+1,u=Math.round(c*e)+1,d=Math.round(e)-2;t.fillRect(h,u,d,d),t.strokeRect(h,u,d,d)}}}checkLineClears(){if(this.pendingClears){console.log("Skipping line clear check - animation in progress");return}if(!this.board||!Array.isArray(this.board)){console.error("Invalid board state in checkLineClears, reinitializing..."),this.board=this.initializeBoard();return}const t=this.scoringSystem.checkForCompletedLines(this.board);t.rows.length>0||t.columns.length>0||t.squares.length>0?(console.log("Lines detected for clearing:",t),this.showImmediateClearFeedback(t),this.startLineClearAnimation(t)):console.log("No lines detected for clearing")}startLineClearAnimation(t){console.log("Starting line clear animation for:",t),this.highlightClearingBlocks(t),setTimeout(()=>{console.log("Timeout reached, calling completeLineClear"),this.completeLineClear(t)},750)}showImmediateClearFeedback(t){this.pendingClears=t,this.ctx.save();const e=this.getClearGlowColor();this.ctx.fillStyle=e,this.ctx.globalAlpha=.2,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,this.ctx.restore(),this.canvas.style.border=`1px solid ${e}`,this.canvas.style.boxShadow=`0 0 5px ${e}`,setTimeout(()=>{this.canvas.style.border="",this.canvas.style.boxShadow=""},300),this.drawBoard();const i=this.canvas.width/2,s=this.canvas.height/2;this.showQuickClearNotification(i,s,t)}drawClearingBlockGlow(t,e={}){const{subtle:i=!1}=e;this.ctx.save();const s=this.actualCellSize||this.cellSize,o=this.getClearGlowColor();this.ctx.shadowColor=o,this.ctx.shadowBlur=i?2:4,this.ctx.strokeStyle=o,this.ctx.lineWidth=i?.5:1,this.ctx.globalAlpha=i?.2:.4,t.rows.forEach(a=>{for(let l=0;l<this.boardSize;l++)if(this.board[a][l]===1){const n=l*s,r=a*s,c=i?3:2;this.ctx.strokeRect(n+c,r+c,s-c*2,s-c*2)}}),t.columns.forEach(a=>{for(let l=0;l<this.boardSize;l++)if(this.board[l][a]===1){const n=a*s,r=l*s,c=i?3:2;this.ctx.strokeRect(n+c,r+c,s-c*2,s-c*2)}}),t.squares.forEach(a=>{const l=a.row*3,n=a.col*3;for(let r=0;r<3;r++)for(let c=0;c<3;c++){const h=l+r,u=n+c;if(this.board[h][u]===1){const d=u*s,f=h*s,g=i?3:2;this.ctx.strokeRect(d+g,f+g,s-g*2,s-g*2)}}}),this.ctx.shadowBlur=0,this.ctx.strokeStyle="#ffffff",this.ctx.lineWidth=i?.5:.75,this.ctx.globalAlpha=i?.25:.5,t.rows.forEach(a=>{for(let l=0;l<this.boardSize;l++)if(this.board[a][l]===1){const n=l*s,r=a*s,c=i?5:4;this.ctx.strokeRect(n+c,r+c,s-c*2,s-c*2)}}),t.columns.forEach(a=>{for(let l=0;l<this.boardSize;l++)if(this.board[l][a]===1){const n=a*s,r=l*s,c=i?5:4;this.ctx.strokeRect(n+c,r+c,s-c*2,s-c*2)}}),t.squares.forEach(a=>{const l=a.row*3,n=a.col*3;for(let r=0;r<3;r++)for(let c=0;c<3;c++){const h=l+r,u=n+c;if(this.board[h][u]===1){const d=u*s,f=h*s,g=i?5:4;this.ctx.strokeRect(d+g,f+g,s-g*2,s-g*2)}}}),this.ctx.restore()}showQuickClearNotification(t,e,i){this.ctx.save();const s=i.rows.length+i.columns.length+i.squares.length;let o="";s===1?i.rows.length>0?o="ROW!":i.columns.length>0?o="COLUMN!":i.squares.length>0&&(o="SQUARE!"):o=`${s} CLEARS!`,this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillRect(t-80,e-20,160,40);const a=this.getClearGlowColor();this.ctx.strokeStyle=a,this.ctx.lineWidth=3,this.ctx.strokeRect(t-80,e-20,160,40),this.ctx.fillStyle=a,this.ctx.font="bold 24px Arial",this.ctx.textAlign="center",this.ctx.fillText(o,t,e+8),this.ctx.restore(),setTimeout(()=>{this.drawBoard()},400)}highlightClearingBlocks(t){this.drawBoard();const e=this.ctx,i=this.actualCellSize||this.cellSize,s=this.getClearGlowColor();e.save(),e.globalAlpha=.7,t.rows.forEach(o=>{e.fillStyle=s,e.fillRect(0,o*i,this.canvas.width,i)}),t.columns.forEach(o=>{e.fillStyle=s,e.fillRect(o*i,0,i,this.canvas.height)}),t.squares.forEach(o=>{e.fillStyle=s;const a=o.col*3*i,l=o.row*3*i;e.fillRect(a,l,3*i,3*i)}),e.restore()}completeLineClear(t){var a;console.log("completeLineClear called with:",t);let e,i;try{this.pendingClears=null,console.log("Applying clears to board...");const l=this.scoringSystem.getScore(),n=this.difficultyManager.getScoreMultiplier();e=this.scoringSystem.applyClears(this.board,t,n),console.log("Clears applied, result:",e),this.board=e.board,this.score=this.scoringSystem.getScore(),i=this.scoringSystem.getCombo(),this.level=this.scoringSystem.getLevel(),console.log("Line clear completed successfully. New score:",this.score,"New level:",this.level)}catch(l){console.error("Error during line clear completion:",l),this.pendingClears=null;return}this.createLineClearEffect(t);const s=this.canvas.width/2,o=this.canvas.height/2;this.effectsManager.onLineClear(s,o,t),this.createScorePopup(s,o,e.scoreGained,t,e.isCombo,i,((a=this.storage.loadSettings())==null?void 0:a.comboDisplayMode)||"streak"),i>=1&&(this.createComboEffect(i,s,o+50),this.effectsManager.onCombo(s,o+50,i)),this.updateUI(),this.updatePlaceabilityIndicators(),setTimeout(()=>{this.checkLineClears()},200)}newGame(){this.score>0&&this.checkHighScore(),this.board=this.initializeBoard(),this.scoringSystem.reset(),this.score=0,this.level=1,this.selectedBlock=null,this.previewPosition=null,this.isGameOver=!1,this.isInitialized=!0,this.comboModeActive="streak",this.comboModesUsed=new Set,this.updatePlaceabilityIndicators(),this.previousScore=0,this.previousLevel=1,this.previousCombo=0,this.generateNewBlocks(),this.drawBoard(),this.updateUI(),this.storage.clearGameState()}restartWithDifficulty(t){console.log(`Restarting game with difficulty: ${t}`),this.difficultyManager.setDifficulty(t),this.updateDifficultyButton(),this.timerSystem.initialize(),this.timerSystem.start(),this.hintSystem.reset(),this.newGame()}updateUI(){const t=document.getElementById("score"),e=document.getElementById("level"),i=document.getElementById("combo"),s=document.getElementById("combo-label"),o=this.scoringSystem.getCombo(),a=this.scoringSystem.getComboTotal?this.scoringSystem.getComboTotal():this.scoringSystem.comboActivations||0,n=this.storage.loadSettings().comboDisplayMode||"streak";this.comboModeActive=n,this.comboModesUsed.add(n),this.previousScore===0&&this.score>0?this.animateFirstScore(t):this.score>this.previousScore&&this.animateScoreIncrease(t),this.level>this.previousLevel&&this.animateLevelUp(e),o>this.previousCombo&&o>=1&&this.animateComboHit(i),t.textContent=this.score,e.textContent=this.level,s&&(s.textContent="Combo"),n==="cumulative"?i.textContent=a:i.textContent=o,this.previousScore=this.score,this.previousLevel=this.level,this.previousCombo=o,this.updateHintControls(),this.renderPersonalBests()}renderPersonalBests(){try{const t=document.getElementById("personal-bests");if(!t)return;if(!(this.storage.loadSettings().showHighScore===!0)){t.style.display="none";return}const s=this.storage.getBestScoresByDifficulty();t.innerHTML=`
                <span class="pb-item"><span class="pb-label">Easy</span><span class="pb-value">${(s.easy||0).toLocaleString()}</span></span>
                <span class="pb-item"><span class="pb-label">Normal</span><span class="pb-value">${(s.normal||0).toLocaleString()}</span></span>
                <span class="pb-item"><span class="pb-label">Hard</span><span class="pb-value">${(s.hard||0).toLocaleString()}</span></span>
                <span class="pb-item"><span class="pb-label">Expert</span><span class="pb-value">${(s.expert||0).toLocaleString()}</span></span>
            `,t.style.display="inline-flex"}catch(t){console.warn("renderPersonalBests failed:",t)}}updateHintControls(){const t=document.getElementById("hint-controls"),e=document.getElementById("hint-btn");if(t&&e){const i=this.difficultyManager.isHintsEnabled();if(t.style.display=i?"block":"none",i){const s=this.hintSystem.getHintStatus();e.disabled=!s.available,e.textContent=s.available?"💡 Hint":`💡 Hint (${Math.ceil(s.cooldownRemaining/1e3)}s)`}}}updateTimerDisplay(){const t=document.getElementById("timer-display"),e=document.getElementById("timer");if(t&&e&&this.timerSystem){const i=this.difficultyManager.getTimeLimit()!==null;if(t.style.display=i?"block":"none",i){const s=this.timerSystem.getTimeRemaining();e.textContent=this.timerSystem.formatTime(s),t.classList.remove("warning","critical"),this.timerSystem.isCriticalTime()?t.classList.contains("critical")||(t.classList.add("critical"),this.effectsManager.sound.play("timeCritical")):this.timerSystem.isWarningTime()&&(t.classList.contains("warning")||(t.classList.add("warning"),this.effectsManager.sound.play("timeWarning"))),e.style.color="",e.style.textShadow="",e.style.animation=""}}}handleTimeUp(){this.effectsManager.onError(),this.gameOver()}showTimeBonus(t){this.effectsManager.onScoreGain(t);const e=this.canvas;this.ctx;const i=e.width/2,s=e.height/2;this.effectsManager.particles.createFloatingText(i,s-50,`+${t}s`,this.getClearGlowColor(),2e3)}updateDifficultyButton(){const t=document.getElementById("difficulty-btn");if(t){const e=this.difficultyManager.getCurrentDifficulty(),i=this.difficultyManager.getDifficultyInfo();t.classList.remove("easy","normal","hard","expert"),t.classList.add(e),t.textContent=i.name,t.title=`Current difficulty: ${i.name} - ${i.description}`}}createLineClearEffect(t){const e=this.getClearGlowColor();this.ctx.fillStyle=e,this.ctx.globalAlpha=.8,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,setTimeout(()=>{this.ctx.fillStyle="#ffffff",this.ctx.globalAlpha=.6,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.globalAlpha=1,setTimeout(()=>{this.drawBoard()},150)},100)}createScorePopup(t,e,i,s={rows:[],columns:[],squares:[]},o=!1,a=0,l="streak"){var b,y,S;this.ctx.save(),this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(t-60,e-20,120,40);const n=this.getClearGlowColor();this.ctx.strokeStyle=n,this.ctx.lineWidth=2,this.ctx.strokeRect(t-60,e-20,120,40);const r=(((b=s==null?void 0:s.rows)==null?void 0:b.length)||0)+(((y=s==null?void 0:s.columns)==null?void 0:y.length)||0),c=((S=s==null?void 0:s.squares)==null?void 0:S.length)||0,h=[];r>0&&h.push(`${r} line${r>1?"s":""}`),c>0&&h.push(`${c} square${c>1?"s":""}`);const u=h.length?h.join(" + "):"Placement";this.ctx.fillStyle=n,this.ctx.font="bold 22px Arial",this.ctx.textAlign="center",this.ctx.fillText(`+${i}`,t,e),this.ctx.fillStyle="#ffffff",this.ctx.font="bold 14px Arial";const d=o?l==="cumulative"?` • COMBO x${a} (total)`:` • COMBO x${a}`:"";this.ctx.fillText(`${u}${d}`,t,e+18),this.ctx.restore();let f=0;const g=()=>{if(f<60){this.ctx.save(),this.ctx.globalAlpha=1-f/60,this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(t-70,e-24-f*2,140,48),this.ctx.strokeStyle=n,this.ctx.lineWidth=2,this.ctx.strokeRect(t-70,e-24-f*2,140,48),this.ctx.fillStyle=n,this.ctx.font="bold 22px Arial",this.ctx.textAlign="center",this.ctx.fillText(`+${i}`,t,e-4-f*2),this.ctx.fillStyle="#ffffff",this.ctx.font="bold 14px Arial";const k=o?l==="cumulative"?` • COMBO x${a} (total)`:` • COMBO x${a}`:"";this.ctx.fillText(`${u}${k}`,t,e+14-f*2),this.ctx.restore(),f++,requestAnimationFrame(g)}else this.drawBoard()};setTimeout(()=>{requestAnimationFrame(g)},200)}createComboEffect(t,e,i){this.ctx.save(),this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillRect(e-80,i-15,160,30),this.ctx.strokeStyle="#ff6600",this.ctx.lineWidth=2,this.ctx.strokeRect(e-80,i-15,160,30),this.ctx.fillStyle="#ff6600",this.ctx.font="bold 24px Arial",this.ctx.textAlign="center",this.ctx.fillText(`${t}x COMBO!`,e,i+5),this.ctx.restore();let s=0;const o=()=>{if(s<60){this.ctx.save();const a=1+Math.sin(s*.3)*.2;this.ctx.scale(a,a),this.ctx.globalAlpha=1-s/60,this.ctx.fillStyle="rgba(0, 0, 0, 0.8)",this.ctx.fillRect((e-80)/a,(i-15)/a,160/a,30/a),this.ctx.strokeStyle="#ff6600",this.ctx.lineWidth=2,this.ctx.strokeRect((e-80)/a,(i-15)/a,160/a,30/a),this.ctx.fillStyle="#ff6600",this.ctx.font="bold 24px Arial",this.ctx.textAlign="center",this.ctx.fillText(`${t}x COMBO!`,e/a,(i+5)/a),this.ctx.restore(),s++,requestAnimationFrame(o)}else this.drawBoard()};setTimeout(()=>{requestAnimationFrame(o)},300)}animateFirstScore(t){t.style.transition="all 0.6s ease-out",t.style.transform="scale(1.5)";const e=this.getClearGlowColor();t.style.color=e,t.style.textShadow=`0 0 10px ${e}`,setTimeout(()=>{t.style.transform="scale(1)",t.style.color="",t.style.textShadow=""},600)}animateScoreIncrease(t){t.style.transition="all 0.3s ease-out",t.style.transform="scale(1.2)",t.style.color=this.getClearGlowColor(),setTimeout(()=>{t.style.transform="scale(1)",t.style.color=""},300)}animateLevelUp(t){t.style.transition="all 0.8s ease-out",t.style.transform="scale(1.4) rotate(5deg)",t.style.color="#ff6600",t.style.textShadow="0 0 15px #ff6600";const e=this.canvas.width/2,i=this.canvas.height/2;this.effectsManager.onLevelUp(e,i),this.showEncouragingLevelMessage(),setTimeout(()=>{t.style.transform="scale(1) rotate(0deg)",t.style.color="",t.style.textShadow=""},800)}showEncouragingLevelMessage(){const t=this.ctx,e=this.canvas.width/2,i=this.canvas.height/2-60,s=this.getEncouragementText();t.save(),t.fillStyle="rgba(0, 0, 0, 0.75)",t.fillRect(e-140,i-24,280,48),t.strokeStyle="#ff6600",t.lineWidth=2,t.strokeRect(e-140,i-24,280,48),t.fillStyle="#ffcc66",t.font="bold 18px Arial",t.textAlign="center",t.fillText(s,e,i+6),t.restore(),setTimeout(()=>this.drawBoard(),1200)}getEncouragementText(){var o,a;const t=this.level,e=((a=(o=this.difficultyManager)==null?void 0:o.getCurrentDifficulty)==null?void 0:a.call(o))||this.difficulty||"normal",i={easy:["Great rhythm! Keep building streaks!","Nice clears! Try planning two moves ahead.","You’re cruising—consider Normal soon!"],normal:["Clean plays! Eye the 3x3 squares.","Strong pace—chain those clears!","Feeling comfy? Hard might be fun!"],hard:["Impressive! Combos are your friend.","Great foresight—minimize leftover singles.","Dominating Hard? Expert awaits."],expert:["Elite moves! Stay calm under the clock.","Precision play—keep the board breathable.","Excellent focus—push that high score!"]},s=i[e]||i.normal;return s[(t-1)%s.length]}animateComboHit(t){t.style.transition="all 0.5s ease-out",t.style.transform="scale(1.3)",t.style.color="#ff0066",t.style.textShadow="0 0 12px #ff0066";let e=0;const i=()=>{e<3?(t.style.transform=e%2===0?"scale(1.3)":"scale(1.1)",e++,setTimeout(i,150)):(t.style.transform="scale(1)",t.style.color="",t.style.textShadow="")};setTimeout(i,200)}loadSettings(){const t=this.storage.loadSettings();this.currentTheme=t.theme,this.applyTheme(t.theme)}loadGameState(){const t=this.storage.loadGameState();t?(console.log("Loading saved game state:",t),this.board=t.board||this.initializeBoard(),this.score=t.score||0,this.level=t.level||1,this.scoringSystem.score=this.score,this.scoringSystem.level=this.level,t.scoringState&&(this.scoringSystem.linesCleared=t.scoringState.linesCleared||0,this.scoringSystem.combo=t.scoringState.combo||0,this.scoringSystem.maxCombo=t.scoringState.maxCombo||0,this.scoringSystem.rowsClearedCount=t.scoringState.rowsClearedCount||0,this.scoringSystem.columnsClearedCount=t.scoringState.columnsClearedCount||0,this.scoringSystem.squaresClearedCount=t.scoringState.squaresClearedCount||0,this.scoringSystem.comboActivations=t.scoringState.comboActivations||0,this.scoringSystem.pointsBreakdown=t.scoringState.pointsBreakdown||{linePoints:0,squarePoints:0,comboBonusPoints:0}),t.currentBlocks&&(this.blockManager.currentBlocks=t.currentBlocks,this.blockPalette.updateBlocks(t.currentBlocks)),t.selectedBlock&&(this.selectedBlock=t.selectedBlock),this.updatePlaceabilityIndicators(),console.log("Game state loaded successfully")):(console.log("No saved game state found - preserving current board state"),(!this.board||!Array.isArray(this.board))&&(this.board=this.initializeBoard()))}saveGameState(){if(!(this.score>0||this.board&&this.board.some(i=>i.some(s=>s===1))||this.blockManager.currentBlocks&&this.blockManager.currentBlocks.length>0)){console.log("No game progress to save, skipping save");return}const e={board:this.board,score:this.score,level:this.level,currentBlocks:this.blockManager.currentBlocks,selectedBlock:this.selectedBlock,scoringState:{linesCleared:this.scoringSystem.linesCleared,combo:this.scoringSystem.combo,maxCombo:this.scoringSystem.maxCombo,rowsClearedCount:this.scoringSystem.rowsClearedCount,columnsClearedCount:this.scoringSystem.columnsClearedCount,squaresClearedCount:this.scoringSystem.squaresClearedCount,comboActivations:this.scoringSystem.comboActivations,pointsBreakdown:this.scoringSystem.pointsBreakdown}};console.log("Saving game state:",e),this.storage.saveGameState(e),console.log("Game state saved successfully")}loadSettings(){if(this.storage){const t=this.storage.loadSettings();this.currentTheme=t.theme||"light",this.soundEnabled=t.soundEnabled===!0,this.animationsEnabled=t.animationsEnabled!==!1,this.difficulty=t.difficulty||"normal",this.autoSave=t.autoSave!==!1,this.enableHints=t.enableHints||!1,this.enableTimer=t.enableTimer||!1,this.showPoints=t.showPoints||!1,this.particlesEnabled=t.particlesEnabled!==!1,this.hapticEnabled=t.hapticEnabled!==!1;const e=localStorage.getItem("blockdoku_pending_difficulty");e&&(this.difficulty=e,localStorage.removeItem("blockdoku_pending_difficulty")),this.applyTheme(this.currentTheme),this.difficultyManager&&this.difficultyManager.setDifficulty(this.difficulty),this.applyEffectsSettings(),this.updateBlockPointsDisplay()}}saveSettings(){const t={theme:this.currentTheme,soundEnabled:this.soundEnabled,animationsEnabled:this.animationsEnabled,difficulty:this.difficulty,autoSave:this.autoSave,enableHints:this.enableHints,enableTimer:this.enableTimer,showPoints:this.showPoints,particlesEnabled:this.particlesEnabled,hapticEnabled:this.hapticEnabled};this.storage&&this.storage.saveSettings(t)}updateBlockPointsDisplay(){const t=this.showPoints||!1;document.querySelectorAll(".block-info").forEach(i=>{t?i.classList.add("show-points"):i.classList.remove("show-points")})}applyEffectsSettings(){this.effectsManager&&this.effectsManager.updateSettings({particles:this.particlesEnabled!==!1,sound:this.soundEnabled===!0,haptic:this.hapticEnabled!==!1})}applyTheme(t){this.currentTheme=t;let e=document.getElementById("theme-css");e||(e=document.createElement("link"),e.rel="stylesheet",e.id="theme-css",document.head.appendChild(e)),e.href=`css/themes/${t}.css`;try{Array.from(document.querySelectorAll('link[rel="stylesheet"]')).filter(a=>(a.getAttribute("href")||"").includes("/assets/wood-")||(a.href||"").includes("/assets/wood-")).forEach(a=>{a.disabled=t!=="wood"})}catch{}const i=document.getElementById("theme-css-light"),s=document.getElementById("theme-css-dark");i&&(i.media="all"),s&&(s.media="all"),document.documentElement.setAttribute("data-theme",t),document.body.className=document.body.className.replace(/light-theme|dark-theme|wood-theme/g,""),document.body.classList.add(`${t}-theme`),this.pendingClears&&(console.log("Clearing pending clears due to theme switch"),this.pendingClears=null),setTimeout(()=>{this.render()},50),this.saveSettings()}checkHighScore(){const t=this.getStats();return this.storage.saveStatistics(t),this.storage.isHighScore(t.score)?(this.storage.saveHighScore(t),!0):!1}getHighScores(){return this.storage.getHighScores()}getStatistics(){return this.storage.loadStatistics()}gameOver(){if(this.isGameOver)return;this.isGameOver=!0,console.log("Game Over! Final Score:",this.score),this.stopGameLoop();const t=this.getStats();this.checkHighScore(),this.loadHighScores(),this.showGameOverModal(t),this.saveGameState(),this.storage&&this.storage.clearGameState&&this.storage.clearGameState()}stopGameLoop(){this.gameRunning=!1,this.animationId&&(cancelAnimationFrame(this.animationId),this.animationId=null)}showGameOverModal(t){var w,M,C,P;const e=document.getElementById("game-over-modal");e&&e.remove();const i=document.createElement("div");i.id="game-over-modal",i.style.cssText=`
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 10000;
            font-family: Arial, sans-serif;
        `;const s=document.createElement("div");s.style.cssText=`
            background: var(--card-bg, #2c3e50);
            color: var(--text-color, white);
            padding: 30px;
            border-radius: 15px;
            text-align: center;
            max-width: 400px;
            width: 90%;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
            border: 2px solid var(--primary-color, #3498db);
        `;const o=this.storage.isHighScore(t.score),a=((M=(w=t.difficulty)==null?void 0:w.toUpperCase)==null?void 0:M.call(w))||this.difficulty.toUpperCase(),l=t.difficultyMultiplier||((P=(C=this.difficultyManager)==null?void 0:C.getScoreMultiplier)==null?void 0:P.call(C))||1,n=t.breakdown||{linePoints:0,squarePoints:0,comboBonusPoints:0},r={rows:t.rowClears||0,columns:t.columnClears||0,squares:t.squareClears||0},c=new Set(t.comboModesUsed||[]),h=c.has("streak")||c.size===0,u=c.has("cumulative"),d=h&&u?`<p style="margin: 5px 0;">Max Streak: ${t.maxCombo}</p><p style="margin: 5px 0;">Total Combos: ${t.comboActivations||0}</p>`:u?`<p style="margin: 5px 0;">Total Combos: ${t.comboActivations||0}</p>`:`<p style="margin: 5px 0;">Max Streak: ${t.maxCombo}</p>`;s.innerHTML=`
			<h2 style="margin: 0 0 20px 0; color: var(--primary-color, #3498db);">Game Over!</h2>
			<div style="margin: 15px 0;">
				<p style="margin: 5px 0; font-size: 1.2em;"><strong>Final Score: ${t.score}</strong></p>
				<p style="margin: 5px 0;">Level: ${t.level}</p>
				<p style="margin: 5px 0;">Lines Cleared: ${t.linesCleared}</p>
                ${d}
				<p style="margin: 5px 0;">Difficulty: ${a} (x${l})</p>
				${o?'<p style="color: #ffd700; font-weight: bold; margin: 10px 0;">🎉 New High Score! 🎉</p>':""}
			</div>
			<div style="text-align: left; background: rgba(255,255,255,0.03); padding: 12px; border-radius: 10px; border: 1px solid rgba(255,255,255,0.1);">
				<div style="display: grid; grid-template-columns: 1fr 1fr; gap: 10px;">
					<div>
						<h3 style="margin: 0 0 6px 0; color: var(--primary-color, #3498db); font-size: 1em;">Clears</h3>
						<p style="margin: 4px 0;">Rows: <strong>${r.rows}</strong></p>
						<p style="margin: 4px 0;">Columns: <strong>${r.columns}</strong></p>
						<p style="margin: 4px 0;">3x3 Squares: <strong>${r.squares}</strong></p>
					</div>
					<div>
						<h3 style="margin: 0 0 6px 0; color: var(--primary-color, #3498db); font-size: 1em;">Score Breakdown</h3>
						<p style="margin: 4px 0;">Lines: <strong>${n.linePoints.toLocaleString()}</strong></p>
						<p style="margin: 4px 0;">Squares: <strong>${n.squarePoints.toLocaleString()}</strong></p>
						<p style="margin: 4px 0;">Combo Bonus: <strong>${n.comboBonusPoints.toLocaleString()}</strong></p>
					</div>
				</div>
			</div>
			<div style="margin-top: 18px; display: flex; justify-content: center; flex-wrap: wrap;">
				<button id="new-game-btn" style="margin: 5px; padding: 12px 24px; background: #4CAF50; color: white; border: none; border-radius: 8px; cursor: pointer; font-size: 1em; font-weight: bold;">
					New Game
				</button>
				<button id="share-score-btn" style="margin: 5px; padding: 12px 24px; background: var(--primary-color, #3498db); color: white; border: none; border-radius: 8px; cursor: pointer; font-size: 1em; font-weight: bold;">
					Share
				</button>
				<button id="close-modal-btn" style="margin: 5px; padding: 12px 24px; background: #f44336; color: white; border: none; border-radius: 8px; cursor: pointer; font-size: 1em; font-weight: bold;">
					Close
				</button>
			</div>
		`,i.appendChild(s),document.body.appendChild(i);const f=document.getElementById("new-game-btn"),g=document.getElementById("close-modal-btn"),b=document.getElementById("share-score-btn"),y=()=>{i.remove(),this.isGameOver=!1,this.newGame()},S=()=>{i.remove()};f.addEventListener("click",y),f.addEventListener("touchstart",p=>{p.preventDefault(),y()},{passive:!1}),g.addEventListener("click",S),g.addEventListener("touchstart",p=>{p.preventDefault(),S()},{passive:!1});const k=async()=>{var p,T;try{const B=((T=(p=t.difficulty)==null?void 0:p.toUpperCase)==null?void 0:T.call(p))||this.difficulty.toUpperCase(),x=window.location&&window.location.origin?window.location.origin+window.location.pathname:window.location.href||"",R=h&&u?`Max Streak ${t.maxCombo}, Total Combos ${t.comboActivations||0}`:u?`Total Combos ${t.comboActivations||0}`:`Max Streak ${t.maxCombo}`,E=`I scored ${t.score} in Blockdoku (${B}) — Level ${t.level}, ${t.linesCleared} lines, ${R}!`;navigator.share?await navigator.share({title:"My Blockdoku Score",text:E,url:x}):navigator.clipboard&&navigator.clipboard.writeText?(await navigator.clipboard.writeText(`${E} ${x}`),alert("Share link copied to clipboard!")):window.prompt("Copy this to share:",`${E} ${x}`)}catch(B){console.error("Share failed:",B)}};b&&(b.addEventListener("click",k),b.addEventListener("touchstart",p=>{p.preventDefault(),k()},{passive:!1})),i.addEventListener("touchstart",p=>{p.preventDefault()},{passive:!1}),i.addEventListener("touchmove",p=>{p.preventDefault()},{passive:!1}),i.addEventListener("touchend",p=>{p.preventDefault()},{passive:!1})}getStats(){var i,s;const t=this.scoringSystem.getStats(),e=((s=(i=this.difficultyManager)==null?void 0:i.getScoreMultiplier)==null?void 0:s.call(i))||1;return{score:this.score,level:this.level,linesCleared:t.linesCleared,combo:t.combo,maxCombo:t.maxCombo,rowClears:t.rowClears,columnClears:t.columnClears,squareClears:t.squareClears,comboActivations:t.comboActivations,comboModesUsed:Array.from(this.comboModesUsed||[]),breakdown:t.breakdownBase,difficulty:this.difficulty,difficultyMultiplier:e}}showHighScores(){const t=document.getElementById("high-scores-modal"),e=document.getElementById("high-scores-list"),i=document.getElementById("statistics-display"),s=this.getHighScores();s.length===0?e.innerHTML="<p>No high scores yet. Play a game to set your first record!</p>":e.innerHTML=s.map((a,l)=>`
                <div class="score-item">
                    <span class="rank">#${l+1}</span>
                    <span class="score-value">${a.score.toLocaleString()}</span>
                    <span class="score-details">${(a.difficulty||"normal").toUpperCase()} • Level ${a.level} • ${a.linesCleared} lines • ${a.date}</span>
                </div>
            `).join("");const o=this.getStatistics();i.innerHTML=`
            <div class="stat-item">
                <span class="stat-label">Games Played:</span>
                <span class="stat-value">${o.gamesPlayed}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Score:</span>
                <span class="stat-value">${o.totalScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Best Score:</span>
                <span class="stat-value">${o.bestScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Lines:</span>
                <span class="stat-value">${o.totalLinesCleared}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Max Combo:</span>
                <span class="stat-value">${o.maxCombo}</span>
            </div>
        `,t.style.display="block"}hideHighScores(){const t=document.getElementById("high-scores-modal");t.style.display="none"}loadHighScores(){const t=document.getElementById("high-scores-list"),e=document.getElementById("statistics-display");if(!t||!e)return;const i=this.getHighScores();i.length===0?t.innerHTML="<p>No high scores yet. Play a game to set your first record!</p>":t.innerHTML=i.map((o,a)=>`
                <div class="score-item">
                    <span class="rank">#${a+1}</span>
                    <span class="score-value">${o.score.toLocaleString()}</span>
                    <span class="score-details">Level ${o.level} • ${o.linesCleared} lines • ${o.date}</span>
                </div>
            `).join("");const s=this.getStatistics();e.innerHTML=`
            <div class="stat-item">
                <span class="stat-label">Games Played:</span>
                <span class="stat-value">${s.gamesPlayed}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Total Score:</span>
                <span class="stat-value">${s.totalScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Best Score:</span>
                <span class="stat-value">${s.bestScore.toLocaleString()}</span>
            </div>
            <div class="stat-item">
				<span class="stat-label">Total Lines:</span>
				<span class="stat-value">${s.totalLinesCleared}</span>
            </div>
            <div class="stat-item">
                <span class="stat-label">Max Combo:</span>
                <span class="stat-value">${s.maxCombo}</span>
            </div>
        `}showDifficultyModal(){const t=document.getElementById("difficulty-modal");this.updateDifficultyUI(),t.style.display="block"}hideDifficultyModal(){const t=document.getElementById("difficulty-modal");t.style.display="none"}showSettingsModal(){console.log("showSettingsModal called");const t=document.getElementById("settings-modal");if(!t){console.error("Settings modal not found!");return}console.log("Settings modal found, showing..."),this.pwaInstallManager?(this.pwaInstallManager.createInstallButton(),this.pwaInstallManager.showInstallButton()):console.log("PWA Install Manager not available"),this.updateThemeUI(),this.updateDifficultyUI(),this.loadHighScores(),t.style.display="block",console.log("Settings modal should now be visible")}hideSettingsModal(){const t=document.getElementById("settings-modal");t.style.display="none"}updateDifficultyUI(){document.querySelectorAll(".difficulty-option").forEach(t=>{t.classList.remove("selected"),t.dataset.difficulty===this.difficulty&&t.classList.add("selected")}),document.getElementById("enable-hints").checked=this.enableHints,document.getElementById("enable-timer").checked=this.enableTimer}async selectDifficulty(t){(this.score>0||this.board&&this.board.some(i=>i.some(s=>s===1)))&&!await this.confirmationDialog.show(`Changing difficulty to ${t.toUpperCase()} will reset your current game and you'll lose your progress. Are you sure you want to continue?`)||(this.difficulty=t,this.difficultyManager&&this.difficultyManager.setDifficulty(t),this.applyDifficultySettings(),this.updateDifficultyUI(),this.updateDifficultyButton(),this.saveSettings())}selectTheme(t){this.gameRunning&&this.saveGameState(),this.blockPalette&&this.blockPalette.clearPlaceability&&this.blockPalette.clearPlaceability(),this.currentTheme=t,this.applyTheme(t),this.updateThemeUI(),this.saveSettings(),this.gameRunning&&(this.drawBoard(),setTimeout(()=>{this.updatePlaceabilityIndicators()},100))}updateThemeUI(){document.querySelectorAll(".theme-option").forEach(t=>{t.classList.remove("selected"),t.dataset.theme===this.currentTheme&&t.classList.add("selected")})}toggleSetting(t,e){switch(t){case"hints":this.enableHints=e;break;case"timer":this.enableTimer=e;break}this.saveSettings()}applyDifficultySettings(){switch(this.difficulty){case"easy":this.enableHints=!0,this.enableTimer=!1,this.moveLimit=null,this.timeLimit=null;break;case"normal":this.enableHints=!1,this.enableTimer=!1,this.moveLimit=null,this.timeLimit=null;break;case"hard":this.enableHints=!1,this.enableTimer=!1,this.moveLimit=50,this.timeLimit=null;break;case"expert":this.enableHints=!1,this.enableTimer=!0,this.moveLimit=30,this.timeLimit=300;break}}generateNewBlocks(){let t=3,e="all";switch(this.difficulty){case"easy":t=3,e="large";break;case"normal":t=3,e="all";break;case"hard":t=4,e="small";break;case"expert":t=5,e="complex";break}const i=this.blockManager.generateRandomBlocks(t,e,this.difficultyManager);this.blockPalette.updateBlocks(i),this.updateBlockPointsDisplay(),this.autoSelectNextBlock()}placeBlock(t,e){if(!this.canPlaceBlock(t,e))return;this.board=this.blockManager.placeBlock(this.selectedBlock,t,e,this.board);const i=this.canvas.width/2,s=this.canvas.height/2;this.effectsManager.onBlockPlace(i,s),this.blockManager.removeBlock(this.selectedBlock.id),this.selectedBlock=null,this.previewPosition=null,this.blockPalette.updateBlocks(this.blockManager.currentBlocks),this.drawBoard(),this.updatePlaceabilityIndicators(),this.checkLineClears(),this.autoSave&&this.saveGameState(),this.blockManager.currentBlocks.length===0&&this.generateNewBlocks(),this.isGameOver||this.checkGameOver(),this.autoSelectNextBlock()}checkGameOver(){if(this.board||(console.error("EMERGENCY: Board is undefined in checkGameOver, reinitializing..."),this.board=this.initializeBoard(),this.updatePlaceabilityIndicators()),!this.isInitialized||this.isGameOver||this.blockManager.currentBlocks.length===0)return;const t=this.computePlaceabilityMap();if(Object.values(t).some(i=>i)){this.preGameOverPending=!1;return}this.preGameOverPending||(this.preGameOverPending=!0,this.blockPalette&&this.blockPalette.showPreGameOverIndicator&&this.blockPalette.showPreGameOverIndicator(1250),setTimeout(()=>{this.isGameOver||(!Object.values(this.computePlaceabilityMap()).some(s=>s)?this.gameOver():this.preGameOverPending=!1)},1250))}updatePlaceabilityIndicators(){if(!this.blockManager||!this.blockPalette||!this.blockManager.currentBlocks||this.blockManager.currentBlocks.length===0)return;const t=this.computePlaceabilityMap(),e=Object.keys(t).filter(i=>t[i]);e.length===1?this.blockPalette.setPlaceability&&this.blockPalette.setPlaceability(t,{highlightLast:!0,durationMs:1250}):e.length===0||this.blockPalette.clearPlaceability&&this.blockPalette.clearPlaceability()}computePlaceabilityMap(){const t={};if(!this.blockManager||!this.blockManager.currentBlocks)return t;for(const e of this.blockManager.currentBlocks)t[e.id]=this.canPlaceAnywhere(e);return t}canPlaceAnywhere(t){for(let e=0;e<this.boardSize;e++)for(let i=0;i<this.boardSize;i++)if(this.blockManager.canPlaceBlock(t,e,i,this.board))return!0;return!1}}function z(){window.game=new ot}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",z):z();
